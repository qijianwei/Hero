var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var config = {
    debug: false,
    version: '1.0',
    release: 10
};
exports.default = config;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _AdventDialog = require("./gamescripts/dialog/AdventDialog");

var _AdventDialog2 = _interopRequireDefault(_AdventDialog);

var _AdventDialog3 = require("./gamescripts/dialog/AdventDialog5");

var _AdventDialog4 = _interopRequireDefault(_AdventDialog3);

var _AdventResultDialog = require("./gamescripts/dialog/AdventResultDialog");

var _AdventResultDialog2 = _interopRequireDefault(_AdventResultDialog);

var _AdventResultDialog3 = require("./gamescripts/dialog/AdventResultDialog5");

var _AdventResultDialog4 = _interopRequireDefault(_AdventResultDialog3);

var _BattleResultDialog = require("./gamescripts/dialog/BattleResultDialog");

var _BattleResultDialog2 = _interopRequireDefault(_BattleResultDialog);

var _White = require("./scripts/prefab/White");

var _White2 = _interopRequireDefault(_White);

var _PassResultDialog = require("./gamescripts/dialog/PassResultDialog");

var _PassResultDialog2 = _interopRequireDefault(_PassResultDialog);

var _WeaponBar = require("./gamescripts/prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _PassResultDialogLoseOne = require("./gamescripts/dialog/PassResultDialogLoseOne");

var _PassResultDialogLoseOne2 = _interopRequireDefault(_PassResultDialogLoseOne);

var _GameGuide = require("./gamescripts/GameGuide/GameGuide");

var _GameGuide2 = _interopRequireDefault(_GameGuide);

var _MPBar = require("./gamescripts/prefab/MPBar");

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require("./gamescripts/prefab/HPBar");

var _HPBar2 = _interopRequireDefault(_HPBar);

var _Dodge = require("./gamescripts/prefab/Dodge");

var _Dodge2 = _interopRequireDefault(_Dodge);

var _GameBanner = require("./gamescripts/prefab/GameBanner");

var _GameBanner2 = _interopRequireDefault(_GameBanner);

var _PlayerState = require("./gamescripts/prefab/PlayerState");

var _PlayerState2 = _interopRequireDefault(_PlayerState);

var _PlayerSkill = require("./gamescripts/prefab/PlayerSkill");

var _PlayerSkill2 = _interopRequireDefault(_PlayerSkill);

var _Skill = require("./gamescripts/prefab/Skill");

var _Skill2 = _interopRequireDefault(_Skill);

var _GameGuideControl = require("./gamescripts/gameGuide/GameGuideControl");

var _GameGuideControl2 = _interopRequireDefault(_GameGuideControl);

var _GameView = require("./gamescripts/GameView");

var _GameView2 = _interopRequireDefault(_GameView);

var _GameControl = require("./gamescripts/GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _Devour = require("./scripts/common/refiner/Devour");

var _Devour2 = _interopRequireDefault(_Devour);

var _DevourControl = require("./scripts/common/refiner/DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

var _Grading = require("./scripts/common/figure/Grading");

var _Grading2 = _interopRequireDefault(_Grading);

var _GradingControl = require("./scripts/common/figure/GradingControl");

var _GradingControl2 = _interopRequireDefault(_GradingControl);

var _LoadingView = require("./scripts/common/Loading/LoadingView");

var _LoadingView2 = _interopRequireDefault(_LoadingView);

var _LoadingControl = require("./scripts/common/Loading/LoadingControl");

var _LoadingControl2 = _interopRequireDefault(_LoadingControl);

var _MatchView = require("./scripts/common/Match/MatchView");

var _MatchView2 = _interopRequireDefault(_MatchView);

var _MatchControl = require("./scripts/common/Match/MatchControl");

var _MatchControl2 = _interopRequireDefault(_MatchControl);

var _Refining = require("./scripts/common/refiner/Refining");

var _Refining2 = _interopRequireDefault(_Refining);

var _RefiningControl = require("./scripts/common/refiner/RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

var _Sign = require("./scripts/common/sign/Sign");

var _Sign2 = _interopRequireDefault(_Sign);

var _SignControl = require("./scripts/common/sign/SignControl");

var _SignControl2 = _interopRequireDefault(_SignControl);

var _Swordsman = require("./scripts/common/figure/Swordsman");

var _Swordsman2 = _interopRequireDefault(_Swordsman);

var _SwordsmanControl = require("./scripts/common/figure/SwordsmanControl");

var _SwordsmanControl2 = _interopRequireDefault(_SwordsmanControl);

var _WeaponList = require("./scripts/common/task/WeaponList");

var _WeaponList2 = _interopRequireDefault(_WeaponList);

var _WeaponListControl = require("./scripts/common/task/WeaponListControl");

var _WeaponListControl2 = _interopRequireDefault(_WeaponListControl);

var _WeaponHouse = require("./scripts/common/weapon/WeaponHouse");

var _WeaponHouse2 = _interopRequireDefault(_WeaponHouse);

var _WeaponHouseControl = require("./scripts/common/weapon/WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

var _WeaponStore = require("./scripts/common/weapon/WeaponStore");

var _WeaponStore2 = _interopRequireDefault(_WeaponStore);

var _WeaponStoreControl = require("./scripts/common/weapon/WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

var _Wheel = require("./scripts/common/wheel/Wheel");

var _Wheel2 = _interopRequireDefault(_Wheel);

var _WheelControl = require("./scripts/common/wheel/WheelControl");

var _WheelControl2 = _interopRequireDefault(_WheelControl);

var _BuyWp = require("./scripts/dialog/adventure/BuyWp");

var _BuyWp2 = _interopRequireDefault(_BuyWp);

var _ChangeWp = require("./scripts/dialog/adventure/ChangeWp");

var _ChangeWp2 = _interopRequireDefault(_ChangeWp);

var _GetAward = require("./scripts/dialog/adventure/GetAward");

var _GetAward2 = _interopRequireDefault(_GetAward);

var _Award = require("./scripts/dialog/common/Award");

var _Award2 = _interopRequireDefault(_Award);

var _BuyWheelTimes = require("./scripts/dialog/common/BuyWheelTimes");

var _BuyWheelTimes2 = _interopRequireDefault(_BuyWheelTimes);

var _Rank = require("./scripts/dialog/common/Rank");

var _Rank2 = _interopRequireDefault(_Rank);

var _Task = require("./scripts/dialog/common/Task");

var _Task2 = _interopRequireDefault(_Task);

var _BuyHero = require("./scripts/dialog/figure/BuyHero");

var _BuyHero2 = _interopRequireDefault(_BuyHero);

var _GetNewSkill = require("./scripts/dialog/figure/GetNewSkill");

var _GetNewSkill2 = _interopRequireDefault(_GetNewSkill);

var _SkillDetail = require("./scripts/dialog/figure/SkillDetail");

var _SkillDetail2 = _interopRequireDefault(_SkillDetail);

var _Canlock = require("./scripts/dialog/refiner/Canlock");

var _Canlock2 = _interopRequireDefault(_Canlock);

var _DiamondLack = require("./scripts/dialog/weapon/DiamondLack");

var _DiamondLack2 = _interopRequireDefault(_DiamondLack);

var _GoldLack = require("./scripts/dialog/weapon/GoldLack");

var _GoldLack2 = _interopRequireDefault(_GoldLack);

var _StoreSure = require("./scripts/dialog/weapon/StoreSure");

var _StoreSure2 = _interopRequireDefault(_StoreSure);

var _UnlockFifth = require("./scripts/dialog/weapon/UnlockFifth");

var _UnlockFifth2 = _interopRequireDefault(_UnlockFifth);

var _UnlockFour = require("./scripts/dialog/weapon/UnlockFour");

var _UnlockFour2 = _interopRequireDefault(_UnlockFour);

var _UnlockTips = require("./scripts/dialog/weapon/UnlockTips");

var _UnlockTips2 = _interopRequireDefault(_UnlockTips);

var _BeanBox = require("./scripts/prefab/BeanBox");

var _BeanBox2 = _interopRequireDefault(_BeanBox);

var _HomeControl = require("./scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _Cross = require("./gamescripts/prefab/Cross");

var _Cross2 = _interopRequireDefault(_Cross);

var _SpeakMan = require("./gamescripts/gameGuide/SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

var _Player = require("./gamescripts/prefab/Player");

var _Player2 = _interopRequireDefault(_Player);

var _PreOpenView = require("./gamescripts/preOpen/PreOpenView");

var _PreOpenView2 = _interopRequireDefault(_PreOpenView);

var _Weapon = require("./gamescripts/prefab/Weapon");

var _Weapon2 = _interopRequireDefault(_Weapon);

var _WeaponSkill = require("./gamescripts/prefab/WeaponSkill");

var _WeaponSkill2 = _interopRequireDefault(_WeaponSkill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
				function GameConfig() {
								_classCallCheck(this, GameConfig);
				}

				_createClass(GameConfig, null, [{
								key: "init",
								value: function init() {
												//注册Script或者Runtime引用
												var reg = Laya.ClassUtils.regClass;
												reg("gamescripts/dialog/AdventDialog.js", _AdventDialog2.default);
												reg("gamescripts/dialog/AdventDialog5.js", _AdventDialog4.default);
												reg("gamescripts/dialog/AdventResultDialog.js", _AdventResultDialog2.default);
												reg("gamescripts/dialog/AdventResultDialog5.js", _AdventResultDialog4.default);
												reg("gamescripts/dialog/BattleResultDialog.js", _BattleResultDialog2.default);
												reg("scripts/prefab/White.js", _White2.default);
												reg("gamescripts/dialog/PassResultDialog.js", _PassResultDialog2.default);
												reg("gamescripts/prefab/WeaponBar.js", _WeaponBar2.default);
												reg("gamescripts/dialog/PassResultDialogLoseOne.js", _PassResultDialogLoseOne2.default);
												reg("gamescripts/GameGuide/GameGuide.js", _GameGuide2.default);
												reg("gamescripts/prefab/MPBar.js", _MPBar2.default);
												reg("gamescripts/prefab/HPBar.js", _HPBar2.default);
												reg("gamescripts/prefab/Dodge.js", _Dodge2.default);
												reg("gamescripts/prefab/GameBanner.js", _GameBanner2.default);
												reg("gamescripts/prefab/PlayerState.js", _PlayerState2.default);
												reg("gamescripts/prefab/PlayerSkill.js", _PlayerSkill2.default);
												reg("gamescripts/prefab/Skill.js", _Skill2.default);
												reg("gamescripts/gameGuide/GameGuideControl.js", _GameGuideControl2.default);
												reg("gamescripts/GameView.js", _GameView2.default);
												reg("gamescripts/GameControl.js", _GameControl2.default);
												reg("scripts/common/refiner/Devour.js", _Devour2.default);
												reg("scripts/common/refiner/DevourControl.js", _DevourControl2.default);
												reg("scripts/common/figure/Grading.js", _Grading2.default);
												reg("scripts/common/figure/GradingControl.js", _GradingControl2.default);
												reg("scripts/common/Loading/LoadingView.js", _LoadingView2.default);
												reg("scripts/common/Loading/LoadingControl.js", _LoadingControl2.default);
												reg("scripts/common/Match/MatchView.js", _MatchView2.default);
												reg("scripts/common/Match/MatchControl.js", _MatchControl2.default);
												reg("scripts/common/refiner/Refining.js", _Refining2.default);
												reg("scripts/common/refiner/RefiningControl.js", _RefiningControl2.default);
												reg("scripts/common/sign/Sign.js", _Sign2.default);
												reg("scripts/common/sign/SignControl.js", _SignControl2.default);
												reg("scripts/common/figure/Swordsman.js", _Swordsman2.default);
												reg("scripts/common/figure/SwordsmanControl.js", _SwordsmanControl2.default);
												reg("scripts/common/task/WeaponList.js", _WeaponList2.default);
												reg("scripts/common/task/WeaponListControl.js", _WeaponListControl2.default);
												reg("scripts/common/weapon/WeaponHouse.js", _WeaponHouse2.default);
												reg("scripts/common/weapon/WeaponHouseControl.js", _WeaponHouseControl2.default);
												reg("scripts/common/weapon/WeaponStore.js", _WeaponStore2.default);
												reg("scripts/common/weapon/WeaponStoreControl.js", _WeaponStoreControl2.default);
												reg("scripts/common/wheel/Wheel.js", _Wheel2.default);
												reg("scripts/common/wheel/WheelControl.js", _WheelControl2.default);
												reg("scripts/dialog/adventure/BuyWp.js", _BuyWp2.default);
												reg("scripts/dialog/adventure/ChangeWp.js", _ChangeWp2.default);
												reg("scripts/dialog/adventure/GetAward.js", _GetAward2.default);
												reg("scripts/dialog/common/Award.js", _Award2.default);
												reg("scripts/dialog/common/BuyWheelTimes.js", _BuyWheelTimes2.default);
												reg("scripts/dialog/common/Rank.js", _Rank2.default);
												reg("scripts/dialog/common/Task.js", _Task2.default);
												reg("scripts/dialog/figure/BuyHero.js", _BuyHero2.default);
												reg("scripts/dialog/figure/GetNewSkill.js", _GetNewSkill2.default);
												reg("scripts/dialog/figure/SkillDetail.js", _SkillDetail2.default);
												reg("scripts/dialog/refiner/Canlock.js", _Canlock2.default);
												reg("scripts/dialog/weapon/DiamondLack.js", _DiamondLack2.default);
												reg("scripts/dialog/weapon/GoldLack.js", _GoldLack2.default);
												reg("scripts/dialog/weapon/StoreSure.js", _StoreSure2.default);
												reg("scripts/dialog/weapon/UnlockFifth.js", _UnlockFifth2.default);
												reg("scripts/dialog/weapon/UnlockFour.js", _UnlockFour2.default);
												reg("scripts/dialog/weapon/UnlockTips.js", _UnlockTips2.default);
												reg("scripts/prefab/BeanBox.js", _BeanBox2.default);
												reg("scripts/common/HomeControl.js", _HomeControl2.default);
												reg("gamescripts/prefab/Cross.js", _Cross2.default);
												reg("gamescripts/gameGuide/SpeakMan.js", _SpeakMan2.default);
												reg("gamescripts/prefab/Player.js", _Player2.default);
												reg("gamescripts/preOpen/PreOpenView.js", _PreOpenView2.default);
												reg("gamescripts/prefab/Weapon.js", _Weapon2.default);
												reg("gamescripts/prefab/WeaponSkill.js", _WeaponSkill2.default);
								}
				}]);

				return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 1134;
GameConfig.height = 750;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "horizontal";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "gamescenes/dialog/PassResultDialogLose2.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./gamescripts/GameControl":4,"./gamescripts/GameGuide/GameGuide":5,"./gamescripts/GameView":6,"./gamescripts/dialog/AdventDialog":11,"./gamescripts/dialog/AdventDialog5":12,"./gamescripts/dialog/AdventResultDialog":13,"./gamescripts/dialog/AdventResultDialog5":14,"./gamescripts/dialog/BattleResultDialog":16,"./gamescripts/dialog/PassResultDialog":17,"./gamescripts/dialog/PassResultDialogLoseOne":18,"./gamescripts/gameGuide/GameGuideControl":19,"./gamescripts/gameGuide/SpeakMan":21,"./gamescripts/preOpen/PreOpenView":23,"./gamescripts/prefab/Cross":24,"./gamescripts/prefab/Dodge":25,"./gamescripts/prefab/GameBanner":26,"./gamescripts/prefab/HPBar":27,"./gamescripts/prefab/MPBar":28,"./gamescripts/prefab/Player":29,"./gamescripts/prefab/PlayerSkill":30,"./gamescripts/prefab/PlayerState":31,"./gamescripts/prefab/Skill":33,"./gamescripts/prefab/Weapon":34,"./gamescripts/prefab/WeaponBar":35,"./gamescripts/prefab/WeaponSkill":36,"./scripts/common/HomeControl":38,"./scripts/common/Loading/LoadingControl":39,"./scripts/common/Loading/LoadingView":40,"./scripts/common/Match/MatchControl":41,"./scripts/common/Match/MatchView":42,"./scripts/common/figure/Grading":43,"./scripts/common/figure/GradingControl":44,"./scripts/common/figure/Swordsman":45,"./scripts/common/figure/SwordsmanControl":46,"./scripts/common/refiner/Devour":47,"./scripts/common/refiner/DevourControl":48,"./scripts/common/refiner/Refining":49,"./scripts/common/refiner/RefiningControl":50,"./scripts/common/sign/Sign":51,"./scripts/common/sign/SignControl":52,"./scripts/common/task/WeaponList":53,"./scripts/common/task/WeaponListControl":54,"./scripts/common/weapon/WeaponHouse":57,"./scripts/common/weapon/WeaponHouseControl":58,"./scripts/common/weapon/WeaponStore":59,"./scripts/common/weapon/WeaponStoreControl":60,"./scripts/common/wheel/Wheel":61,"./scripts/common/wheel/WheelControl":62,"./scripts/dialog/adventure/BuyWp":63,"./scripts/dialog/adventure/ChangeWp":64,"./scripts/dialog/adventure/GetAward":65,"./scripts/dialog/common/Award":66,"./scripts/dialog/common/BuyWheelTimes":67,"./scripts/dialog/common/Rank":68,"./scripts/dialog/common/Task":69,"./scripts/dialog/figure/BuyHero":70,"./scripts/dialog/figure/GetNewSkill":71,"./scripts/dialog/figure/SkillDetail":72,"./scripts/dialog/refiner/Canlock":73,"./scripts/dialog/weapon/DiamondLack":74,"./scripts/dialog/weapon/GoldLack":75,"./scripts/dialog/weapon/StoreSure":76,"./scripts/dialog/weapon/UnlockFifth":77,"./scripts/dialog/weapon/UnlockFour":78,"./scripts/dialog/weapon/UnlockTips":79,"./scripts/prefab/BeanBox":80,"./scripts/prefab/White":81}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Main = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _Config = require("./Config");

var _Config2 = _interopRequireDefault(_Config);

var _GameMain2 = require("./scripts/common/GameMain");

var _GameMain3 = _interopRequireDefault(_GameMain2);

var _HeroConfig = require("./gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _Global = require("./scripts/common/tool/Global");

var _SoundManager = require("./gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Main = exports.Main = function (_GameMain) {
	_inherits(Main, _GameMain);

	function Main() {
		_classCallCheck(this, Main);

		var params = {
			gameId: 1006,
			baseURL: _Config2.default.debug ? "https://juedi001test.goxiaochengxu.cn/ServiceCore/" : "https://juedi001.goxiaochengxu.cn/ServiceCore/",
			zone: "cate",
			showStat: false,
			showDebugTool: true,
			userId: 11120, //151693, 109638
			offerId: "1450014295",
			version: _Config2.default.version,
			rankingType: PaoYa.RankingType.WIN,
			release: _Config2.default.release,
			//ignoreCmds: [],
			debug: _Config2.default.debug,
			ignoreCmds: ['defeated', 'message'],
			showBannerAdWhenDialogPopup: true,
			adUnitId: window['wx'] ? 'adunit-f54386c29a35dd95' : '6624807',
			interstitialUnitId: 'adunit-92a0cb233fbbaacb',
			bannerUnitId: window['wx'] ? 'adunit-c818aae4347d2e55' : '6624804', //bannerID
			adUnitIdLong: window['wx'] ? 'adunit-e2f9bd1a37b91681' : '6624807',
			appSid: 'c6ba39a9',
			portrait: false,
			loadNetworkRes: true,
			is_config: 0
		};
		return _possibleConstructorReturn(this, (Main.__proto__ || Object.getPrototypeOf(Main)).call(this, params));
	}

	_createClass(Main, [{
		key: "setupConfig",
		value: function setupConfig() {
			var _PaoYa$Navigator$scen;

			var _this = this;
			//Laya.MouseManager.enabled=false;
			Laya.MouseManager.multiTouchEnabled = false; //关闭多点触控
			_get(Main.prototype.__proto__ || Object.getPrototypeOf(Main.prototype), "setupConfig", this).call(this);
			if (typeof wx != 'undefined') {
				_Global.Global.gameHeight = wx.getSystemInfoSync().windowWidth;
				_Global.Global.AdaptiveWidth = _Global.Global.gameHeight > 800 ? 142 : 0;
			}
			PaoYa.Navigator.scenesMap = (_PaoYa$Navigator$scen = {
				WeaponHouse: "scenes/common/WeaponHouse",
				WeaponStore: "scenes/common/WeaponStore",
				Swordsman: "scenes/common/Swordsman"
			}, _defineProperty(_PaoYa$Navigator$scen, "Swordsman", "scenes/common/Swordsman"), _defineProperty(_PaoYa$Navigator$scen, "MatchView", 'scenes/common/Match/MatchView'), _defineProperty(_PaoYa$Navigator$scen, "Grading", 'scenes/common/Grading'), _defineProperty(_PaoYa$Navigator$scen, "Devour", 'scenes/common/Devour'), _defineProperty(_PaoYa$Navigator$scen, "Refining", 'scenes/common/Refining'), _defineProperty(_PaoYa$Navigator$scen, "Sign", 'scenes/common/Sign'), _defineProperty(_PaoYa$Navigator$scen, "Wheel", 'scenes/common/Wheel'), _defineProperty(_PaoYa$Navigator$scen, "WeapList", 'scenes/common/WeapList'), _PaoYa$Navigator$scen);
			//分享地址
			//PaoYa.ShareManager.imageURL = "https://res.xingqiu123.com/1028/share/share.jpg";

			PaoYa.DataCenter.GAMEPREPARE = {
				sync: function sync() {
					_this.loadFontFnt(0);
					console.log('【同步】准备工作已完成');
				}
			};

			if (typeof wx != 'undefined' || Laya.Render.isConchApp) {
				// console.log=function(){};
				wx.onMemoryWarning(function () {
					console.error('内存不足');
				});
			}
			PaoYa.SoundManager.onShowHandler = function () {
				_SoundManager2.default.ins.playMusic(_SoundManager2.default.curBg);
			};
			/* 	
   	PaoYa.SoundManager.onHideHandler = function () {
   		Laya.SoundManager.stopAll();
   	}
   	PaoYa.SoundManager.onShowHandler = function () {
   		SoundManager.playMusic("mainBgm");
   	}
   	PaoYa.SoundManager.onAudioInterruptionBeginHandler = function () {
   		Laya.SoundManager.stopAll();
   	}
   	PaoYa.SoundManager.onAudioInterruptionEndHandler = function () {
   		Laya.SoundManager.playMusic(SoundManager.currentUrl, 0);
   	}
   	SoundManager.playMusic("mainBgm"); */

			this.arrayFont = [{
				fontUrl: "font/weapon/lvfont.fnt",
				fontAni: "weaponNFontT"
			}, {
				fontUrl: "font/figure/msz.fnt",
				fontAni: "figureDetail"
			}, {
				fontUrl: "font/recMP.fnt",
				fontAni: "recoverMP"
			}, {
				fontUrl: "font/recHP.fnt",
				fontAni: "recoverHP"
			}, {
				fontUrl: "font/hurt.fnt",
				fontAni: "hurt"
			}, {
				fontUrl: "font/crit.fnt",
				fontAni: "crit"
			}, {
				fontUrl: "font/poision.fnt",
				fontAni: "poision"
			}, {
				fontUrl: "font/playerState.fnt",
				fontAni: "playerState"
			}, {
				fontUrl: "font/playerSkill.fnt",
				fontAni: "playerSkill"
			}, {
				fontUrl: "font/weaponSkill.fnt",
				fontAni: "weaponSkill"
			}, {
				fontUrl: "font/weapon/detailfont.fnt",
				fontAni: "weaponDFont"
			}, {
				fontUrl: "font/adventure.fnt",
				fontAni: "adventure"
			}];

			_HeroConfig2.default.loadAllSpine();
		}
	}, {
		key: "setupAsyncRes",
		value: function setupAsyncRes() {
			var prepareList = [
			/* 武器上的动效 */
			'res/atlas/remote/weapon_effect/weapon_blood.atlas', 'res/atlas/remote/weapon_effect/weapon_blue.atlas', 'res/atlas/remote/weapon_effect/weapon_crits.atlas', 'res/atlas/remote/weapon_effect/weapon_freeze.atlas', 'res/atlas/remote/weapon_effect/weapon_palsy.atlas', 'res/atlas/remote/weapon_effect/weapon_poison.atlas', 'res/atlas/remote/weapon_effect/weapon_reduce.atlas', 'res/atlas/remote/weapon_effect/weapon_repeat.atlas', 'res/atlas/remote/weapon_effect/weapon_thump.atlas',
			/*触发技能动效  */
			'res/atlas/remote/trigger_skill.atlas', 'res/atlas/remote/debuff_dizzy.atlas', 'res/atlas/remote/debuff_palsy.atlas', 'res/atlas/remote/debuff_poison.atlas', 'res/atlas/remote/injured.atlas', 'res/atlas/remote/recover_blood.atlas', 'res/atlas/remote/recover_power.atlas', 'res/atlas/remote/trigger_skill.atlas', 'res/atlas/remote/warn_arms.atlas', //cd发光效果
			'res/atlas/remote/collision.atlas'];
			return prepareList;
		}
	}, {
		key: "loadFontFnt",
		value: function loadFontFnt(index) {
			if (index < this.arrayFont.length) {
				var font = new Laya.BitmapFont();
				var itemFont = this.arrayFont[index];
				var _this = this;
				font.loadFont(itemFont.fontUrl, Laya.Handler.create(_this, function () {
					Laya.Text.registerBitmapFont(itemFont.fontAni, font);
					index++;
					_this.loadFontFnt(index);
				}));
			}
		}
		/**此处返回游戏需要提前加载的资源，必须返回一个数组 */

	}, {
		key: "setupGameRes",
		value: function setupGameRes() {
			var list = [
			/* 首屏资源和公共资源 */
			'scenes/HomeView.scene', 'local/home/homeNewBg.jpg', 'local/home/homeBg.jpg', 'res/atlas/local/common.atlas', 'res/atlas/local/home.atlas', 'res/atlas/remote/guide.atlas', 'res/atlas/remote/grading.atlas', 'res/atlas/remote/adventure.atlas', 'remote/game/scene1.jpg', 'remote/guide/textBg.png',
			/* 动效animation资源 */
			'res/atlas/remote/debuff_dizzy.atlas', 'res/atlas/remote/debuff_palsy.atlas', 'res/atlas/remote/debuff_poison.atlas', 'res/atlas/remote/injured.atlas', 'res/atlas/remote/recover_blood.atlas', 'res/atlas/remote/recover_power.atlas', 'res/atlas/remote/trigger_skill.atlas', 'res/atlas/remote/warn_arms.atlas', //cd发光效果
			'res/atlas/remote/collision.atlas',

			/* 武器上的动效 */
			'res/atlas/remote/weapon_effect/weapon_blood.atlas', 'res/atlas/remote/weapon_effect/weapon_blue.atlas', 'res/atlas/remote/weapon_effect/weapon_crits.atlas', 'res/atlas/remote/weapon_effect/weapon_freeze.atlas', 'res/atlas/remote/weapon_effect/weapon_palsy.atlas', 'res/atlas/remote/weapon_effect/weapon_poison.atlas', 'res/atlas/remote/weapon_effect/weapon_reduce.atlas', 'res/atlas/remote/weapon_effect/weapon_repeat.atlas', 'res/atlas/remote/weapon_effect/weapon_thump.atlas',

			/* 技能 */
			'res/atlas/remote/hero_skill/hero1_skill1.atlas', 'res/atlas/remote/hero_skill/hero1_skill2.atlas', 'res/atlas/remote/hero_skill/hero2_skill1.atlas', 'res/atlas/remote/hero_skill/hero2_skill2.atlas', 'res/atlas/remote/recover_blood.atlas', 'res/atlas/remote/recover_power.atlas',

			/* 武器图标 */
			'res/atlas/remote/weapons.atlas', 'res/atlas/remote/small_weapons.atlas', 'res/atlas/remote/game.atlas'];
			return list;
		}
	}, {
		key: "onShareAppMessage",
		value: function onShareAppMessage() {
			var random = Math.round(Math.random() * (PaoYa.DataCenter.config.game.share_list.length - 1));
			return {
				title: PaoYa.DataCenter.config.game.share_list[random],
				imageUrl: PaoYa.DataCenter.CDNURL + PaoYa.DataCenter.config.game.share_img[random],
				query: ""
			};
		}
	}]);

	return Main;
}(_GameMain3.default);
//激活启动类


new Main();
Laya.UIConfig.closeDialogOnSide = false;

if (!_Config2.default.debug) {
	console.log = function () {};
	console.warn = function () {};
	console.error = function () {};
} else {
	if (window["wx"] || (typeof swan === "undefined" ? "undefined" : _typeof(swan)) != undefined) {
		console.log = function () {};
		console.warn = function () {};
		console.error = function () {};
	}
	Laya.Stat.show();
}

},{"./Config":1,"./GameConfig":2,"./gamescripts/SoundManager":8,"./gamescripts/config/HeroConfig":10,"./scripts/common/GameMain":37,"./scripts/common/tool/Global":55}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Weapon = require('./prefab/Weapon');

var _Weapon2 = _interopRequireDefault(_Weapon);

var _WeaponBar = require('./prefab/WeaponBar');

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _Player = require('./prefab/Player');

var _Player2 = _interopRequireDefault(_Player);

var _MPBar = require('./prefab/MPBar');

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require('./prefab/HPBar');

var _HPBar2 = _interopRequireDefault(_HPBar);

var _WeaponManager = require('./WeaponManager');

var _WeaponManager2 = _interopRequireDefault(_WeaponManager);

var _Skill = require('./prefab/Skill');

var _Skill2 = _interopRequireDefault(_Skill);

var _Dodge = require('./prefab/Dodge');

var _Dodge2 = _interopRequireDefault(_Dodge);

var _PlayerState = require('./prefab/PlayerState');

var _PlayerState2 = _interopRequireDefault(_PlayerState);

var _PlayerSkill = require('./prefab/PlayerSkill');

var _PlayerSkill2 = _interopRequireDefault(_PlayerSkill);

var _WeaponSkill = require('./prefab/WeaponSkill');

var _WeaponSkill2 = _interopRequireDefault(_WeaponSkill);

var _GameBanner = require('./prefab/GameBanner');

var _GameBanner2 = _interopRequireDefault(_GameBanner);

var _SoundManager = require('./SoundManager');

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _PreOpenManager = require('./preOpen/PreOpenManager');

var _PreOpenManager2 = _interopRequireDefault(_PreOpenManager);

var _Global = require('../scripts/common/tool/Global');

var _SkillManager = require('./SkillManager');

var _SkillManager2 = _interopRequireDefault(_SkillManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameControl = function (_PaoYa$Component) {
    _inherits(GameControl, _PaoYa$Component);

    /** @prop {name:weapon,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:weaponBar,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:player,tips:"人物预制体对象",type:Prefab} */
    /** @prop {name:weaponSkill,tips:"兵器技能名称预制体对象",type:Prefab} */
    /** @prop {name:selfHP,tips:'自己的血条',type:Node}*/
    /** @prop {name:selfMP,tips:'自己的体力',type:Node}*/
    /** @prop {name:otherHP,tips:'对方的血条',type:Node}*/
    /** @prop {name:otherMP,tips:'对方的体力',type:Node}*/
    /** @prop {name:playerState,tips:'人物状态',type:Node}*/
    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/

    function GameControl() {
        _classCallCheck(this, GameControl);

        var _this2 = _possibleConstructorReturn(this, (GameControl.__proto__ || Object.getPrototypeOf(GameControl)).call(this));

        GameControl.instance = _this2;
        Laya.MouseManager.multiTouchEnabled = false;
        _this2.closeRobot = false;
        return _this2;
    }

    _createClass(GameControl, [{
        key: 'onDisappear',
        value: function onDisappear() {
            Laya.MouseManager.enabled = true;
            Laya.timer.clearAll(this);
        }
    }, {
        key: 'onAwake',
        value: function onAwake() {
            Laya.Pool.clearBySign('weapon');
            Laya.Pool.clearBySign('player');
            Laya.MouseManager.enabled = true;

            this.params = this.owner.params;
            //暂定
            this.gameType = this.params.gameType;

            this.restart(); //重置相关信息

            this.dodgeComp = this.owner.dodge.getComponent(_Dodge2.default);
            this.dodgeOwner = this.dodgeComp.owner;
            this.playerStateComp = this.playerState.getComponent(_PlayerState2.default);

            this.selfSkillText = this.owner.selfSkillText;
            this.otherSkillText = this.owner.otherSkillText;
            this.selfSkillTextComp = this.selfSkillText.getComponent(_PlayerSkill2.default);
            this.otherSkillTextComp = this.otherSkillText.getComponent(_PlayerSkill2.default);
            this.weaponsBarArr = []; //存放兵器操作Bar;提供全局暂停和恢复CD功能;还有置灰功能
            this.initWeaponsBar();

            /* 画图测试 */
            /*     this.curvature=0.0008;
                this.drawParabola()
                this.curvature=0.0015;
                this.drawParabola() */
            /*   Laya.timer.once(1000,this,()=>{
                  this.otherPlayer.comp.attackEffect(false);
                  this.otherPlayer.comp.attackCallback=()=>{
                     this.robotSkillLaunch(97);
                  }
                  this.showRobotSkill({skillId:94})
              }) */
        }
    }, {
        key: 'onEnable',
        value: function onEnable() {
            this.onNotification(_WeaponBar2.default.CLICK, this, this.weaponBarClickHandler);
            this.onNotification(_Skill2.default.CLICK, this, this.skillClickHandler);
            this.fillPlayerInfo();
            this.initSkill();
        }
        //切后台退出游戏，要加些处理，技能2要在下一个怪出现时关掉

    }, {
        key: 'onHide',
        value: function onHide() {
            if (!this.closeRobot && !this.hasInterstitialAd) {
                this.manager && (this.manager.view.visible = false);
                this.navigator.popToRootScene();
            }
        }
        //游戏重新开始

    }, {
        key: 'restart',
        value: function restart() {
            var _this3 = this;

            var _this = this;
            this.showMaskAni();
            this.selfMultiMP = 1; //兵器造成的内力消耗倍数
            this.otherMultiMP = 1; //兵器造成的内力消耗倍数
            this.selfWeapons = [];
            this.otherWeapons = [];
            this.selfPlayer && this.selfPlayer.node && this.selfPlayer.node.removeSelf();
            this.otherPlayer && this.otherPlayer.node && this.otherPlayer.node.removeSelf();
            this.weaponList = this.params.weaponList;
            this.robotWeaponList = JSON.parse(JSON.stringify(this.params.robotWeaponList));

            this.role = JSON.parse(JSON.stringify(this.params.role));
            this.robotRole = JSON.parse(JSON.stringify(this.params.robotRole));
            this.dealParams(this.weaponList);
            this.dealParams(this.robotWeaponList);

            if (this.gameType == 'pass' || this.gameType == 'adventure') {
                this.initGameBanner();
                _SoundManager2.default.ins.passBg();
            } else {
                _SoundManager2.default.ins.battleBg();
                Laya.timer.once(1000, this, function () {
                    //遮罩mask消失时间
                    _this3.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                        gameType: _this3.gameType
                    });
                });
            }
            this.resetPlayerInfo();
            this.errorIndex = 0;
            if (!this.closeRobot) {
                if (this.params.stageId >= 4) {
                    var adParams = {
                        onClose: function onClose(res) {
                            _this.gameState = 'start';
                            console.log('\u5173\u95ED\u5E7F\u544A');
                            _this.beforeGame();
                        },
                        onError: function onError(res) {
                            if (_this.errorIndex == 0) {
                                _this.errorIndex++;
                                _this.gameState = 'start';
                                console.log('\u62C9\u53D6\u5E7F\u544A\u5931\u8D25');
                                _this.hasInterstitialAd = false;
                                _this.beforeGame();
                            }
                        }
                    };
                    this.hasInterstitialAd = true;
                    PaoYa.InterstitialAd.show(adParams);
                } else {
                    this.gameState = 'start';
                    this.beforeGame();
                }
            }
        }
    }, {
        key: 'dragonLaunch',
        value: function dragonLaunch() {
            var _this4 = this;

            var skillType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            var isSelf = arguments[1];

            console.log('------\u53EC\u5524\u795E\u9F991------');
            //开始cd
            if (isSelf) {
                if (skillType == 1) {
                    this.skillScr1.startT();
                } else {
                    this.skillScr2.startT();
                }
            }
            var dragonBg = new Laya.Sprite();
            dragonBg.size(Laya.Browser.width, Laya.Browser.height);
            this.dragonBg = dragonBg;
            dragonBg.zOrder = 2000;
            this.owner.addChild(dragonBg);
            var dragonAni = new Laya.Animation();
            dragonAni.loadAnimation('gamescenes/animations/hero4_skill' + skillType + '.ani', Laya.Handler.create(this, function (ani) {
                console.log(dragonAni.width);
                dragonAni.play(0, true);
                Laya.timer.frameLoop(1, _this4, _this4.sportDragon, [skillType, isSelf]);
            }), 'res/atlas/remote/hero_skill/hero4_skill1.atlas');
            if (isSelf) {
                dragonAni.pos(-80, 446);
            } else {
                dragonAni.scaleX = -1;
                dragonAni.pos(1334 + 80, 446);
            }

            this.dragonAni = dragonAni;
            dragonBg.addChild(dragonAni);
            var maskSP = new Laya.Sprite();
            if (isSelf) {
                if (skillType == 1) {
                    maskSP.graphics.drawRect(310, 0, 800, 750, '#ff0000');
                } else {
                    maskSP.graphics.drawRect(340, 0, 770, 750, '#ff0000');
                }
            } else {
                if (skillType == 1) {
                    maskSP.graphics.drawRect(230, 0, 800, 750, '#ff0000');
                } else {
                    maskSP.graphics.drawRect(230, 0, 770, 750, '#ff0000');
                }
            }

            dragonBg.mask = maskSP;
            this.dragonCollide = false;

            //发射龙技能用的 掩盖mask痕迹
            var launchAni = new Laya.Animation();
            launchAni.loadAnimation('gamescenes/animations/hero4_launch1.ani', Laya.Handler.create(this, function () {
                launchAni.play(0, false);
            }), 'res/atlas/remote/hero_skill/hero4_skill1.atlas');
            if (isSelf) {
                if (skillType == 1) {
                    launchAni.pos(330, 430); //440
                } else {
                    launchAni.pos(350, 426); //440
                }
            } else {
                if (skillType == 1) {
                    launchAni.pos(1010, 430); //440
                } else {
                    launchAni.pos(990, 426); //440
                }
            }
            launchAni.zOrder = 2001;

            this.launchAni = launchAni;
            this.owner.addChild(launchAni);
            console.log('------\u53EC\u5524\u795E\u9F992------');
        }
    }, {
        key: 'sportDragon',
        value: function sportDragon(skillType, isSelf) {
            if (isSelf) {
                this.dragonAni.x += 25;
                if (!this.dragonCollide && this.dragonAni.x + 423 > 1120) {
                    //Laya.timer.clear(this, this.sportDragon);
                    this.dragonCollide = true;
                    this.addDragonCollideAni(skillType, isSelf);
                    this.dragonHurt(skillType, isSelf);
                }
            } else {
                this.dragonAni.x -= 25;
                if (!this.dragonCollide && this.dragonAni.x - 423 < 220) {
                    //Laya.timer.clear(this, this.sportDragon);
                    this.dragonCollide = true;
                    this.addDragonCollideAni(skillType, isSelf);
                    this.dragonHurt(skillType, isSelf);
                }
            }
            if (isSelf) {
                if (this.dragonAni.x > 1334 || this.gameState == 'over') {
                    console.log('\u3010------\u79FB\u9664\u795E\u9F99------\u3011');
                    this.removeDragons(skillType);
                }
            } else {
                if (this.gameState == 'over' || this.dragonAni.x < 0) {
                    console.log('\u3010------\u79FB\u9664\u795E\u9F99------\u3011');
                    this.removeDragons(skillType);
                }
            }
        }
    }, {
        key: 'removeDragons',
        value: function removeDragons(skillType) {
            Laya.timer.clear(this, this.sportDragon);
            if (this.dragonAni) {
                this.dragonAni.stop();
                this.dragonAni.removeSelf();
            }
            if (skillType == 1) {
                if (this.collideAni) {
                    this.collideAni.stop();
                    this.collideAni.removeSelf();
                }
            } else {
                if (this.collideAni1) {
                    this.collideAni1.stop();
                    this.collideAni1.removeSelf();
                }
                if (this.collideAni2) {
                    this.collideAni2.stop();
                    this.collideAni2.removeSelf();
                }
            }
            this.owner.removeChild(this.dragonBg);
        }
    }, {
        key: 'addDragonCollideAni',
        value: function addDragonCollideAni(skillType, isSelf) {
            if (skillType == 1) {
                var collideAni = new Laya.Animation();
                collideAni.loadAnimation('gamescenes/animations/hero4_injured1.ani', Laya.Handler.create(this, function (ani) {
                    collideAni.play(0, true);
                }), 'res/atlas/remote/hero_skill/hero4_injured1.atlas');
                if (isSelf) {
                    collideAni.pos(1080, 420);
                } else {
                    collideAni.pos(260, 420);
                }

                collideAni.zOrder = 2200;
                this.owner.addChild(collideAni);
                this.collideAni = collideAni;
            } else if (skillType == 2) {
                var collideAni1 = new Laya.Animation();
                collideAni1.loadAnimation('gamescenes/animations/hero4_injured1.ani', Laya.Handler.create(this, function (ani) {
                    collideAni1.play(0, true);
                }), 'res/atlas/remote/hero_skill/hero4_injured1.atlas');
                if (isSelf) {
                    collideAni1.pos(1092, 380);
                } else {
                    collideAni1.pos(248, 380);
                }

                collideAni1.zOrder = 2200;
                this.owner.addChild(collideAni1);
                this.collideAni1 = collideAni1;

                var collideAni2 = new Laya.Animation();
                collideAni2.loadAnimation('gamescenes/animations/hero4_injured1.ani', Laya.Handler.create(this, function (ani) {
                    collideAni2.play(0, true);
                }), 'res/atlas/remote/hero_skill/hero4_injured1.atlas');
                if (isSelf) {
                    collideAni2.pos(1060, 480);
                } else {
                    collideAni2.pos(280, 480);
                }

                collideAni2.zOrder = 2200;
                this.owner.addChild(collideAni2);
                this.collideAni2 = collideAni2;
            }
        }
    }, {
        key: 'dragonHurt',
        value: function dragonHurt(skillType, isSelf) {
            var _this5 = this;

            console.log(skillType);
            var attackNum = 0;
            if (isSelf) {
                if (skillType == 1) {
                    attackNum = Math.round(this.selfPlayer.comp.attr.roleStrength * 0.22);
                } else if (skillType == 2) {
                    attackNum = Math.round(this.selfPlayer.comp.attr.roleStrength * 0.5);
                }
            } else {
                if (skillType == 1) {
                    attackNum = Math.round(this.otherPlayer.comp.attr.roleStrength * 0.22);
                } else if (skillType == 2) {
                    attackNum = Math.round(this.otherPlayer.comp.attr.roleStrength * 0.5);
                }
            }

            var dizzyT = 400;
            if (isSelf) {
                this.otherPlayer.comp.injuredEffect(1, -attackNum, false, function () {
                    _this5.otherPlayer.comp.dragonEffect(dizzyT);
                });
            } else {
                this.selfPlayer.comp.injuredEffect(1, -attackNum, false, function () {
                    _this5.selfPlayer.comp.dragonEffect(dizzyT);
                });
            }
        }
    }, {
        key: 'beforeGame',
        value: function beforeGame() {
            var _this6 = this;

            if (this.params.stage) {
                var manager = new _PreOpenManager2.default(function () {
                    manager.start(_this6.params.stage);
                });
                manager.on(_PreOpenManager2.default.TALKEND, this, function () {
                    Laya.timer.once(2000, _this6, _this6.firstWeaponSelect);
                });
                this.manager = manager;
            } else {
                //要加机器人定时器
                if (!this.closeRobot) {
                    if (this.gameType == 'battle') {
                        Laya.timer.once(250, this, this.firstWeaponSelect);
                    } else {
                        Laya.timer.once(1000, this, this.firstWeaponSelect);
                    }
                }
            }
        }
    }, {
        key: 'showMaskAni',
        value: function showMaskAni() {
            var maskArea = new Laya.Sprite();
            maskArea.alpha = 0.9;
            maskArea.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
            maskArea.mouseEnabled = true;
            maskArea.zOrder = 2000;
            Laya.stage.addChild(maskArea);
            var tween = new Laya.Tween();
            tween.to(maskArea, {
                alpha: 0.4
            }, 600, null, Laya.Handler.create(this, function () {
                tween.clear();
                Laya.stage.removeChild(maskArea);
            }));
        }
    }, {
        key: 'fillPlayerInfo',
        value: function fillPlayerInfo() {
            this.initPlayer(true);
            this.initPlayer(false);
        }
    }, {
        key: 'resetPlayerInfo',
        value: function resetPlayerInfo() {
            var myRoleName = '';
            var otherRoleName = '';
            if (this.gameType == 'battle') {
                myRoleName = this.params.nickName;
                otherRoleName = this.params.robotNickName;
            } else {
                myRoleName = this.role.roleName;
                otherRoleName = this.robotRole.roleName;
            }
            this.owner.setInfo({
                name: myRoleName,
                icon: 'local/common/' + this.role.roleDress + '.png'
            }, true);
            this.owner.setInfo({
                name: otherRoleName,
                icon: 'local/common/' + this.robotRole.roleDress + '.png'
            }, false);
        }
    }, {
        key: 'initGameBanner',
        value: function initGameBanner() {
            this.monsterNum = this.params.monsterList.length;
            this.killNum = 0;
            this.battleIndex = 1;
            this.curNum = this.params.stageId;
            this.boxGameBanner.getComponent(_GameBanner2.default) && this.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                gameType: this.gameType,
                curNum: this.curNum,
                battleIndex: this.battleIndex,
                monsterNum: this.monsterNum
            });
        }
    }, {
        key: 'drawParabola',
        value: function drawParabola() {
            var space = 5;
            var pathArr = [];
            this.startPos = {
                x: 180,
                y: 450
            };
            this.endPos = {
                x: 1150,
                y: 450
            };
            pathArr.push(["moveTo", 0, 0]);

            // X轴Y轴的偏移总量
            this.driftX = this.endPos.x - this.startPos.x;
            this.driftY = this.endPos.y - this.startPos.y;
            this.b = (this.driftY - this.curvature * this.driftX * this.driftX) / this.driftX;
            for (var i = 5; i <= this.driftX; i += space) {
                var x = i;
                var y = Math.floor(this.curvature * x * x + this.b * x);
                pathArr.push(["lineTo", x, y]);
            }
            pathArr.push(["closePath"]);
            this.owner.spDraw.graphics.drawPath(this.startPos.x, this.startPos.y, pathArr, null, {
                strokeStyle: "#ff0000",
                lineWidth: 2,
                lineCap: "round"
            });
        }
    }, {
        key: 'dealParams',
        value: function dealParams(weaponList) {
            for (var i = 0; i < weaponList.length; i++) {
                var weapon = weaponList[i];
                var weaponSkills = weapon['skills'];
                for (var j = 0; j < weaponSkills.length; j++) {
                    if (weaponSkills[j].skillType == 1) {
                        weapon.activeSkill = JSON.parse(JSON.stringify(weaponSkills[j]));
                    }
                }
            }
        }

        //测试内力够不够

    }, {
        key: 'onUpdate',
        value: function onUpdate() {
            if (!this.weaponsBarArr.length || !this.selfPlayer) {
                return;
            }
            if (this.selfPlayer.comp.dodge) {

                return;
            }
            var curMP = this.selfPlayer.comp.MPComp.curMP;
            var originMP = this.selfPlayer.comp.MPComp.originMP;
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                if (weaponBarComp.weaponConsume > curMP) {
                    if (!weaponBarComp.freezeing) {
                        weaponBarComp.owner.gray = true;
                    }
                } else {
                    weaponBarComp.owner.gray = false;
                }
            });

            if (curMP < originMP * 0.2) {
                if (!this.dodgeComp.freezeing) {
                    this.dodgeOwner.gray = true;
                }
            } else {
                this.dodgeOwner.gray = false;
            }
            if (this.skillOwner1 && !this.skillOwner1.disabled) {
                if (curMP < this.selfSkills[0].skillConsume * originMP) {
                    if (!this.skillScr1.freezeing) {
                        this.skillOwner1.gray = true;
                    }
                } else {
                    this.skillOwner1.gray = false;
                }
            }
            if (this.skillOwner2 && !this.skillOwner2.disabled) {
                if (curMP < this.selfSkills[2].skillConsume * originMP) {
                    if (!this.skillScr1.freezeing) {
                        this.skillOwner2.gray = true;
                    }
                } else {
                    this.skillOwner2.gray = false;
                }
            }
        }
        //初始化双方兵器库

    }, {
        key: 'initWeaponsBar',
        value: function initWeaponsBar() {
            var owner = this.owner,
                boxWeapon = owner.boxWeapon;

            for (var i = 0, len = this.weaponList.length; i < len; i++) {
                //暂时
                var weaponBar = null;
                if (this.weaponBar.create) {
                    //console.log(this.weaponBar)
                    weaponBar = this.weaponBar.create.call(this.weaponBar);
                } else {

                    var prefabWeapon = new Laya.Prefab();
                    prefabWeapon.json = this.weaponBar;
                    weaponBar = prefabWeapon.create.call(prefabWeapon);
                }
                var weaponBarComp = weaponBar.getComponent(_WeaponBar2.default);
                weaponBarComp.params = this.weaponList[i];
                weaponBarComp.isSelf = true;
                weaponBarComp.index = i;
                this.weaponsBarArr.push(weaponBarComp);
                boxWeapon.addChild(weaponBar);
            }
            //初始化机器人的兵器
            //     this.weaponManager = new WeaponManager(this.robotWeaponList);
        }
    }, {
        key: 'initPlayer',
        value: function initPlayer(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var role = isSelf ? 'role' : 'robotRole';
            var player = Laya.Pool.getItemByCreateFun('player', this.player.create, this.player);
            var spCollide = this.owner[name + 'Collide'];
            var spX = spCollide.x,
                spY = spCollide.y,
                spW = spCollide.width,
                spH = spCollide.height;

            var component = player.getComponent(_Player2.default);
            // component.isSelf = isSelf;
            component.attr = this[role];
            if (isSelf) {
                this.selfSkills = this[role].skills;
            }
            component.activeSkills = [];
            //把人物主动技能挑选出来
            for (var i = 0, len = this[role].skills.length; i < len; i++) {
                if (this[role].skills[i].skillType == 1) {
                    this[role].skills[i].skillConfig.roleHp = this[role].roleHp;
                    component.activeSkills.push(this[role].skills[i]);
                }
            }

            if (component.attr.skillWeapon) {
                component.attr.skillWeapon.activeSkill = component.attr.skillWeapon.skills[0];
            }

            component.MPComp = this[name + 'MP'].getComponent(_MPBar2.default);
            component.HPComp = this[name + 'HP'].getComponent(_HPBar2.default);
            component.MPComp.initBar(this[role].roleMp);
            component.HPComp.initBar(this[role].roleHp);
            component.isSelf = isSelf;
            if (isSelf) {
                player.pos(220, 560);
                player.scaleX = 1;
            } else {
                player.pos(1120, 560);
                player.scaleX = -1;
            }
            component.collidePoint = [{
                x: spX,
                y: spY
            }, {
                x: spX + spW,
                y: spY
            }, {
                x: spX + spW,
                y: spY + spH
            }, {
                x: spX,
                y: spY + spH
            }];

            this.owner.addChild(player);
            this[name + 'Player'] = {
                node: player,
                comp: component
            };
        }
    }, {
        key: 'initSkill',
        value: function initSkill() {
            var owner = this.owner;
            var activeSkills = this.selfPlayer.comp.activeSkills;
            for (var i = 1; i < 3; i++) {
                this['skillScr' + i] = owner['skill' + i].getComponent(_Skill2.default);
                this['skillScr' + i].params = activeSkills[i - 1];
                this['skillScr' + i].init(activeSkills[i - 1]);
                this['skillOwner' + i] = this['skillScr' + i].owner;
            }
        }
    }, {
        key: 'skillClickHandler',
        value: function skillClickHandler(name, isSelf) {
            if (name == "skill1") {
                _SoundManager2.default.ins.heroSkill1();
                if (isSelf) {
                    if (this.selfPlayer.comp.attr.roleId != 4) {
                        this.skillWithWeapon(isSelf);
                    } else {
                        this.skillWithDragon(isSelf);
                    }
                } else {
                    if (this.otherPlayer.comp.attr.roleId != 4) {
                        this.skillWithWeapon(isSelf);
                    } else {
                        this.skillWithDragon(isSelf);
                    }
                }
            } else if (name == "skill2") {
                _SoundManager2.default.ins.heroSkill2();
                if (isSelf) {
                    if (this.selfPlayer.comp.attr.roleId != 4) {
                        this.skillWithoutWeapon(isSelf);
                    } else {
                        this.skillWithTwoDragon(isSelf);
                    }
                } else {
                    if (this.otherPlayer.comp.attr.roleId != 4) {
                        this.skillWithoutWeapon(isSelf);
                    } else {
                        this.skillWithTwoDragon(isSelf);
                    }
                }
            }
        }
    }, {
        key: 'skillWithWeapon',
        value: function skillWithWeapon(isSelf) {
            var _this7 = this;

            var name = isSelf ? 'self' : 'other';
            var roleComp = this[name + 'Player'].comp,
                skillWeapon = JSON.parse(JSON.stringify(roleComp.attr.skillWeapon));
            var skillInfo = this[name + 'Player'].comp.activeSkills[0];
            var originMP = roleComp.MPComp.originMP;
            var consumeMP = skillInfo.skillConsume * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                console.warn(name + 'Player' + "__体力不足");
                if (isSelf) {
                    this.showTips("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.skillScr1.startT();
            }
            this.showSkillText(isSelf, skillInfo.skillName);
            skillWeapon.isSelf = isSelf;
            this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);
            skillWeapon.skillEffect = true;
            var skillId = skillWeapon.activeSkill.skillId;
            switch (skillId) {
                case 88:
                    var addCritProb = skillWeapon.activeSkill.skillConfig.critProb;
                    this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb + addCritProb;
                    break;
                //雪女剑法
                case 89:
                    break;
                //铸铁剑法 造成臂力*0.32倍伤害
                case 90:
                    break;
                //打出一条小金龙， 不能写在这里，不走兵器路线
                case 91:
                    break;
            }
            //先展示技能，再展示攻击，再发射兵器
            this[name + 'Player'].comp.showSkill1();
            this[name + 'Player'].comp.skillCallback = function () {
                _this7.weaponLaunch(skillWeapon);
                _this7[name + 'Player'].comp.skillCallback = function () {};
            };
        }
    }, {
        key: 'skillWithDragon',
        value: function skillWithDragon(isSelf) {
            var _this8 = this;

            var name = isSelf ? 'self' : 'other';
            this[name + 'Player'].comp.showSkill1();
            this[name + 'Player'].comp.skillCallback = function () {
                _this8.dragonLaunch(1, isSelf);
            };
        }
    }, {
        key: 'skillWithTwoDragon',
        value: function skillWithTwoDragon(isSelf) {
            var _this9 = this;

            var name = isSelf ? 'self' : 'other';
            this[name + 'Player'].comp.showSkill2();
            this[name + 'Player'].comp.skillCallback = function () {
                _this9.dragonLaunch(2, isSelf);
            };
        }
    }, {
        key: 'skillWithoutWeapon',
        value: function skillWithoutWeapon(isSelf) {
            var _this10 = this;

            var name = isSelf ? 'self' : 'other';
            var skillInfo = this[name + 'Player'].comp.activeSkills[1];
            var originMP = this[name + 'Player'].comp.MPComp.originMP;
            var consumeMP = skillInfo.skillConsume * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                console.warn(name + 'Player' + "__体力不足");
                if (isSelf) {
                    this.showTips("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.skillScr2.startT();
            }
            this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);
            this[name + 'Player'].comp.showSkill2(); //人物技能2展示
            this.showSkillText(isSelf, skillInfo.skillName);
            switch (skillInfo.skillId) {
                case 33:
                    this.allWeaponsUnfreeze(name, skillInfo, isSelf);
                    break;
                case 36:
                    var t = skillInfo.skillConfig.time,
                        perMP = skillInfo.skillConfig.recoverMp,
                        originHP = this[name + 'Player'].comp.HPComp.originHP,
                        resumeHP = skillInfo.skillConfig.recoverHp;
                    this[name + 'Player'].comp.changePerMp(t * 1000, perMP);
                    this[name + 'Player'].comp.HPComp.changeHP(originHP * resumeHP);
                    Laya.timer.once(t * 1000, this, function () {
                        _this10[name + 'Player'].comp.removeSkill2();
                    });
                    break;
                case 39:
                    /* this[name+'Player'].comp.changePerMp(); */
                    this[name + 'MultiMP'] = skillInfo.skillConfig.consumeMp;
                    console.error('内力消耗倍数:', skillInfo.skillConfig.consumeMp);
                    this.heroSkill2 = true;
                    Laya.timer.once(skillInfo.skillConfig.time * 1000, this, function () {
                        console.error('内力消耗倍数恢复:');
                        _this10.heroSkill2 = false;
                        _this10[name + 'MultiMP'] = 1;
                        _this10[name + 'Player'].comp.removeSkill2();
                    });
                    break;
                case 45:
                    break;
            }
        }
    }, {
        key: 'allWeaponsUnfreeze',
        value: function allWeaponsUnfreeze(name, skillInfo, isSelf) {
            Laya.timer.clear(this, this.resetAllWeaponsCd);
            var time = skillInfo.skillConfig.time * 1000;
            if (isSelf) {
                this.weaponsBarArr.forEach(function (weaponBarComp) {
                    weaponBarComp.endCD(); //探讨要不要
                    weaponBarComp.setCdTime(0);
                });
            } else {
                this.weaponManager.closeCd();
            }

            Laya.timer.once(time, this, this.resetAllWeaponsCd, [name, isSelf]);
        }
        //对方换人的时候 ,可以选择关闭上一次定时器

    }, {
        key: 'resetAllWeaponsCd',
        value: function resetAllWeaponsCd(name, isSelf) {
            if (isSelf) {
                this.weaponsBarArr.forEach(function (weaponBarComp) {
                    weaponBarComp.setCdTime(weaponBarComp.originCdTime);
                });
            } else {
                this.weaponManager.openCd();
            }
            this[name + 'Player'].comp.removeSkill2();
        }
        //所有兵器选择框和技能框置灰

    }, {
        key: 'allBtnsLock',
        value: function allBtnsLock() {
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.owner.gray = true;
            });
            this.dodgeOwner.gray = true;
            if (!this.skillOwner1.disabled) {
                this.skillOwner1.gray = true;
            }
            if (!this.skillOwner2.disabled) {
                this.skillOwner2.gray = true;
            }
        }
        //所有兵器选择框和技能框置灰

    }, {
        key: 'allBtnsUnlock',
        value: function allBtnsUnlock() {
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.owner.gray = false;
            });
            this.dodgeOwner.gray = false;
            if (!this.skillOwner1.disabled) {
                this.skillOwner1.gray = false;
            }
            if (!this.skillOwner2.disabled) {
                this.skillOwner2.gray = false;
            }
        }
        //所有暂停，除了出技能的人

    }, {
        key: 'allPause',
        value: function allPause(isSelf) {
            this.isSkilling = true;
            if (isSelf) {
                console.error('------\u82F1\u96C4pause----');
            } else {
                console.error('-------\u673A\u5668\u4EBApause----');
            }
            /*  this.gameNode='stop'; */
            this.selfWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.pause();
            });
            if (isSelf) {
                this.otherPlayer.comp.skeleton.paused();
                this.otherPlayer.node.zOrder = 100;
                this.selfPlayer.node.zOrder = 101;
                this.selfSkillText.zOrder = 103;
            } else {
                this.selfPlayer.comp.skeleton.paused();
                this.otherPlayer.node.zOrder = 101;
                this.selfPlayer.node.zOrder = 100;
            }
            Laya.timer.clear(this, this.startSelect);
            this.selfPlayer.comp.MPComp.pause();
            this.otherPlayer.comp.MPComp.pause();
            this.skillScr1.pause();
            this.skillScr2.pause();
            this.dodgeComp.pause();
        }
    }, {
        key: 'allResume',
        value: function allResume(isSelf) {
            this.isSkilling = false;
            if (isSelf) {
                console.error('------\u82F1\u96C4resume----');
            } else {
                console.error('-------\u673A\u5668\u4EBAresume----');
            }
            this.selfWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.resume();
            });
            if (isSelf) {
                this.otherPlayer.comp.skeleton.resume();
                this.selfSkillText.zOrder = 1;
            } else {
                this.selfPlayer.comp.skeleton.resume();
            }
            if (!this.closeRobot) {
                /*  if(this.gameType == `pass` || this.gameType == `adventure`){
                     if(this.skillManager){
                         this.startSelect();
                     }else{
                         this.firstWeaponSelect();
                     } 
                 }else{ */
                if (this.skillManager) {
                    Laya.timer.once(200, this, this.startSelect);
                } else {
                    Laya.timer.once(200, this, this.firstWeaponSelect);
                }
                /*  }    */
            }
            this.selfPlayer.comp.MPComp.resume();
            this.otherPlayer.comp.MPComp.resume();
            this.skillScr1.resume();
            this.skillScr2.resume();
            this.dodgeComp.resume();
        }
    }, {
        key: 'firstWeaponSelect',
        value: function firstWeaponSelect() {
            this.weaponManager = null;
            this.weaponManager = new _WeaponManager2.default(this.robotWeaponList);
            this.sWeapon = this.weaponManager.seletedWeapon();

            /*   console.log('机器人技能清单:', this.otherPlayer.comp.activeSkills) */

            var skills = this.otherPlayer.comp.activeSkills;
            if (this.gameType == 'battle') {
                var len = skills.length;
                for (var i = 0; i < len; i++) {
                    skills[i].skillConfig.cd = skills[i].skillCd;
                    skills[i].skillConfig.limit = 1000;
                    skills[i].skillConfig.name = i == 0 ? 'skill1' : 'skill2';
                }
            }
            //机器人技能
            this.skillManager = new _SkillManager2.default(skills);

            /*  if (this.gameType == `battle`) {
                 this.startSelect();
             } else {
                 Laya.timer.once(1000, this, this.startSelect);
             } */
            this.startSelect();
        }
    }, {
        key: 'startSelect',
        value: function startSelect() {
            var robotSkills = null;
            robotSkills = this.skillManager.seletedSkill();
            if (robotSkills) {
                if (this.gameType == 'pass' || this.gameType == 'adventure') {
                    console.error('----\u89E6\u53D1\u673A\u5668\u4EBA\u6280\u80FD----');
                    this.showRobotSkill(robotSkills);
                    // Laya.timer.once(500, this, this.startSelect);
                    return;
                } else if (this.gameType == 'battle') {
                    this.skillClickHandler(robotSkills.name, false);
                    // Laya.timer.once(2000, this, this.startSelect);
                    return;
                }
            }

            /* 每次做选择的时候先看看技能是否可用，两个技能均可用的话，随机一个 */
            //如果选中的已经发射了，才可以重新选
            if (this.seletedLaunch) {
                this.sWeapon = this.weaponManager.seletedWeapon();
                if (!this.sWeapon) {
                    //啥兵器都没有选中,都在冷却当中
                    Laya.timer.once(1000, this, this.startSelect);
                    return;
                }
            }
            var curMp = this.otherPlayer.comp.MPComp.curMP;

            if (curMp >= this.sWeapon.params.weaponConsume) {
                this.seletedLaunch = true;
                if (this.otherPlayer.comp.canAction) {
                    this.sWeapon.isSelf = false;
                    this.sWeapon.selectedHandler();
                    console.log('------\u53EF\u4EE5\u52A8\u5F39------');
                    this.weaponBarClickHandler(this.sWeapon);
                } else {
                    console.log("-----无法动弹-----");
                }
                if (this.gameType == 'pass' || this.gameType == 'adventure') {
                    Laya.timer.once(800, this, this.startSelect);
                } else {
                    Laya.timer.once(300, this, this.startSelect);
                }
            } else {
                this.seletedLaunch = false;
                Laya.timer.once(500, this, this.startSelect);
            }
        }
    }, {
        key: 'showRobotSkill',
        value: function showRobotSkill(skillConfig) {
            var _this11 = this;

            //关键：机器人在展示技能时候，英雄不能打断其技能，技能互斥isSkilling
            /* this.selfPlayer.comp.canAction=false; */
            this.robotSkill = true;
            switch (skillConfig.skillId) {
                case 91:
                    _SoundManager2.default.ins.heroSkill2();
                    var originRoleBone = this.robotRole.roleBone;
                    this.robotRole.roleBone = this.robotRole.roleBone * 3;
                    console.error('-----\u65E7\u7684\u6839\u9AA8-----:', originRoleBone);
                    console.error('-----\u65B0\u7684\u6839\u9AA8-----:', this.robotRole.roleBone);
                    this.showSkillText(false, '金钟罩');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    Laya.timer.once(10000, this, this.recoverOriginBone, [originRoleBone]);
                    break;
                case 92:
                    _SoundManager2.default.ins.heroSkill2();
                    this.otherPlayer.comp.halfHP();
                    console.error('-----\u65E7\u7684\u8840\u91CF-----:');
                    console.error('-----\u65B0\u7684\u8840\u91CF-----:', this.robotRole.roleHp / 2);
                    this.showSkillText(false, '回光返照');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                        _this11.robotSkill = false;
                    });

                    break;
                case 93:
                    _SoundManager2.default.ins.heroSkill2();
                    var originRoleStrength = this.robotRole.roleStrength;
                    this.robotRole.roleStrength = this.robotRole.roleStrength * 2;
                    this.showSkillText(false, '\u65E0\u6781\u5251\u6CD5');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    Laya.timer.once(60000, this, this.recoverOriginStrength, [originRoleStrength]);
                    break;
                case 94:
                    _SoundManager2.default.ins.heroSkill2();
                    this.otherPlayer.comp.changePerMp(60000, 2);
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    Laya.timer.once(60000, this, this.removeRobotCommonSkill);
                    this.showSkillText(false, '\u65E0\u6839\u751F');
                    break;
                case 95:
                    _SoundManager2.default.ins.heroSkill2();
                    /* 反弹200%伤害，持续10秒。 */
                    this.otherPlayer.comp.bounceSkill = true;
                    this.showSkillText(false, '\u94C1\u5E03\u886B');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    Laya.timer.once(10000, this, this.removeBounceSkill);
                    break;
                case 96:
                    _SoundManager2.default.ins.heroSkill2();
                    /* 受到的伤害200%转化成生命，持续10秒。 */
                    this.otherPlayer.comp.stealHPSkill = true;
                    this.showSkillText(false, '\u5438\u661F\u5927\u6CD5');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    Laya.timer.once(10000, this, this.removeStealHPSkill);
                    break;
                case 97:
                    _SoundManager2.default.ins.heroSkill1();
                    /* 发射火球，造成80点伤害。 */
                    this.showSkillText(false, '\u7EA2\u83B2\u706B');
                    this.showMaskSkillAction();
                    this.otherPlayer.comp.attackEffect(false);
                    this.otherPlayer.comp.attackCallback = function () {
                        _this11.hideMaskSkillAction();
                        _this11.robotSkillLaunch(skillConfig.skillId);
                        _this11.robotSkill = false;
                    };
                    break;
                case 98:
                    _SoundManager2.default.ins.heroSkill1();
                    /* 发射玄冰，造成100点伤害 */
                    this.showSkillText(false, '\u7384\u51B0\u638C');
                    this.showMaskSkillAction();
                    this.otherPlayer.comp.attackEffect(false);
                    this.otherPlayer.comp.attackCallback = function () {
                        _this11.hideMaskSkillAction();
                        _this11.robotSkillLaunch(skillConfig.skillId);
                        _this11.robotSkill = false;
                    };
                    break;
                case 99:
                    _SoundManager2.default.ins.heroSkill1();
                    /* 发射毒蛇，造成120点伤害。 */
                    this.showSkillText(false, '\u767D\u86C7\u51FA\u4E16');
                    this.showMaskSkillAction();
                    this.otherPlayer.comp.attackEffect(false);
                    this.otherPlayer.comp.attackCallback = function () {
                        _this11.hideMaskSkillAction();
                        _this11.robotSkillLaunch(skillConfig.skillId);
                        _this11.robotSkill = false;
                    };
                    break;
                case 100:
                    _SoundManager2.default.ins.heroSkill2();
                    /* 每秒损失100点生命，兵器无CD，持续30秒。 */
                    var endTime = 30000 + new Date().getTime();
                    this.weaponManager.closeCd();
                    Laya.timer.loop(1000, this, this.robotBecomeDevil, [endTime]);
                    this.showSkillText(false, '\u8D70\u706B\u5165\u9B54');
                    this.showMaskCommonSkillAni(function () {
                        _this11.showRobotCommonSkill(skillConfig.skillId);
                    });
                    break;
            }
        }
        /* 模拟机器人技能黑屏  此技能关于修改属性*/

    }, {
        key: 'showMaskCommonSkillAni',
        value: function showMaskCommonSkillAni(cb) {
            var _this12 = this;

            this.allPause(false);
            var maskArea = new Laya.Sprite();
            maskArea.alpha = 0.8;
            maskArea.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
            maskArea.mouseEnabled = true;
            maskArea.zOrder = 2000;
            Laya.stage.addChild(maskArea);
            var tween = new Laya.Tween();
            tween.to(maskArea, {
                alpha: 0.5
            }, 600, null, Laya.Handler.create(this, function () {
                tween.clear();
                /*   if(!this.selfPlayer.comp.plasyState&&!this.selfPlayer.comp.freezeState&&!this.selfPlayer.comp.dizzyState){
                      this.selfPlayer.comp.canAction=true;
                  } */
                _this12.allResume(false);
                cb && cb();
                Laya.stage.removeChild(maskArea);
            }));
        }
        /* 模拟机器人兵器性技能黑屏 */

    }, {
        key: 'showMaskSkillAction',
        value: function showMaskSkillAction() {
            if (this.skillMask) {
                this.skillMask.visible = true;
                this.allPause(false);
                return;
            }
            var maskArea = new Laya.Sprite();
            maskArea.alpha = 0.6;
            maskArea.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
            maskArea.mouseEnabled = true;
            maskArea.zOrder = 2000;
            Laya.stage.addChild(maskArea);
            this.skillMask = maskArea;
            this.allPause(false);
        }
    }, {
        key: 'hideMaskSkillAction',
        value: function hideMaskSkillAction() {
            this.skillMask.visible = false;
            /*  if(!this.selfPlayer.comp.plasyState&&!this.selfPlayer.comp.freezeState&&!this.selfPlayer.comp.dizzyState){
                 this.selfPlayer.comp.canAction=true;
             } */
            this.allResume(false);
        }
        /* ------关闭技能start------- */

    }, {
        key: 'recoverOriginBone',
        value: function recoverOriginBone(originRoleBone) {
            this.robotRole.roleBone = originRoleBone;
            this.robotSkill = false;
            this.removeRobotCommonSkill();
        }
    }, {
        key: 'recoverOriginStrength',
        value: function recoverOriginStrength(originRoleStrength) {
            this.robotRole.roleStrength = originRoleStrength;
            this.robotSkill = false;
            this.removeRobotCommonSkill();
        }
    }, {
        key: 'removeRobotCommonSkill',
        value: function removeRobotCommonSkill() {
            if (this.commonAni) {
                this.commonAni.stop();
                this.commonAni.removeSelf();
                this.robotSkill = false;
            }
        }
    }, {
        key: 'removeBounceSkill',
        value: function removeBounceSkill() {
            this.otherPlayer.comp.bounceSkill = false;
            this.robotSkill = false;
            this.removeRobotCommonSkill();
        }
    }, {
        key: 'removeStealHPSkill',
        value: function removeStealHPSkill() {
            this.otherPlayer.comp.stealHPSkill = false;
            this.robotSkill = false;
            this.removeRobotCommonSkill();
        }
        /* ------关闭技能end------- */

    }, {
        key: 'closeAllRobotTimer',
        value: function closeAllRobotTimer() {
            this.robotSkill = false;
            Laya.timer.clear(this, this.recoverOriginBone);
            Laya.timer.clear(this, this.recoverOriginStrength);
            Laya.timer.clear(this, this.removeRobotCommonSkill);
            Laya.timer.clear(this, this.removeBounceSkill);
            Laya.timer.clear(this, this.removeStealHPSkill);
        }
    }, {
        key: 'robotSkillLaunch',
        value: function robotSkillLaunch(skillId) {
            var _this13 = this;

            var skillAni = new Laya.Animation();
            this.skillAniCollide = false;
            skillAni.loadAnimation('gamescenes/animations/robot_skill_' + skillId + '.ani', Laya.Handler.create(this, function (ani) {

                skillAni.play(0, true, 'fly');
                Laya.timer.frameLoop(1, _this13, _this13.sportAni, [skillId]);
            }), 'res/atlas/remote/robot_skill/skill_' + skillId + '.atlas');
            skillAni.pos(1030, 440);
            skillAni.scaleX = -1;
            skillAni.zOrder = 1000;
            this.owner.addChild(skillAni);
            this.skillAni = skillAni;
        }
    }, {
        key: 'sportAni',
        value: function sportAni(skillId) {
            this.skillAni.x -= 10;
            if (!this.skillAniCollide && this.skillAni.x < 260 && !this.selfPlayer.comp.dodge) {
                //Laya.timer.clear(this, this.sportDragon);
                _SoundManager2.default.ins.injured();
                Laya.timer.clear(this, this.sportAni);
                this.skillAniCollide = true;
                this.skillAni.play(0, false, 'hit');
                this.skillAni.on(Laya.Event.COMPLETE, this, this.removeSkillAni);
                this.skillHurt(skillId);
            }
            if (this.skillAni.x < 0 || this.gameState == 'over') {
                console.log('\u3010------\u79FB\u9664\u673A\u5668\u4EBA\u6280\u80FD\u7279\u6548------\u3011');
                this.removeSkillAni();
            }
        }
    }, {
        key: 'skillHurt',
        value: function skillHurt(skillId) {
            var attackNum = 0;
            switch (skillId) {
                case 97:
                    attackNum = 80;
                    break;
                case 98:
                    attackNum = 100;
                    break;
                case 99:
                    attackNum = 120;
                    break;
            }
            this.selfPlayer.comp.injuredEffect(1, -attackNum, false, function () {});
        }
    }, {
        key: 'removeSkillAni',
        value: function removeSkillAni() {
            Laya.timer.clear(this, this.sportAni);
            if (this.skillAni) {
                this.skillAni.stop();
                this.skillAni.removeSelf();
            }
        }
    }, {
        key: 'showRobotCommonSkill',
        value: function showRobotCommonSkill(skillId) {
            var _this14 = this;

            var commonAni = new Laya.Animation();
            commonAni.zOrder = 1;
            var resUrl = '';
            if (skillId != 92) {
                resUrl = 'gamescenes/animations/robot_skill_' + skillId + '.ani';
            } else {
                resUrl = 'gamescenes/animations/recover_blood.ani';
                commonAni.zOrder = 1001;
            }
            commonAni.loadAnimation(resUrl, Laya.Handler.create(this, function (ani) {
                if (skillId != 92) {
                    commonAni.play(0, true);
                } else {
                    commonAni.play(0, false);
                    commonAni.on(Laya.Event.COMPLETE, _this14, _this14.removeRobotCommonSkill);
                }
            }), 'res/atlas/remote/robot_skill/skill_' + skillId + '.atlas');
            switch (skillId) {
                case 91:
                    commonAni.pos(1120, 280);
                    break;
                case 92:
                    commonAni.pos(1120, 400);
                    break;
                case 93:
                    commonAni.pos(1120, 280);
                    break;
                case 94:
                    commonAni.pos(1120, 300);
                    break;
                case 95:
                    commonAni.pos(1120, 280);
                    break;
                case 96:
                    commonAni.pos(1120, 280);
                    break;
                case 100:
                    commonAni.pos(1120, 280);
                    break;
            }

            commonAni.scaleX = -1;
            this.owner.addChild(commonAni);
            this.commonAni = commonAni;
        }
    }, {
        key: 'robotBecomeDevil',
        value: function robotBecomeDevil(endTime) {
            if (new Date().getTime() > endTime || this.gameState == 'over' || this.gameState == 'nextPlayer') {
                this.robotSkill = false;
                this.weaponManager.openCd();
                this.removeRobotCommonSkill();
                Laya.timer.clear(this, this.robotBecomeDevil);
                return;
            }
            this.otherPlayer.comp.becomeDevil(-100);
        }
    }, {
        key: 'showTips',
        value: function showTips(value) {
            this.playerStateComp && this.playerStateComp.setStateText(value);
        }
    }, {
        key: 'showSkillText',
        value: function showSkillText(isSelf, value) {
            var name = isSelf ? 'self' : 'other';
            this[name + 'SkillTextComp'].setSkillText(value);
        }
        //兵器点击后我方表现

    }, {
        key: 'weaponBarClickHandler',
        value: function weaponBarClickHandler(targetComp) {
            var _this15 = this;

            //体力不够
            var name = targetComp.isSelf ? 'self' : 'other';
            var consumeMP = targetComp.weaponConsume;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {

                if (targetComp.isSelf) {
                    // console.warn(name + 'Player' + "__体力不足");
                    this.playerStateComp && this.playerStateComp.setStateText("内力不足");
                }
                return;
            }

            //人物表现
            if (this.isSelf) {
                console.log('用户发射武器........');
            }

            this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb;

            var params = JSON.parse(JSON.stringify(targetComp.params)); //深拷贝,便于修改
            params.skillEffect = false;
            params.isSelf = targetComp.isSelf;
            //判断是否触发兵器技能
            //前提是有主动技能
            if (targetComp.params.activeSkill) {
                var skill = targetComp.params.activeSkill;
                var skillType = skill.skillType,
                    status = skill.status,
                    skillId = skill.skillId,
                    prob = skill.skillProb;
                /*  if(skillId==59){prob=100;} */ //测试用
                if (skillType == 1 && status == 1) {
                    var random = Math.floor(Math.random() * 100 + 1);
                    // if(skillId==50){prob=100;} 测试用
                    if (random <= prob) {
                        /* 区分哪些是影响自身表现的，哪些是影响对手伤害的 */
                        params.skillEffect = true;
                        this[name + 'Player'].comp.attackEffect(params.skillEffect); //兵器技能是否触发
                        this[name + 'Player'].comp.attackCallback = function () {
                            _SoundManager2.default.ins.weaponSkill();
                            _this15.weaponWithSkills(params, skillId);
                            _this15[name + 'Player'].comp.MPComp.changeMP(-consumeMP * _this15[name + 'MultiMP']);
                            if (skillId == 58) {
                                targetComp.startT(200); //快速冷却     
                            } else {
                                //正常开始技能冷却
                                targetComp.startT();
                            }
                        };
                        return;
                    } else {
                        console.warn('\u4E0D\u597D\u610F\u601D,' + name + '\u6CA1\u6709\u89E6\u53D1\u6280\u80FD');
                    }
                }
            }
            this[name + 'Player'].comp.attackEffect(false);
            this[name + 'Player'].comp.attackCallback = function () {
                _SoundManager2.default.ins.weaponLaunch();
                _this15.weaponLaunch(params);
                targetComp.startT();
                _this15[name + 'Player'].comp.MPComp.changeMP(-consumeMP * _this15[name + 'MultiMP']);
            };
        }
    }, {
        key: 'weaponLaunch',
        value: function weaponLaunch(params, deltaT) {
            var _this16 = this;

            if (params.isSelf) {
                console.log('\u3010-------\u6B66\u5668\u53D1\u5C04------\u3011');
            }
            var name = params.isSelf ? 'self' : 'other';
            var weapon = Laya.Pool.getItemByCreateFun("weapon", this.weapon.create, this.weapon);
            var weaponComp = weapon.getComponent(_Weapon2.default);
            weaponComp.weaponType = params.weaponType;
            weapon.params = params;
            weaponComp.isSelf = params.isSelf;
            if (params.isSelf) {
                weapon.pos(280, 450);
            } else {
                weapon.pos(1050, 450);
            }

            //暂定
            if (deltaT) {
                Laya.timer.once(deltaT, this, function () {
                    _this16.owner.addChild(weapon);
                    _this16[name + 'Weapons'].push(weaponComp);
                });
            } else {
                this.owner.addChild(weapon);
                this[name + 'Weapons'].push(weaponComp);
            }
        }

        //带着技能发射

    }, {
        key: 'weaponWithSkills',
        value: function weaponWithSkills(params, skillId) {
            var skillConfig = params.activeSkill.skillConfig;
            var skillName = params.activeSkill.skillName;
            var hurt = skillConfig.hurt;
            var durable = skillConfig.durable;
            params.skillEffect = true; //代表技能是触发的
            var weaponSkillBox = Laya.Pool.getItemByCreateFun('weaponSkillBox', this.weaponSkill.create, this.weaponSkill);
            weaponSkillBox.params = {
                skillName: skillName,
                isSelf: params.isSelf
            };
            if (params.isSelf) {
                weaponSkillBox.pos(-164, 189);
            } else {
                weaponSkillBox.pos(1498, 189);
            }
            this.owner.addChild(weaponSkillBox);
            switch (skillId) {
                case 43:
                case 44:
                    var weaponNum = skillConfig.weaponNum;
                    console.warn("------修改后的值------:", params.weaponAttack);
                    this.weaponLaunch(params);
                    for (var i = 0; i < weaponNum - 1; i++) {
                        this.weaponLaunch(params, 350 * (i + 1));
                    }
                    break;
                //造成几倍伤害 兵器前方加气流
                case 47:
                case 48:
                    // params.weaponAttack = params.weaponAttack * hurt;
                    this.weaponLaunch(params);
                    break;
                //向上中路各发出1件兵器 几率12%
                case 51:
                    params.weaponType = 2;
                    this.weaponLaunch(params);
                    params.weaponType = 3;
                    this.weaponLaunch(params);
                    break;
                // 向上中下路各发出1件兵器 几率8%
                case 52:
                    params.weaponType = 1;
                    this.weaponLaunch(params);
                    params.weaponType = 2;
                    this.weaponLaunch(params);
                    params.weaponType = 3;
                    this.weaponLaunch(params);
                    break;
                //100%伤害转化为生命 几率18%
                case 45:
                case 46:
                case 49:
                case 50:
                case 53:
                case 54:
                case 55:
                case 59:
                case 58:
                    this.weaponLaunch(params);
                    break;
                case 60:
                    params.weaponType = 4;
                    this.weaponLaunch(params);
                    break;
                //造成几倍伤害 兵器上加刀刃特效
                case 56:
                case 57:
                case 61:
                    // params.weaponAttack = params.weaponAttack * hurt;
                    this.weaponLaunch(params);
                    break;
                //兵器耐久提升100%
                case 62:
                    params.weaponDurable = params.weaponDurable * durable;
                    this.weaponLaunch(params);
                    break;

            }
        }
    }, {
        key: 'removeWeapon',
        value: function removeWeapon(target) {
            var targetWeapons = target.isSelf ? this.selfWeapons : this.otherWeapons;
            for (var i = 0, len = targetWeapons.length; i < len; i++) {
                if (targetWeapons[i] == target) {
                    targetWeapons.splice(i, 1);
                    //console.log("删除自己")
                    break;
                }
            }
            console.log('删除后数组' + target.isSelf, targetWeapons.length);
        }
        //闪避技能 可能双方都要用

    }, {
        key: 'dodgeSkillShow',
        value: function dodgeSkillShow(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var originMP = this[name + 'Player'].comp.MPComp.originMP;
            var consumeMP = 0 * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                if (isSelf) {
                    this.playerStateComp && this.playerStateComp.setStateText("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.dodgeComp.startT();
            }
            this.showSkillText(isSelf, "闪避");
            this[name + "Player"].comp.MPComp.changeMP(-consumeMP);
            console.log('闪避技能使用');
            this[name + 'Player'].comp.dodgeEffect();
        }
        // 全局碰撞检测

    }, {
        key: 'collisionDetection',
        value: function collisionDetection() {}
        //所有有cd的 和技能关闭

    }, {
        key: 'allCdEnd',
        value: function allCdEnd() {
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.setCdTime(weaponBarComp.originCdTime); //恢复原来的冷却时间
                weaponBarComp.endCD();
            });
            this.skillScr1.endCD();
            this.skillScr2.endCD();
            this.dodgeComp.endCD();
            this.selfPlayer.comp.removeSkill2(); //如果有技能2,直接关掉
        }
    }, {
        key: 'deathHandler',
        value: function deathHandler(loserIsSelf) {
            this.removeRobotCommonSkill();
            this.closeAllRobotTimer();
            Laya.MouseManager.enabled = false;
            Laya.timer.clear(this, this.startSelect);
            Laya.timer.clear(this, this.firstWeaponSelect);
            console.log('------\u6709\u4EBA\u6B7B\u4EA1------');
            this.removeAllWeapons();

            switch (this.gameType) {
                case 'adventure':
                case 'pass':
                    this.dealPass(loserIsSelf);
                    break;
                case 'battle':

                    //  SoundManager.ins.homeBg();
                    this.dealBattle(loserIsSelf);
                    break;
            }
        }
    }, {
        key: 'dealPass',
        value: function dealPass(loserIsSelf) {
            if (loserIsSelf) {

                this.passOver(loserIsSelf);
            } else {
                this.killNum += 1;
                console.error('\u6B7B\u4EA1\u4E2A\u6570\uFF1A', this.killNum);
                if (this.killNum == this.monsterNum) {
                    this.passOver(loserIsSelf);
                } else {
                    this.gameState = 'nextPlayer'; //游戏状态是等下一个出场;
                    Laya.timer.once(1500, this, this.replacePlayer);
                }
            }
        }
    }, {
        key: 'dealBattle',
        value: function dealBattle(loserIsSelf) {
            var _this17 = this;

            this.gameState = 'over';
            if (this.selfPlayer.comp.attr.roleId == 4) {
                this.removeDragons(1);
                this.removeDragons(2);
            }
            this.allCdEnd();
            this.gameOver(loserIsSelf);
            var win = loserIsSelf ? 0 : 1;
            Laya.timer.callLater(this, function () {
                _this17.POST('martial_match_end', {
                    win: win
                }, function (res) {
                    PaoYa.DataCenter.user.dailyTaskStatus = res.dailyTaskStatus;
                    Laya.MouseManager.enabled = true;
                    res.result = loserIsSelf ? -1 : 1;
                    res.roleId = _this17.params.roleId, res.robotRoleId = _this17.params.robotRoleId;
                    res.nickName = _this17.params.nickName;
                    res.robotNickName = _this17.params.robotNickName;
                    _this17.navigator.popup('/dialog/BattleResultDialog', res);
                });
            });
        }
        //换角色

    }, {
        key: 'replacePlayer',
        value: function replacePlayer() {
            Laya.MouseManager.enabled = true;
            this.selfWeapons = []; //以防万一没清理干净
            this.otherWeapons = [];
            this.robotRole = JSON.parse(JSON.stringify(this.params.monsterList[this.killNum].robotRole));
            this.robotWeaponList = JSON.parse(JSON.stringify(this.params.monsterList[this.killNum].robotWeaponList));
            this.resetPlayerInfo(); //主要是重置对方的名字信息
            this.initPlayer(false);
            this.battleIndex = this.killNum + 1;
            this.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                gameType: this.gameType,
                curNum: this.curNum,
                battleIndex: this.battleIndex,
                monsterNum: this.monsterNum
            });
            // console.error('换角色');
            this.gameState = 'start';
            this.firstWeaponSelect();
        }
        //角色复活

    }, {
        key: 'revive',
        value: function revive() {
            this.gameState = 'start';
            _SoundManager2.default.ins.passBg();
            this.initPlayer(true);
            this.firstWeaponSelect();
            this.otherPlayer.comp.MPComp.startBar();
        }

        //关卡结束

    }, {
        key: 'passOver',
        value: function passOver(loserIsSelf) {
            var _this18 = this;

            this.gameState = 'over';
            if (this.selfPlayer.comp.attr.roleId == 4) {
                this.removeDragons(1);
                this.removeDragons(2);
            }
            this.allCdEnd();
            if (this.gameType == 'pass') {
                _Global.Global.gameEndStat(this.params.stageId, {
                    static: loserIsSelf ? 'fail' : 'complete'
                });
            }
            if (!loserIsSelf) {
                _SoundManager2.default.ins.win();
                PaoYa.DataCenter.user.current = this.curNum + 1;
                this.selfPlayer.comp.skeleton.play('win', true);
            } else {
                _SoundManager2.default.ins.lose();
                PaoYa.DataCenter.user.current = this.curNum;
                this.otherPlayer.comp.skeleton.play('win', true);
            }
            this.selfPlayer.comp.MPComp.stopIncrease();
            this.otherPlayer.comp.MPComp.stopIncrease();

            Laya.timer.once(1000, this, function () {
                if (_this18.gameType == 'pass') {
                    _this18.POST('martial_game_end', {
                        killNum: _this18.killNum
                    }, function (res) {
                        Laya.MouseManager.enabled = true;
                        res.result = loserIsSelf ? -1 : 1;
                        res.stageId = _this18.params.stageId;
                        if (JSON.stringify(res.encounter) == '{}') {
                            PaoYa.DataCenter.user.dailyTaskStatus = res.dailyTaskStatus;
                            if (loserIsSelf) {
                                _this18.navigator.popup('/dialog/PassResultDialogLose1', res);
                            } else {
                                _this18.navigator.popup('/dialog/PassResultDialog', res);
                            }
                        } else {
                            switch (res.encounter.type) {
                                case 1:
                                case 2:
                                    _this18.navigator.popup('/dialog/AdventDialog', res);
                                    break;
                                case 3:
                                    _this18.navigator.popup('adventure/ChangeWp', res);
                                    break;
                                case 4:
                                    _this18.navigator.popup('adventure/GetAward', res);
                                    break;
                                case 5:
                                    _this18.navigator.popup('/dialog/AdventDialog5', res);
                                    break;
                                case 6:
                                    _this18.navigator.popup('adventure/BuyWp', res);
                                    break;
                            }
                        }
                    });
                } else if (_this18.gameType == 'adventure') {

                    _this18.POST('martial_encounter_finish', {
                        result: loserIsSelf ? -1 : 1,
                        complete: loserIsSelf ? -1 : 1
                    }, function (res) {
                        PaoYa.DataCenter.user.dailyTaskStatus = res.dailyTaskStatus;
                        Laya.MouseManager.enabled = true;
                        res.result = loserIsSelf ? -1 : 1;
                        _this18.navigator.popup('/dialog/AdventResultDialog', res);
                    });
                }
            });
        }
    }, {
        key: 'removeAllWeapons',
        value: function removeAllWeapons() {
            console.warn('------\u79FB\u9664\u6240\u6709\u5175\u5668------');
            //删除界面上兵器
            this.selfWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
        }
    }, {
        key: 'gameOver',
        value: function gameOver(loserIsSelf) {
            if (!loserIsSelf) {
                _SoundManager2.default.ins.win();
                this.selfPlayer.comp.skeleton.play('win', true);
            } else {
                _SoundManager2.default.ins.lose();
                this.otherPlayer.comp.skeleton.play('win', true);
            }

            console.error('游戏结束');

            this.selfPlayer.comp.MPComp.stopIncrease();
            this.otherPlayer.comp.MPComp.stopIncrease();
            //this.removeAllWeapons();
            this.boxGameBanner.getComponent(_GameBanner2.default);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {
            console.error('destroy111');
            this.selfWeapons = null;
            this.otherWeapons = null;
            this.selfPlayer = null;
            this.otherPlayer = null;
            Laya.timer.clearAll(this);
            Laya.MouseManager.enabled = true;
        }
    }]);

    return GameControl;
}(PaoYa.Component);

exports.default = GameControl;

},{"../scripts/common/tool/Global":55,"./SkillManager":7,"./SoundManager":8,"./WeaponManager":9,"./preOpen/PreOpenManager":22,"./prefab/Dodge":25,"./prefab/GameBanner":26,"./prefab/HPBar":27,"./prefab/MPBar":28,"./prefab/Player":29,"./prefab/PlayerSkill":30,"./prefab/PlayerState":31,"./prefab/Skill":33,"./prefab/Weapon":34,"./prefab/WeaponBar":35,"./prefab/WeaponSkill":36}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _GameView2 = require("../GameView");

var _GameView3 = _interopRequireDefault(_GameView2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameGuide = function (_GameView) {
    _inherits(GameGuide, _GameView);

    function GameGuide() {
        _classCallCheck(this, GameGuide);

        return _possibleConstructorReturn(this, (GameGuide.__proto__ || Object.getPrototypeOf(GameGuide)).call(this));
    }

    return GameGuide;
}(_GameView3.default);

exports.default = GameGuide;

},{"../GameView":6}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _MPBar = require("./prefab/MPBar");

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require("./prefab/HPBar");

var _HPBar2 = _interopRequireDefault(_HPBar);

var _GameControl = require("./GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameView = function (_PaoYa$View) {
  _inherits(GameView, _PaoYa$View);

  function GameView() {
    _classCallCheck(this, GameView);

    return _possibleConstructorReturn(this, (GameView.__proto__ || Object.getPrototypeOf(GameView)).call(this));
  }

  _createClass(GameView, [{
    key: "onAwake",
    value: function onAwake() {
      this.selfMPBarScr = this.boxSelfInfo.getChildByName('boxMPBar').getComponent(_MPBar2.default);
      this.selfHPBarScr = this.boxSelfInfo.getChildByName('boxHPBar').getComponent(_HPBar2.default);

      this.otherMPBarScr = this.boxOtherInfo.getChildByName('boxMPBar').getComponent(_MPBar2.default);
      this.otherHPBarScr = this.boxOtherInfo.getChildByName('boxHPBar').getComponent(_HPBar2.default);

      var sceneSK = new Laya.Skeleton();
      var sceneURL = '';

      if (_GameControl2.default.instance.closeRobot) {
        sceneURL = "remote/spine/scene/scene1.sk";
        this.sceneBg.texture = "remote/game/scene1.jpg";
      }
      if (this.params.gameType == "pass" || this.params.gameType == "adventure") {
        if (this.params.stageId < 15) {
          sceneURL = "remote/spine/scene/scene1.sk";
          this.sceneBg.texture = "remote/game/scene1.jpg";
        } else if (this.params.stageId >= 15 && this.params.stageId <= 29) {
          sceneURL = "remote/spine/scene/scene3.sk";
          this.sceneBg.texture = "remote/game/scene3.jpg";
        } else {
          sceneURL = "remote/spine/scene/scene1.sk";
          this.sceneBg.texture = "remote/game/scene1.jpg";
        }
      } else if (this.params.gameType == "battle") {
        sceneURL = "remote/spine/scene/scene2.sk";
        this.sceneBg.texture = "remote/game/scene2.jpg";
      }
      sceneSK.load(sceneURL, Laya.Handler.create(this, function (res) {
        sceneSK.play('stand', true);
      }));
      this.sceneSK = sceneSK;
      this.scenePoint.addChild(sceneSK);
    }
  }, {
    key: "onEnable",
    value: function onEnable() {}
  }, {
    key: "initView",
    value: function initView() {}
  }, {
    key: "setInfo",
    value: function setInfo(data, isSelf) {
      var boxInfo = isSelf ? this.boxSelfInfo : this.boxOtherInfo;
      var imgIcon = boxInfo.getChildByName("imgIcon");
      var lblName = boxInfo.getChildByName("lblName");
      imgIcon.skin = data.icon;
      lblName.text = data.name;
    }
  }, {
    key: "setHPbar",
    value: function setHPbar(value, isSelf) {
      var HPBarScr = isSelf ? this.selfHPBarScr : this.otherHPBarScr;
    }
  }, {
    key: "setMPBar",
    value: function setMPBar(value, isSelf) {
      var MPBarScr = isSelf ? this.selfMPBarScr : this.otherMPBarScr;
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {
      /*   console.log(this.sceneSK._templet)
        ///场景动画怎么处置
         this.sceneSK&&this.sceneSK.destroy();
        this.sceneSK=null;   */
    }
  }]);

  return GameView;
}(PaoYa.View);

exports.default = GameView;

},{"./GameControl":4,"./prefab/HPBar":27,"./prefab/MPBar":28}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RobotSkill = require("./prefab/RobotSkill");

var _RobotSkill2 = _interopRequireDefault(_RobotSkill);

var _GameControl = require("./GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkillManager = function (_Laya$Script) {
  _inherits(SkillManager, _Laya$Script);

  function SkillManager(skillList) {
    _classCallCheck(this, SkillManager);

    var _this = _possibleConstructorReturn(this, (SkillManager.__proto__ || Object.getPrototypeOf(SkillManager)).call(this));

    _this.skillList = [];
    for (var i = 0, len = skillList.length; i < len; i++) {
      var skill = _RobotSkill2.default.create(skillList[i].skillConfig);
      _this.skillList.push(skill);
    }
    return _this;
  }

  _createClass(SkillManager, [{
    key: "seletedSkill",
    value: function seletedSkill() {
      var skills = [];
      var curHp = 0;
      if (!_GameControl2.default.instance.otherPlayer.comp.canAction) {
        /* 机器人不能动弹的时候技能不会触发 */
        return null;
      }
      if (_GameControl2.default.instance.isSkilling) {
        console.error("-----\u6280\u80FD\u4E92\u65A52222-----");
        return null;
      }
      for (var i = 0, len = this.skillList.length; i < len; i++) {
        if (!this.skillList[i].freezeing && this.skillList[i].limit) {
          if (this.skillList[i].lifeValue) {
            curHp = _GameControl2.default.instance.otherPlayer.comp.HPComp.curHP;
            if (curHp <= this.skillList[i].lifeValue && this.skillList[i].perTimeOK && this.skillList[i].timeOK && !_GameControl2.default.instance.robotSkill) {
              skills.push(this.skillList[i]);
            }
          } else if (this.skillList[i].perTimeOK && this.skillList[i].timeOK && !_GameControl2.default.instance.robotSkill) {
            skills.push(this.skillList[i]);
          }
        }
      }
      var random = Math.floor(Math.random() * skills.length);
      if (skills[random]) {
        skills[random].startCd();
        skills[random].limit -= 1;
        return skills[random];
      }
      return null;
    }
  }]);

  return SkillManager;
}(Laya.Script);

exports.default = SkillManager;

},{"./GameControl":4,"./prefab/RobotSkill":32}],8:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SoundManager = function () {
    _createClass(SoundManager, null, [{
        key: 'ins',
        get: function get() {
            if (!this._ins) this._ins = new SoundManager();
            return this._ins;
        }
    }]);

    function SoundManager() {
        _classCallCheck(this, SoundManager);

        this.url = 'remote/sound/';
        this.suffix = Laya.Render.isConchApp ? '.wav' : '.mp3';
        if (localStorage.getItem("musicSwitchState") || localStorage.getItem("musicSwitchState") == 'true') {
            Laya.SoundManager.musicMuted = true;
        }
        if (localStorage.getItem("effectSwitchState") || localStorage.getItem("effectSwitchState") == 'true') {
            Laya.SoundManager.soundMuted = true;
        }
    }

    _createClass(SoundManager, [{
        key: 'playMusic',
        value: function playMusic(fileName) {
            var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            if (!Laya.SoundManager.musicMuted) {
                var url = this.url + fileName + this.suffix;
                this.currentChannel = Laya.SoundManager.playMusic(url, loop);
            }
        }
    }, {
        key: 'playSound',
        value: function playSound(fileName, loop, cb) {
            loop === void 0 && (loop = 1);
            cb === void 0 && (cb = null);
            if (!Laya.SoundManager.soundMuted) {
                var url = this.url + fileName + this.suffix;
                Laya.SoundManager.playSound(url, loop, Laya.Handler.create(this, cb));
                Laya.SoundManager.setSoundVolume(1);
            }
        }
    }, {
        key: 'homeBg',
        value: function homeBg() {
            SoundManager.curBg = 'homeBg';
            this.playMusic('homeBg');
        }
        /* 对战战斗音乐 */

    }, {
        key: 'battleBg',
        value: function battleBg() {
            SoundManager.curBg = 'battleBg';
            this.playMusic('battleBg');
        }
        /* 闯关战斗音乐 */

    }, {
        key: 'passBg',
        value: function passBg() {
            SoundManager.curBg = 'passBg';
            this.playMusic('passBg');
        }
        /* 兵器撞击 */

    }, {
        key: 'collide',
        value: function collide() {
            this.playSound('collide');
        }
        /* 受伤 */

    }, {
        key: 'injured',
        value: function injured() {
            this.playSound('injured');
        }
        /* 英雄技能1触发 */

    }, {
        key: 'heroSkill1',
        value: function heroSkill1() {
            this.playSound('hero1');
        }
        /* 英雄技能2触发 */

    }, {
        key: 'heroSkill2',
        value: function heroSkill2() {
            this.playSound('hero2');
        }
        /* 兵器技能触发 */

    }, {
        key: 'weaponSkill',
        value: function weaponSkill() {
            var _this = this;

            this.playSound('weaponLaunch', 1, function () {
                _this.playSound('weaponSkill');
            });
        }
        /* 兵器发射 */

    }, {
        key: 'weaponLaunch',
        value: function weaponLaunch() {
            this.playSound('weaponLaunch');
        }
        /* 点击常规按钮音效 */

    }, {
        key: 'btn',
        value: function btn() {
            this.playSound('btn');
        }
        /* 升级音效 */

    }, {
        key: 'upgrade',
        value: function upgrade() {
            this.playSound('upgrade');
        }
        /* 获取gold */

    }, {
        key: 'gold',
        value: function gold() {
            this.playSound('gold');
        }
        /* 装盘音效 */

    }, {
        key: 'round',
        value: function round() {
            this.playSound('round');
        }
    }, {
        key: 'win',
        value: function win() {
            this.playMusic('win', 1);
        }
    }, {
        key: 'lose',
        value: function lose() {
            this.playMusic('lose', 1);
        }
    }]);

    return SoundManager;
}();

exports.default = SoundManager;

SoundManager._ins;
SoundManager.curBg = "homeBg";

},{}],9:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponManager = function (_Laya$Script) {
  _inherits(WeaponManager, _Laya$Script);

  function WeaponManager(robotWeaponList) {
    _classCallCheck(this, WeaponManager);

    var _this = _possibleConstructorReturn(this, (WeaponManager.__proto__ || Object.getPrototypeOf(WeaponManager)).call(this));

    _this.weaponList = [];
    for (var i = 0, len = robotWeaponList.length; i < len; i++) {
      var weapon = new PrivateWeapon(robotWeaponList[i]);
      _this.weaponList.push(weapon);
    }
    return _this;
  }

  _createClass(WeaponManager, [{
    key: 'seletedWeapon',
    value: function seletedWeapon(index) {
      if (index != undefined) {
        return this.weaponList[index];
      };
      var weapons = [];
      for (var i = 0, len = this.weaponList.length; i < len; i++) {
        if (!this.weaponList[i].freezeing) {
          // console.warn("可用兵器id:",this.weaponList[i].params.weaponName);
          weapons.push(this.weaponList[i]);
        }
      }
      var random = Math.floor(Math.random() * weapons.length);
      //  console.error('选中兵器:......:',weapons[random].params.weaponName)
      return weapons[random];
    }
  }, {
    key: 'closeCd',
    value: function closeCd() {
      this.weaponList.forEach(function (weapon) {
        weapon.clearCd();
      });
    }
  }, {
    key: 'openCd',
    value: function openCd() {
      this.weaponList.forEach(function (weapon) {
        weapon.openCd();
      });
    }
  }]);

  return WeaponManager;
}(Laya.Script);

exports.default = WeaponManager;

var PrivateWeapon = function () {
  function PrivateWeapon(weaponParams) {
    _classCallCheck(this, PrivateWeapon);

    this.params = deepMerge(weaponParams);
    this.freezeing = false;
    this.isSelf = false;
    this.cdTime = this.params.weaponCd;
    this.originCdTime = this.params.weaponCd;
    this.weaponConsume = this.params.weaponConsume;
  }

  _createClass(PrivateWeapon, [{
    key: 'selectedHandler',
    value: function selectedHandler() {
      if (this.freezeing) {
        console.error('机器人兵器冷却中，不可使用');
        return false;
      }
      /*  return this.config; */
    }
  }, {
    key: 'startT',
    value: function startT() {
      console.error('机器人兵器进行冷却');
      if (this.cdTime == 0) {
        return;
      }
      this.freezeing = true;
      Laya.timer.once(this.cdTime * 1000, this, this.changeStatus);
    }
  }, {
    key: 'changeStatus',
    value: function changeStatus() {
      this.freezeing = false;
    }
  }, {
    key: 'clearCd',
    value: function clearCd() {
      //console.warn('修改cd时间:',cdTime);
      //cd 时间
      console.error('-----机器人无cd时间------');
      this.cdTime = 0;
    }
  }, {
    key: 'openCd',
    value: function openCd() {
      this.cdTime = this.originCdTime;
    }
    /*    recoverCd(){
         this.cdTime=this.originCdTime;
       } */

  }]);

  return PrivateWeapon;
}();

function deepMerge() {
  var result = Object.create(null);

  for (var _len = arguments.length, objs = Array(_len), _key = 0; _key < _len; _key++) {
    objs[_key] = arguments[_key];
  }

  objs.forEach(function (obj) {
    if (obj) {
      Object.keys(obj).forEach(function (key) {
        var val = obj[key];
        if (isPlainObject(val)) {
          if (isPlainObject(result[key])) {
            result[key] = deepMerge(result[key], val);
          } else {
            result[key] = deepMerge(val);
          }
        } else {
          result[key] = val;
        }
      });
    }
  });
  return result;
}
function isPlainObject(val) {
  return Object.prototype.toString.call(val) === '[object Object]';
}

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var baseUrl = 'https://xgamejuedixiaomie.goxiaochengxu.cn/1006/';
var HeroConfig = {
  ladderArr: ["", "无名小卒", '初出茅庐', '后起之秀', '江湖少侠', '武林高手', '名震江湖', '独步武林', '一代宗师', '独孤求败'],
  roleName: '',
  roleIcon: '',
  roleHp: 100, //HP:hit point 生命值,roleUp为0,game over
  roleMp: 100, //MP:magic point 内力，体力  内力恢复公式：每30帧内力恢复量=roleUp/390*30。
  /*  */
  roleStrength: 2, //arm strength ,臂力值决定兵器基础伤害值。兵器基础伤害=兵器攻击力*（roleStrength-对方根骨）/roleStrength
  roleBone: 2, //根骨  .值越大收到兵器攻击受到的伤害越小
  roleCritProb: 20, //暴击几率 ,
  roleCritHarm: 100, //暴伤百分比，兵器造成伤害=兵器基础伤害*roleCritHarm
  roleSkills: [{
    skillConfig: {},
    skillDesc: ""
  }, {}],
  crossIcons: [{
    name: '熄灭火花',
    skin: 'remote/icon/1.png',
    appId: 'wxe01f9f77ddb96b19'
  }, {
    name: '跳一跳',
    skin: 'remote/icon/2.png',
    appId: 'wx79a2296d151ac183'
  }, {
    name: '建筑反应堆',
    skin: 'remote/icon/3.png',
    appId: 'wxb4ac0c02cd5bbd13'
  }, {
    name: '木兰射箭',
    skin: 'remote/icon/4.png',
    appId: 'wx84dbcda70a6e5385'
  }, {
    name: '决战地牢',
    skin: 'remote/icon/5.png',
    appId: 'wx325b44b8ed5ef472'
  }, {
    name: '飞刀大师',
    skin: 'remote/icon/6.png',
    appId: 'wxbc263a31f4a052e7'
  }, {
    name: '火力飙车',
    skin: 'remote/icon/7.png',
    appId: 'wxed5a853eb6f8c194'
  }, {
    name: '采油小怪',
    skin: 'remote/icon/8.png',
    appId: 'wxee32187228632dc8'
  }, {
    name: '开心消方块',
    skin: 'remote/icon/9.png',
    appId: 'wx169e4a2b116bdab6'
  }],
  spineMap: {
    freeze: {
      path: "spine/freeze/freeze.sk",
      name: ['continue', 'freeze'],
      ready_go: 1,
      templet: null
    },
    hero_1: {
      path: 'spine/hero/hero_1.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_2: {
      path: 'spine/hero/hero_2.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_3: {
      path: 'remote/spine/hero/hero_3.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_4: {
      path: 'spine/hero/hero_4.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    npc_1: {
      path: "remote/spine/npc/npc_1.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_2: {
      path: "remote/spine/npc/npc_2.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_3: {
      path: "remote/spine/npc/npc_3.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_4: {
      path: "remote/spine/npc/npc_4.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_5: {
      path: "remote/spine/npc/npc_5.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_6: {
      path: "remote/spine/npc/npc_6.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_7: {
      path: "remote/spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_8: {
      path: "remote/spine/npc/npc_8.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_9: {
      path: "remote/spine/npc/npc_9.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    scene1: {
      path: "remote/spine/scene/scene1.sk",
      templet: null
    },
    scene2: {
      path: "remote/spine/scene/scene2.sk",
      templet: null
    },
    scene3: {
      path: "remote/spine/scene/scene3.sk",
      templet: null
    }
  },

  /* 提供给外部获取动画的接口，输入动画名字即可 */
  getSkeleton: function getSkeleton(spineName, index, cb) {
    if (index == undefined) {
      index = 0;
    }
    var skeleton;
    if (this.spineMap[spineName].templet) {
      skeleton = this.spineMap[spineName].templet.buildArmature(index);
    } else {
      skeleton = new Laya.Skeleton();
      skeleton.load(this.spineMap[spineName].path);
    }
    return skeleton;
  },
  loadAllSpine: function loadAllSpine() {
    this.loadIndex = 0;
    var spines = Object.keys(this.spineMap);
    this.preload(spines);
  },
  preload: function preload(spines) {
    var _this = this;
    var spine = this.spineMap[spines[this.loadIndex]];
    this.loadSpine(spine.path, function (templet) {
      spine.templet = templet;
      if (_this.loadIndex == spines.length - 1) {
        return;
      } else {
        _this.loadIndex++;
        _this.preload(spines);
      }
    }, function () {
      if (_this.loadIndex == spines.length - 1) {
        return;
      } else {
        _this.loadIndex++;
        _this.preload(spines);
      }
    });
  },
  loadSpine: function loadSpine(url, completion, error) {
    var templet = new Laya.Templet();
    templet.on(Laya.Event.COMPLETE, this, function () {
      completion && completion(templet);
    });
    templet.on(Laya.Event.ERROR, this, function () {
      console.error("E: Load spine, skin:" + url);
      error && error();
    });
    templet.loadAni(url);
  }
  //英雄携带的兵器
  //每个英雄对应的技能，和技能对应的动画效果
};exports.default = HeroConfig;

},{}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponBar = require("../prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _AlertDialog = require("./AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdventDialog = function (_PaoYa$Dialog) {
    _inherits(AdventDialog, _PaoYa$Dialog);

    function AdventDialog() {
        _classCallCheck(this, AdventDialog);

        return _possibleConstructorReturn(this, (AdventDialog.__proto__ || Object.getPrototypeOf(AdventDialog)).call(this));
    }

    _createClass(AdventDialog, [{
        key: "onAwake",
        value: function onAwake() {
            var _this3 = this;

            this.autoDestroyAtClosed = true;
            var _this = this;
            this.resultParams = JSON.parse(JSON.stringify(this.params));
            if (this.params.encounter) {
                this.params = this.params.encounter;
            }
            console.log('hahhahahhh');
            var type = this.params.type;
            this.spRole.texture = "remote/guide/" + this.params.dress + ".png";
            if (this.params.dress == "npc_3") {
                this.spRole.y = 177;
            }
            this.adventType = [{
                type: 1,
                target: "\u51FB\u6740" + this.params.num + "\u4E2A\u532A\u5F92",
                detail: "\u8FDC\u5904\u4E00\u843D\u9B44\u5973\u5B50\u62B1\u7740\u5305\u88B1\u8DCC\u8DCC\u649E\u649E\u5730\u51B2\u4F60\u8DD1\u6765\uFF0C\u540E\u9762\u8DDF\u7740\u4E00\u7FA4\u62FF\u5230\u7684\u97E9\u975E\uFF0C\u90A3\u5973\u5B50\u5411\u4F60\u558A\u5230:\"\u6551\u547D\u554A\uFF01\u8DEF\u4E0A\u5076\u9047\u72C2\u5F92\uFF0C\u4E0D\u80DC\u5176\u6270\uFF0C\u6073\u8BF7\u5927\u4FA0\u6551\u6551\u5C0F\u5973\u5B50\"",
                agreeText: "\u653E\u5F00\u90A3\u4E2A\u5973\u5B69",
                rejectText: "\u591A\u4E00\u4E8B\u4E0D\u5982\u5C11\u4E00\u4E8B"
            }, {
                type: 2,
                target: "\u5C3D\u53EF\u80FD\u5730\u6253\u8D25\u5B88\u64C2\u4EBA",
                detail: "\u57CE\u5916\u64C2\u53F0\u8FB9\u4EBA\u5934\u6512\u52A8\uFF0C\u539F\u662F\u544A\u793A\u724C\u4E0A\u65B0\u5F20\u8D34\u4E86\u4E00\u5F20\u82F1\u96C4\u699C\u3002\u56E0\u8FD9\u6B21\u5B88\u64C2\u4E4B\u4EBA\u8749\u8054\u4E86\u56DB\u6B21\u64C2\u4E3B\u4E4B\u4F4D\uFF0C\u5956\u52B1\u53F2\u65E0\u524D\u4F8B\u7684\u4E30\u539A\u3002\u5F88\u591A\u4E60\u6B66\u4E4B\u4EBA\u90FD\u8DC3\u8DC3\u6B32\u8BD5\uFF0C\u8981\u4E0D\u53BB\u770B\u770B\uFF1F",
                agreeText: "\u72ED\u8DEF\u76F8\u9022\u52C7\u8005\u80DC",
                rejectText: "\u5C0F\u547D\u8981\u7D27\u6E9C\u4E86\u6E9C\u4E86"
            }];
            var advent = this.findAdventByType(type);
            var lbls = this.boxDetail._children;
            lbls[0].text = advent.target;
            lbls[1].text = advent.detail;
            this.initFont(advent);
            var weaponBarPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/WeaponBar.json', Laya.Handler.create(_this3, function (json) {
                    // console.log(json);
                    if (json instanceof Laya.Prefab) {
                        resolve(json.json);
                    } else {
                        resolve(json);
                    }
                }));
            });
            var rewardPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/Reward.json', Laya.Handler.create(_this3, function (json) {
                    resolve(json);
                }));
            });
            Promise.all([weaponBarPromise, rewardPromise]).then(function (jsons) {
                _this.initReward(jsons);
            });
            this.on(Laya.Event.CLICK, this, this.clickHandler);
            /*  this.btnAgree.on(Laya.Event.CLICK,this,agreeHandler);
             this.btnReject.on(Laya.Event.CLICK,this,rejectHandler); */
        }
    }, {
        key: "clickHandler",
        value: function clickHandler(e) {
            switch (e.target.name) {
                case "btnAgree":
                    this.agreeHandler();
                    break;
                case "btnReject":
                    this.rejectHandler();
                    break;
                case "closeT":
                    this.hangUp();
                    break;
            }
        }
    }, {
        key: "hangUp",
        value: function hangUp() {
            this.close();
            if (PaoYa.navigator.scenes.length > 1) {
                PaoYa.navigator.popup('/dialog/PassResultDialog', this.resultParams);
            }
        }
    }, {
        key: "initReward",
        value: function initReward(jsons) {
            //  console.log(jsons)
            var weaponList = this.params.weaponList;
            var len = weaponList.length;
            for (var i = 0; i < len; i++) {
                var weaponView = new Laya.Prefab();
                weaponView.json = jsons[0];
                this.weaponView = weaponView;
                var view = Laya.Pool.getItemByCreateFun('WeaponView', weaponView.create, weaponView);
                var weaponBarsComp = view.getComponent(_WeaponBar2.default);
                weaponBarsComp.params = weaponList[i];
                view.scale(0.6, 0.6);
                view.off(Laya.Event.CLICK, weaponBarsComp);
                this.hboxReward.addChild(view);
            }
            if (this.params.diamond) {
                var diamondView = this.createRewardBox(jsons[1]);
                console.log(diamondView.getChildByName("lblNum").text);
                diamondView.getChildByName("lblNum").scale(0.4, 0.4);
                diamondView.getChildByName("lblNum").text = "\xD7 " + this.params.diamond;
                diamondView.getChildByName("lblNum").font = "weaponNFontT";
                this.hboxReward.addChild(diamondView);
            }
            if (this.params.gold) {
                var goldView = this.createRewardBox(jsons[1]);
                goldView.getChildByName('lblNum').scale(0.4, 0.4);
                goldView.getChildByName('lblNum').text = "\xD7 " + this.params.gold;
                goldView.getChildByName('lblNum').font = "weaponNFontT";
                goldView.getChildByName("spReward").texture = "local/common/icon.png";
                this.hboxReward.addChild(goldView);
            }
        }
    }, {
        key: "createRewardBox",
        value: function createRewardBox(json) {
            var rewardView = new Laya.Prefab();
            rewardView.json = json;
            var view = Laya.Pool.getItemByCreateFun("RewardView", rewardView.create, rewardView);
            return view;
        }
    }, {
        key: "initFont",
        value: function initFont(advent) {
            var len = this.boxLbls._children.length;
            for (var i = 0; i < len; i++) {
                this.boxLbls._children[i].font = "adventure";
            }
            this.lblAgree.text = advent.agreeText;
            this.lblReject.text = advent.rejectText;
            this.lblAgree.font = "adventure";
            this.lblReject.font = "adventure";
        }
    }, {
        key: "findAdventByType",
        value: function findAdventByType(type) {
            return this.adventType.filter(function (item) {
                return item.type == type;
            })[0];
        }
    }, {
        key: "agreeHandler",
        value: function agreeHandler() {
            var _this4 = this;

            var _this = this;
            console.log("\u8FDB\u5165\u5947\u9047");
            PaoYa.Request.POST("hero_game_start", {
                stageId: this.params.id
            }, function (res) {
                // 绘制遮罩区，含透明度，
                if (PaoYa.navigator.scenes.length > 1) {
                    var maskArea = new Laya.Sprite();
                    maskArea.alpha = 0.5;
                    maskArea.graphics.drawRect(0, 0, Laya.Browser.width, Laya.Browser.height, "#000");
                    // maskArea.pos(-150,0);
                    maskArea.mouseEnabled = true;
                    maskArea.zOrder = 2000;
                    Laya.stage.addChild(maskArea);
                    var tween = new Laya.Tween();
                    tween.to(maskArea, {
                        alpha: 1
                    }, 600, null, Laya.Handler.create(_this4, function () {
                        res.gameType = "adventure";
                        PaoYa.navigator.replace("GameView", res);
                        _this4.close();
                        tween.clear();
                        Laya.stage.removeChild(maskArea);
                    }));
                } else {
                    _this4.close();
                    /*  delete `gamescenes/prefab/WeaponBar.json` */
                    /*    this.weaponView=null; */
                    res.gameType = 'adventure';
                    PaoYa.navigator.push("GameView", res);
                }
            }, function (msg) {
                var errorDialog = new _AlertDialog2.default({
                    title: "\u6E29\u99A8\u63D0\u793A",
                    message: msg,
                    confirmHandler: function confirmHandler() {
                        _this.close();
                        PaoYa.navigator.popToRootScene();
                        PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).goRefiner();
                    }
                });
                errorDialog.popup();
            });
        }
    }, {
        key: "rejectHandler",
        value: function rejectHandler() {
            var _this5 = this;

            console.log("\u653E\u5F03\u5947\u9047");
            PaoYa.Request.POST("martial_encounter_cancel", {}, function () {
                _this5.close();
                PaoYa.NotificationCenter.postNotification("adventCancel");
                if (PaoYa.navigator.scenes.length > 1) {
                    PaoYa.navigator.popup('/dialog/PassResultDialog', _this5.resultParams);
                }
            });
        }
    }]);

    return AdventDialog;
}(PaoYa.Dialog);

exports.default = AdventDialog;

},{"../../scripts/common/HomeControl":38,"../prefab/WeaponBar":35,"./AlertDialog":15}],12:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdventureDialog5 = function (_PaoYa$Dialog) {
    _inherits(AdventureDialog5, _PaoYa$Dialog);

    function AdventureDialog5() {
        _classCallCheck(this, AdventureDialog5);

        return _possibleConstructorReturn(this, (AdventureDialog5.__proto__ || Object.getPrototypeOf(AdventureDialog5)).call(this));
    }

    _createClass(AdventureDialog5, [{
        key: 'onAwake',
        value: function onAwake() {
            this.autoDestroyAtClosed = true;
            this.isPlaying = false;
            var _this = this;

            var type = this.params.type;
            /*   this.spRole.texture=`remote/guide/${this.params.dress}.png`;
              if(this.params.dress==`npc_3`){
                  this.spRole.y=177
              } */
            var advent = {
                type: 5,
                detail: '\u76F8\u4F20\u771F\u795E\u5E94\u9F99\u66FE\u86F0\u5C45\u5728\u540E\u5C71\uFF0C\u5E76\u5728\u6B64\u7559\u4E0B\u4E86\u8BB8\u591A\u73CD\u5B9D\uFF0C\u4E0D\u5982\u6709\u7A7A\u7684\u65F6\u5019\u53BB\u770B\u770B\uFF0C\u8BF4\u4E0D\u5B9A\u96C6\u9F50\u5929\u65F6\u5730\u5229\u4EBA\u548C\u80FD\u53D1\u73B0\u70B9\u4EC0\u4E48\u5462\uFF1F',
                agreeText: '\u5F00\u59CB\u5BFB\u5B9D',
                rejectText: '\u4EFB\u6027\u79BB\u5F00'
            };

            this.lblDetail.text = advent.detail;
            this.initFont(advent);
            this.on(Laya.Event.CLICK, this, this.clickHandler);
        }
    }, {
        key: 'clickHandler',
        value: function clickHandler(e) {
            if (this.isPlaying) {
                return;
            }
            switch (e.target.name) {
                case 'btnAgree':
                    this.agreeHandler();
                    break;
                case 'btnReject':
                    this.rejectHandler();
                    break;
                case 'closeT':
                    this.hangUp();
                    break;
            }
        }
    }, {
        key: 'hangUp',
        value: function hangUp() {
            this.close();
            if (PaoYa.navigator.scenes.length > 1) {
                PaoYa.navigator.popup('/dialog/PassResultDialog', this.params);
            }
        }
    }, {
        key: 'agreeHandler',
        value: function agreeHandler() {
            var _this3 = this;

            this.isPlaying = true;
            var _this = this;
            console.log('\u8FDB\u5165\u5947\u9047');
            var huntSK = new Laya.Skeleton();

            huntSK.load('spine/hunt/hunt.sk', Laya.Handler.create(this, function (res) {
                _this3.spHunt.visible = false;
                huntSK.playbackRate(1.5);
                huntSK.play('hunt', false);
            }));
            huntSK.pos(0, 0);
            huntSK.on(Laya.Event.STOPPED, this, this.stopHandler);
            this.map.addChild(huntSK);
        }
    }, {
        key: 'rejectHandler',
        value: function rejectHandler() {
            var _this4 = this;

            PaoYa.Request.POST('martial_encounter_cancel', {}, function () {
                _this4.close();
                if (PaoYa.navigator.scenes.length > 1) {
                    PaoYa.navigator.popup('/dialog/PassResultDialog', _this4.params);
                }
                PaoYa.NotificationCenter.postNotification('adventCancel');
            });
        }
    }, {
        key: 'stopHandler',
        value: function stopHandler() {
            var _this5 = this;

            Laya.timer.once(200, this, function () {
                _this5.isPlaying = false;
                PaoYa.Request.POST('martial_encounter_start', {}, function (res) {
                    _this5.params.state = 'wait';
                    _this5.params.time = res.time;
                    PaoYa.navigator.popup('/dialog/AdventResultDialog5', _this5.params);
                });
            });
        }
    }, {
        key: 'initFont',
        value: function initFont(advent) {
            this.detailTxt.font = 'adventure';
            this.lblAgree.text = advent.agreeText;
            this.lblReject.text = advent.rejectText;
            this.lblAgree.font = 'adventure';
            this.lblReject.font = 'adventure';
        }
    }]);

    return AdventureDialog5;
}(PaoYa.Dialog);

exports.default = AdventureDialog5;

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponBar = require("../prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _AlertDialog = require("./AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

var _Global = require("../../scripts/common/tool/Global");

var _Tool = require("../../scripts/common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdventResultDialog = function (_PaoYa$Dialog) {
    _inherits(AdventResultDialog, _PaoYa$Dialog);

    function AdventResultDialog() {
        _classCallCheck(this, AdventResultDialog);

        return _possibleConstructorReturn(this, (AdventResultDialog.__proto__ || Object.getPrototypeOf(AdventResultDialog)).call(this));
    }

    _createClass(AdventResultDialog, [{
        key: "onAwake",
        value: function onAwake() {
            var _this3 = this;

            this.autoDestroyAtClosed = true;
            /*  */
            var params = this.params;
            var result = this.params.result;
            var type = this.params.type;
            if (result == -1) {
                this.spIcon.texture = "remote/pass_result/lose.png";
            }
            if (type == 1) {
                this.dealType1(result);
            } else if (type == 2) {
                this.dealType2(result);
            }
            var weaponBarPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/WeaponBar.json', Laya.Handler.create(_this3, function (json) {
                    if (json instanceof Laya.Prefab) {
                        resolve(json.json);
                    } else {
                        resolve(json);
                    }
                }));
            });
            var rewardPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/RewardBig.json', Laya.Handler.create(_this3, function (json) {
                    resolve(json);
                }));
            });
            Promise.all([weaponBarPromise, rewardPromise]).then(function (jsons) {
                _this3.showReward(jsons);
            });

            this.on(Laya.Event.CLICK, this, this.clickHandler);
        }
    }, {
        key: "clickHandler",
        value: function clickHandler(e) {
            var name = e.target.name;
            switch (name) {
                case "btnSure":
                    this.sureHandler();
                    break;
                case "btnReject":
                    this.rejectHandler();
                    break;
                case "btnShare":
                    this.shareHandler();
                    break;
                case "btnVideo":
                    this.videoHandler();
                    break;
                case "btnBack":
                    this.close();
                    PaoYa.navigator.popToRootScene();
                    break;
            }
        }
    }, {
        key: "sureHandler",
        value: function sureHandler() {
            var _this4 = this;

            console.log("\u786E\u8BA4....");
            PaoYa.Request.POST('martial_encounter_finish', {
                result: this.params.result,
                complete: 1
            }, function (res) {
                PaoYa.NotificationCenter.postNotification("adventComplate");
                _this4.close();
                PaoYa.navigator.popToRootScene();
            });
        }
    }, {
        key: "rejectHandler",
        value: function rejectHandler() {
            var _this5 = this;

            console.log("\u8D70\u4EBA\u6492");
            PaoYa.Request.POST('martial_encounter_finish', {
                result: this.params.result,
                complete: 1
            }, function (res) {
                _this5.close();
                PaoYa.navigator.popToRootScene();
                PaoYa.NotificationCenter.postNotification("adventComplate");
            });
        }
    }, {
        key: "shareHandler",
        value: function shareHandler() {
            console.log("\u5206\u4EAB\u590D\u6D3B");
            var _this = this;
            var random = Math.round(Math.random() * (PaoYa.DataCenter.config.game.share_list.length - 1));
            var title = PaoYa.DataCenter.config.game.share_list[random];
            PaoYa.ShareManager.imageURL = PaoYa.DataCenter.CDNURL + PaoYa.DataCenter.config.game.share_img[random];
            if (window['wx']) {
                PaoYa.ShareManager.shareTitle(title, {}, function () {
                    _Global.Global.dataPoints('奇遇a1失败复活');
                    _this.close();
                    _GameControl2.default.instance.revive(); //复活
                });
            } else {
                _this.close();
                _GameControl2.default.instance.revive(); //复活
            }
        }
    }, {
        key: "videoHandler",
        value: function videoHandler() {
            _Global.Global.dataPoints('奇遇a激励广告');
            var _this = this;
            var params = {
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        _this.close();
                        _GameControl2.default.instance.revive(); //复活
                    } else {
                        var errorDialog = new _AlertDialog2.default({
                            title: "\u6E29\u99A8\u63D0\u793A",
                            message: '看完广告才可复活哦~'
                        });
                        errorDialog.popup();
                    }
                },
                onError: function onError(res) {
                    /*   var errorDialog = new AlertDialog({
                          title: "温馨提示",
                          message: res.message
                      });
                      errorDialog.popup(); */
                    _Tool2.default.noADshare(function () {
                        _this.close();
                        _GameControl2.default.instance.revive(); //复活
                    });
                }
            };
            PaoYa.RewardedVideoAd.show(params, true);
        }
    }, {
        key: "dealType1",
        value: function dealType1(result) {
            if (result == 1) {
                this.boxWin.visible = true;
                this.img.skin = "remote/adventure/winText1.png";
                this.btnSure.getChildByName("lbl").font = "adventure";
                this.btnSure.getChildByName("lbl").text = "\u4E3E\u624B\u4E4B\u52B3\uFF0C\u4E0D\u8DB3\u6302\u9F7F";
            } else {
                this.boxWeapons.visible = false;
                this.boxLose1.visible = true;
                this.img.skin = "remote/adventure/loseText1.png";
                this.btnShare.getChildByName("lbl").font = "adventure";
                this.boxLose1.getChildByName("btnReject").getChildByName("lbl").font = "adventure";
            }
        }
    }, {
        key: "dealType2",
        value: function dealType2(result) {
            if (result == 1) {
                this.boxWin.visible = true;
                this.img.skin = "remote/adventure/winText2.png";
                this.btnSure.getChildByName("lbl").font = "adventure";
                this.btnSure.getChildByName("lbl").text = "\u6B23\u7136\u6536\u4E0B\u8D4F\u91D1";
            } else {
                this.boxLose2.visible = true;
                this.img.skin = "remote/adventure/loseText2.png";
                this.btnVideo.getChildByName("lbl").font = "adventure";
                this.btnReject.getChildByName("lbl").font = "adventure";
                this.btnReject.getChildByName("lbl").scale(0.86, 0.86);
            }
        }
    }, {
        key: "showReward",
        value: function showReward(jsons) {
            /*  if(!this.params.weaponList){return;}
             let weaponList = this.params.weaponList;
             let len = weaponList.length;
             if (len) {
                 let weaponBarsArr = this.boxWeapons._children;
                 for (let i = 0; i < len; i++) {
                     weaponBarsArr[i].visible = true;
                     let weaponBarsComp = weaponBarsArr[i].getComponent(WeaponBar);
                     weaponBarsComp.params = weaponList[i];
                     weaponBarsComp.initView();
                     weaponBarsArr[i].off(Laya.Event.CLICK, weaponBarsComp)
                 }
             } */
            if (this.params.weaponList) {
                var weaponList = this.params.weaponList;
                var len = weaponList.length;
                for (var i = 0; i < len; i++) {
                    var weaponView = new Laya.Prefab();
                    weaponView.json = jsons[0];
                    this.weaponView = weaponView;
                    var view = Laya.Pool.getItemByCreateFun('WeaponView', weaponView.create, weaponView);
                    var weaponBarsComp = view.getComponent(_WeaponBar2.default);
                    weaponBarsComp.params = weaponList[i];
                    view.off(Laya.Event.CLICK, weaponBarsComp);
                    view.onThrottleClick = function () {};
                    this.boxWeapons.addChild(view);
                }
            }

            if (this.params.diamond) {
                var diamondView = this.createRewardBox(jsons[1]);
                console.log(diamondView.getChildByName("lblNum").text);
                diamondView.getChildByName("lblNum").scale(0.6, 0.6);
                diamondView.getChildByName("lblNum").text = "\xD7 " + this.params.diamond;
                diamondView.getChildByName("lblNum").font = "weaponNFontT";
                this.boxWeapons.addChild(diamondView);
            }
            if (this.params.gold) {
                var goldView = this.createRewardBox(jsons[1]);
                goldView.getChildByName('lblNum').scale(0.6, 0.6);
                goldView.getChildByName('lblNum').text = "\xD7 " + this.params.gold;
                goldView.getChildByName('lblNum').font = "weaponNFontT";
                goldView.getChildByName("spReward").texture = "local/common/icon.png";
                this.boxWeapons.addChild(goldView);
            }
        }
    }, {
        key: "createRewardBox",
        value: function createRewardBox(json) {
            var rewardView = new Laya.Prefab();
            rewardView.json = json;
            var view = Laya.Pool.getItemByCreateFun("RewardViewBig", rewardView.create, rewardView);
            return view;
        }
    }]);

    return AdventResultDialog;
}(PaoYa.Dialog);

exports.default = AdventResultDialog;

},{"../../scripts/common/tool/Global":55,"../../scripts/common/tool/Tool":56,"../GameControl":4,"../prefab/WeaponBar":35,"./AlertDialog":15}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _AlertDialog = require("./AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

var _Global = require("../../scripts/common/tool/Global");

var _Tool = require("../../scripts/common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AdventResultDialog5 = function (_PaoYa$Dialog) {
    _inherits(AdventResultDialog5, _PaoYa$Dialog);

    function AdventResultDialog5() {
        _classCallCheck(this, AdventResultDialog5);

        return _possibleConstructorReturn(this, (AdventResultDialog5.__proto__ || Object.getPrototypeOf(AdventResultDialog5)).call(this));
    }

    _createClass(AdventResultDialog5, [{
        key: "onAwake",
        value: function onAwake() {
            //Laya.Scene.unDestroyedScenes 可以查看未销毁场景
            this.autoDestroyAtClosed = true;
            var state = this.params.state;
            var time = this.params.time;
            if (state == "wait") {
                this.boxWait.visible = true;
                this.lbl1.font = "adventure";
                this.lbl2.font = "adventure";
                this.lbl3.font = "adventure";
                this.startCount(time);
            } else if (state == "get") {
                this.boxGet.visible = true;
                this.showGetState();
                this.lbl3.font = "adventure";
            }

            this.on(Laya.Event.CLICK, this, this.clickHandler);
        }
    }, {
        key: "clickHandler",
        value: function clickHandler(e) {
            switch (e.target.name) {
                case "btnSure":
                    this.sureHandler();
                    break;
                case "btnVideo":
                    this.videoHandler();
                    break;
                case "btnGet":

                    this.getHandler();
                    break;
            }
        }
    }, {
        key: "sureHandler",
        value: function sureHandler() {
            //分情况，在游戏结果促发后展示结果界面
            this.timerService && this.timerService.stop();
            this.close();
            if (PaoYa.navigator.scenes.length > 1) {
                PaoYa.navigator.popup('/dialog/PassResultDialog', this.params);
            }
        }
    }, {
        key: "getHandler",
        value: function getHandler() {
            var _this3 = this;

            this.timerService && this.timerService.stop();
            PaoYa.Request.POST("martial_encounter_finish", {
                result: 1,
                complete: 1
            }, function () {
                PaoYa.Request.POST("martial_encounter_finish", {
                    result: 1,
                    complete: 1
                }, function () {
                    PaoYa.NotificationCenter.postNotification("adventComplete");
                    _this3.close();
                    if (PaoYa.navigator.scenes.length > 1) {
                        PaoYa.navigator.popup('/dialog/PassResultDialog', _this3.params);
                    }
                });

                console.log("\u5947\u90475\u5B8C\u6210");
            });
        }
    }, {
        key: "videoHandler",
        value: function videoHandler() {
            var _this = this;
            if (!window['wx']) {
                this.showGetState();
                return;
            }
            _Global.Global.dataPoints('奇遇d激励广告');
            //看视频
            var params = {
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        console.log("\u770B\u5B8C\u5E7F\u544A");
                        _this.showGetState();
                    } else {
                        var errorDialog = new _AlertDialog2.default({
                            title: "\u6E29\u99A8\u63D0\u793A",
                            message: '看完广告才可拥有哦~'
                        });
                        errorDialog.popup();
                    }
                },
                onError: function onError(res) {
                    /*     var errorDialog = new AlertDialog({
                            title: "温馨提示",
                            message: res.message
                        });
                        errorDialog.popup(); */
                    _Tool2.default.noADshare(function () {
                        console.log("\u6CA1\u5E7F\u544A,\u5206\u4EAB\u6210\u529F");
                        _this.showGetState();
                    });
                }
            };
            PaoYa.RewardedVideoAd.show(params, true);
        }
    }, {
        key: "startCount",
        value: function startCount(time) {
            var _this4 = this;

            var timeStamp = (time * 1000 - new Date().valueOf()) / 1000;
            console.log(timeStamp);
            var timerService = new PaoYa.TimerService(timeStamp, 1, false);
            timerService.on(PaoYa.TimerService.PROGRESS, this, function (time) {

                _this4.lblTime.text = time.formatTime('M:S') + "";
            });
            timerService.on(PaoYa.TimerService.STOP, this, function () {});
            timerService.start();
            this.timerService = timerService;
        }
    }, {
        key: "showGetState",
        value: function showGetState() {
            var _this5 = this;

            var _this = this;
            this.boxWait.visible = false;
            this.boxGet.visible = true;
            var rewardPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/RewardBig.json', Laya.Handler.create(_this5, function (json) {
                    resolve(json);
                }));
            });
            rewardPromise.then(function (json) {
                _this.initReward(json);
            });
        }
    }, {
        key: "initReward",
        value: function initReward(json) {
            if (this.params.diamond) {
                var diamondView = this.createRewardBox(json);
                diamondView.getChildByName('lblNum').scale(0.6, 0.6);
                diamondView.getChildByName("lblNum").text = "\xD7 " + this.params.diamond;
                diamondView.getChildByName("lblNum").font = "weaponNFontT";
                diamondView.getChildByName("spBg").scale(1, 1);
                this.hboxReward.addChild(diamondView);
            }
            if (this.params.gold) {
                var goldView = this.createRewardBox(json);
                goldView.getChildByName('lblNum').scale(0.6, 0.6);
                goldView.getChildByName('lblNum').text = "\xD7 " + this.params.gold;
                goldView.getChildByName('lblNum').font = "weaponNFontT";
                goldView.getChildByName("spBg").scale(1, 1);
                goldView.getChildByName("spReward").texture = "local/common/icon.png";
                this.hboxReward.addChild(goldView);
            }
        }
    }, {
        key: "createRewardBox",
        value: function createRewardBox(json) {
            var rewardView = new Laya.Prefab();
            rewardView.json = json;
            var view = Laya.Pool.getItemByCreateFun("RewardViewBig", rewardView.create, rewardView);
            return view;
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.timerService && this.timerService.stop();
            this.timerService = null;
        }
    }]);

    return AdventResultDialog5;
}(PaoYa.Dialog);

exports.default = AdventResultDialog5;

},{"../../scripts/common/tool/Global":55,"../../scripts/common/tool/Tool":56,"./AlertDialog":15}],15:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AlertDialog = function (_PaoYa$Dialog) {
    _inherits(AlertDialog, _PaoYa$Dialog);

    function AlertDialog(params) {
        _classCallCheck(this, AlertDialog);

        var _this = _possibleConstructorReturn(this, (AlertDialog.__proto__ || Object.getPrototypeOf(AlertDialog)).call(this));

        _this.autoDestroyAtClosed = true;
        params.confirmText = params.confirmText || '知道了';
        _this.params = params;
        _this.addSubviews();
        return _this;
    }

    _createClass(AlertDialog, [{
        key: 'addSubviews',
        value: function addSubviews() {
            var imgBg = new Laya.Image('local/common/bg2.png');
            imgBg.sizeGrid = '150,130,100,120';
            imgBg.size(500, 400);
            this.addChild(imgBg);

            var lblTitle = new Laya.Label(this.params.title || '');
            lblTitle.fontSize = 40;
            lblTitle.color = '#ffffff';
            lblTitle.bold = true;
            lblTitle.centerX = 0;
            lblTitle.y = 30;
            this.addChild(lblTitle);

            var lblMsg = new Laya.Label(this.params.message || '');
            lblMsg.fontSize = 28;
            lblMsg.leading = 15;
            lblMsg.color = '#4d4d4d';
            lblMsg.wordWrap = true;
            lblMsg.align = 'center';
            lblMsg.pos(40, 150);
            lblMsg.size(420, 30);
            this.addChild(lblMsg);

            this.size = imgBg.size;

            var hBox = new Laya.HBox();
            hBox.centerX = 0;
            hBox.y = 300;
            hBox.space = 15;
            this.addChild(hBox);

            if (this.params.cancelText) {
                hBox.addChild(this._makeButton(this.params.cancelText, Laya.Dialog.NO));
            }
            hBox.addChild(this._makeButton(this.params.confirmText, Laya.Dialog.YES));
        }
    }, {
        key: '_makeButton',
        value: function _makeButton(label, name) {
            var btn = new Laya.Button('local/common/btn_1.png');
            btn.size(200, 64);
            btn.name = name;
            btn.stateNum = 1;

            var labelF = new Laya.Label();
            labelF.font = 'weaponDFont';
            labelF.centerX = 0;
            labelF.centerY = 0;
            labelF.scale(0.7, 0.7);
            labelF.text = label;
            btn.addChild(labelF);
            return btn;
        }
    }, {
        key: 'onClosed',
        value: function onClosed(type) {
            if (type == Laya.Dialog.YES) {
                this.params.confirmHandler && this.params.confirmHandler();
            } else if (type == Laya.Dialog.NO) {
                this.params.cancelHandler && this.params.cancelHandler();
            }
        }
    }]);

    return AlertDialog;
}(PaoYa.Dialog);

exports.default = AlertDialog;

},{}],16:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _SoundManager = require("../SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _HeroConfig = require("../config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _Cross = require("../prefab/Cross");

var _Cross2 = _interopRequireDefault(_Cross);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BattleResultDialog = function (_PaoYa$Dialog) {
    _inherits(BattleResultDialog, _PaoYa$Dialog);

    function BattleResultDialog() {
        _classCallCheck(this, BattleResultDialog);

        return _possibleConstructorReturn(this, (BattleResultDialog.__proto__ || Object.getPrototypeOf(BattleResultDialog)).call(this));
    }

    _createClass(BattleResultDialog, [{
        key: "onAwake",
        value: function onAwake() {
            console.log(this.params);
            this.autoDestroyAtClosed = true;
            var result = this.params.result;
            this.result = result;
            if (result == -1) {
                this.spPanel.texture = "remote/pass_result/imgLose.png";
                this.spIcon.texture = "remote/pass_result/lose.png";
            } else {
                this.spPanel.texture = "remote/pass_result/imgWin.png";
            }
            this.lblPrize.text = this.params.diamond;
            this.spBtn.on(Laya.Event.CLICK, this, this.matchHandler);
            this.btnBack.on(Laya.Event.CLICK, this, this.backHandler);
            this.btnHeroHouse.on(Laya.Event.CLICK, this, this.goHeroHouse);
            this.fillInfo(this.params); //补全双方信息
            PaoYa.DataCenter.user.ladderName = _HeroConfig2.default.ladderArr[this.params.ladder];
            this.addBanners();
        }
    }, {
        key: "addBanners",
        value: function addBanners() {
            var _this2 = this;

            var crossPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/Cross.json', Laya.Handler.create(_this2, function (json) {
                    // console.log(json);
                    if (json instanceof Laya.Prefab) {
                        resolve(json.json);
                    } else {
                        resolve(json);
                    }
                }));
            });
            crossPromise.then(function (json) {
                _this2.initCrossIcon(json);
            });
        }
    }, {
        key: "initCrossIcon",
        value: function initCrossIcon(json) {
            var posArr = [{ x: 0 + 120, y: 241 }, { x: 0 + 120, y: 541 }, { x: 1334 - 120, y: 241 }, { x: 1334 - 120, y: 541 }];
            var crossInfo = PaoYa.Utils.selectRandom(_HeroConfig2.default.crossIcons, 4);
            for (var i = 0; i < 4; i++) {
                var crossView = new Laya.Prefab();
                crossView.json = json;
                this.crossView = crossView;
                var view = Laya.Pool.getItemByCreateFun('CrossView', crossView.create, crossView);
                var crossViewComp = view.getComponent(_Cross2.default);
                crossViewComp.params = crossInfo[i];
                crossViewComp.params.ani = true;
                view.pos(posArr[i].x, posArr[i].y);
                this.addChild(view);
            }
        }
    }, {
        key: "fillInfo",
        value: function fillInfo(params) {
            this.selfName.text = params.nickName;
            this.otherName.text = params.robotNickName;
            this.selfAvstar.texture = "local/common/hero_" + params.roleId + ".png";
            this.otherAvstar.texture = "local/common/hero_" + params.robotRoleId + ".png";
        }
        //

    }, {
        key: "goHeroHouse",
        value: function goHeroHouse() {
            console.log("进入英雄库");
            this.close();
            PaoYa.navigator.popToRootScene();
            PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).goHerosHouse();
        }
        //重新匹配

    }, {
        key: "matchHandler",
        value: function matchHandler() {
            console.log('重新匹配');
            _SoundManager2.default.ins.btn();
            this.close();
            PaoYa.navigator.popToScene("Grading");
            PaoYa.Request.POST("hero_match_game_start", {
                roleId: this.params.roleId
            }, function (res) {
                res.gameType = "battle";
                PaoYa.navigator.push('MatchView', res);
            });
        }
    }, {
        key: "backHandler",
        value: function backHandler() {
            _SoundManager2.default.ins.btn();
            this.close();
            PaoYa.navigator.popToRootScene();
        }
    }]);

    return BattleResultDialog;
}(PaoYa.Dialog);

exports.default = BattleResultDialog;

},{"../../scripts/common/HomeControl":38,"../SoundManager":8,"../config/HeroConfig":10,"../prefab/Cross":24}],17:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponBar = require("../prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _SoundManager = require("../SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _AlertDialog = require("./AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _Cross = require("../prefab/Cross");

var _Cross2 = _interopRequireDefault(_Cross);

var _HeroConfig = require("../config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PassResultDialog = function (_PaoYa$Dialog) {
    _inherits(PassResultDialog, _PaoYa$Dialog);

    function PassResultDialog() {
        _classCallCheck(this, PassResultDialog);

        return _possibleConstructorReturn(this, (PassResultDialog.__proto__ || Object.getPrototypeOf(PassResultDialog)).call(this));
    }

    _createClass(PassResultDialog, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            var result = this.params.result;
            this.result = result;
            if (result == -1) {
                /*    this.spIcon.texture="remote/pass_result/lose.png";
                   this.spBtn.texture="remote/pass_result/btnAgain.png";
                this.boxPrize.y=460; */
                this.btnHome.on(Laya.Event.CLICK, this, this.goHome);
                this.showBannerAd({
                    style: {
                        align: 'left',
                        width: 270
                    }
                });
                var crossPromise = new Promise(function (resolve, reject) {
                    Laya.loader.create('gamescenes/prefab/Cross.json', Laya.Handler.create(_this2, function (json) {
                        // console.log(json);
                        if (json instanceof Laya.Prefab) {
                            resolve(json.json);
                        } else {
                            resolve(json);
                        }
                    }));
                });
                crossPromise.then(function (json) {
                    _this2.initCrossIcon(json);
                });
            } else {
                this.spIcon.texture = "remote/pass_result/win.png";
                this.spBtn.texture = "remote/pass_result/btnNext.png";
                this.boxWeapons.visible = true;
                this.spPanel.texture = "remote/pass_result/winPanel.png";
                this.boxPrize.y = 379;
                var weaponBarsArr = this.boxWeapons._children;
                var weaponList = this.params.weaponList;
                var len = weaponList.length;
                for (var i = 0; i < len; i++) {
                    weaponBarsArr[i].visible = true;
                    var weaponBarsComp = weaponBarsArr[i].getComponent(_WeaponBar2.default);
                    weaponBarsComp.params = weaponList[i];
                    weaponBarsComp.initView();
                    weaponBarsArr[i].off(Laya.Event.CLICK, weaponBarsComp);
                }
                this.addBanners();
            }
            this.lblPrize.text = this.params.gold;
            this.spBtn.on(Laya.Event.CLICK, this, this.clickHandler);
            /*  this.btnBack.on(Laya.Event.CLICK,this,this.backHandler); */
            var warnDialog = void 0;
            if (this.params.refinerNew == 1) {
                warnDialog = new _AlertDialog2.default({
                    message: '提高武器属性，去炼器室试试',
                    confirmText: '前往',
                    confirmHandler: function confirmHandler() {
                        _this2.close();
                        PaoYa.navigator.popToRootScene();
                        PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).guideF('btn3');
                    }
                });
                warnDialog.popup();
            } else if (this.params.roleNew == 1) {
                warnDialog = new _AlertDialog2.default({
                    message: '胜不骄败不馁，尝试升级英雄！',
                    confirmText: '前往',
                    confirmHandler: function confirmHandler() {
                        _this2.close();
                        PaoYa.navigator.popToRootScene();
                        PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).guideF('btn1');
                    }
                });
                warnDialog.popup();
            } else if (this.params.weaponNew == 1) {
                warnDialog = new _AlertDialog2.default({
                    message: '想要神兵相助，去兵器库逛逛！',
                    confirmText: '前往',
                    confirmHandler: function confirmHandler() {
                        _this2.close();
                        PaoYa.navigator.popToRootScene();
                        PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).guideF('btn2');
                    }
                });
                warnDialog.popup();
            } /* else {
                if (this.params.stageId >= 4) {
                    this.showAD(); 
                }
              } */
        }
    }, {
        key: "addBanners",
        value: function addBanners() {
            var _this3 = this;

            var crossPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/Cross.json', Laya.Handler.create(_this3, function (json) {
                    // console.log(json);
                    if (json instanceof Laya.Prefab) {
                        resolve(json.json);
                    } else {
                        resolve(json);
                    }
                }));
            });
            crossPromise.then(function (json) {
                _this3.initWinCrossIcon(json);
            });
        }
    }, {
        key: "initWinCrossIcon",
        value: function initWinCrossIcon(json) {
            var posArr = [{ x: 0 + 120, y: 241 }, { x: 0 + 120, y: 541 }, { x: 1334 - 120, y: 241 }, { x: 1334 - 120, y: 541 }];
            var crossInfo = PaoYa.Utils.selectRandom(_HeroConfig2.default.crossIcons, 4);
            for (var i = 0; i < 4; i++) {
                var crossView = new Laya.Prefab();
                crossView.json = json;
                this.crossView = crossView;
                var view = Laya.Pool.getItemByCreateFun('CrossView', crossView.create, crossView);
                var crossViewComp = view.getComponent(_Cross2.default);
                crossViewComp.params = crossInfo[i];
                crossViewComp.params.ani = true;
                view.pos(posArr[i].x, posArr[i].y);
                this.addChild(view);
            }
        }
    }, {
        key: "initCrossIcon",
        value: function initCrossIcon(json) {
            var crossInfo = PaoYa.Utils.selectRandom(_HeroConfig2.default.crossIcons, 6);
            for (var i = 0; i < 2; i++) {
                for (var j = 0; j < 3; j++) {
                    var crossView = new Laya.Prefab();
                    crossView.json = json;
                    this.crossView = crossView;
                    var view = Laya.Pool.getItemByCreateFun('CrossView', crossView.create, crossView);
                    var crossViewComp = view.getComponent(_Cross2.default);
                    crossViewComp.params = crossInfo[i * 3 + j];
                    crossViewComp.params.isScale = true;
                    view.pos(j * 170 + 22, i * 280 + 10);
                    this.gameBoxs.addChild(view);
                }
            }
        }
    }, {
        key: "goHome",
        value: function goHome() {
            this.close();
            PaoYa.navigator.popToRootScene();
        }
    }, {
        key: "showAD",
        value: function showAD() {
            var params = {
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        console.log("\u770B\u5B8C\u5E7F\u544A");
                    } else {
                        var errorDialog = new _AlertDialog2.default({
                            title: "\u6E29\u99A8\u63D0\u793A",
                            message: '看完广告才可拥有哦~'
                        });
                        errorDialog.popup();
                    }
                },
                onError: function onError(res) {
                    /*  var errorDialog = new AlertDialog({
                         title: "温馨提示",
                         message: `广告拉取失败`
                     });
                     errorDialog.popup(); */
                    console.warn("------\u62C9\u53D6\u5E7F\u544A\u5931\u8D25------");
                }
            };
            PaoYa.InterstitialAd.show(params);
        }
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            var _this4 = this;

            _SoundManager2.default.ins.btn();
            if (this.result == -1) {
                //console.log("再试一次")

                this.close();
                _GameControl2.default.instance.restart();
                _GameControl2.default.instance.fillPlayerInfo();
                //测试复活 ok
                //  GameControl.instance.revive()
            } else {
                console.log("继续闯关");
                PaoYa.Request.POST("hero_game_start", {
                    stageId: 1
                }, function (res) {
                    // 绘制遮罩区，含透明度，
                    var maskArea = new Laya.Sprite();
                    maskArea.alpha = 0.5;
                    maskArea.graphics.drawRect(0, 0, Laya.Browser.width, Laya.Browser.height, "#000000");
                    // maskArea.pos(-150,0);
                    maskArea.mouseEnabled = true;
                    maskArea.zOrder = 2000;
                    Laya.stage.addChild(maskArea);
                    var tween = new Laya.Tween();
                    tween.to(maskArea, {
                        alpha: 1
                    }, 600, null, Laya.Handler.create(_this4, function () {
                        res.gameType = "pass";
                        PaoYa.navigator.replace("GameView", res);
                        _this4.close();
                        tween.clear();
                        Laya.stage.removeChild(maskArea);
                    }));
                }, function (msg, code) {
                    var errorDialog = void 0;
                    if (code == 3018) {
                        errorDialog = new _AlertDialog2.default({
                            title: "",
                            message: msg
                        });
                    } else {
                        errorDialog = new _AlertDialog2.default({
                            title: "",
                            message: msg,
                            confirmText: '前往',
                            confirmHandler: function confirmHandler() {
                                _this4.close();
                                PaoYa.navigator.popToRootScene();
                                PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).goRefiner();
                            }
                        });
                    }
                    errorDialog.popup();
                });
            }
        }
    }, {
        key: "backHandler",
        value: function backHandler() {
            _SoundManager2.default.ins.btn();
            this.close();
            PaoYa.navigator.popToRootScene();
        }
    }]);

    return PassResultDialog;
}(PaoYa.Dialog);

exports.default = PassResultDialog;

},{"../../scripts/common/HomeControl":38,"../GameControl":4,"../SoundManager":8,"../config/HeroConfig":10,"../prefab/Cross":24,"../prefab/WeaponBar":35,"./AlertDialog":15}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _AlertDialog = require("./AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PassResultDialogLoseOne = function (_PaoYa$Dialog) {
    _inherits(PassResultDialogLoseOne, _PaoYa$Dialog);

    function PassResultDialogLoseOne() {
        _classCallCheck(this, PassResultDialogLoseOne);

        return _possibleConstructorReturn(this, (PassResultDialogLoseOne.__proto__ || Object.getPrototypeOf(PassResultDialogLoseOne)).call(this));
    }

    _createClass(PassResultDialogLoseOne, [{
        key: "onAwake",
        value: function onAwake() {
            this.showBannerAd({
                style: {
                    align: 'middle',
                    width: 300
                }
            });
            this.btnAvenge.on(Laya.Event.CLICK, this, this.avenge);
            this.btnGiveUp.on(Laya.Event.CLICK, this, this.giveUp);
        }
    }, {
        key: "avenge",
        value: function avenge() {
            var _this = this;
            var params = {
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        _this.close();
                        _GameControl2.default.instance.revive();
                    } else {
                        var errorDialog = new _AlertDialog2.default({
                            title: "\u6E29\u99A8\u63D0\u793A",
                            message: '看完广告才可复活哦~'
                        });
                        errorDialog.popup();
                    }
                },
                onError: function onError(res) {
                    /*  var errorDialog = new AlertDialog({
                         title: "温馨提示",
                         message: `广告拉取失败`
                     });
                     errorDialog.popup(); */
                    console.warn("------\u62C9\u53D6\u5E7F\u544A\u5931\u8D25------");
                }
            };
            PaoYa.RewardedVideoAd.show(params);
        }
    }, {
        key: "giveUp",
        value: function giveUp() {
            this.close();
            PaoYa.navigator.popup('/dialog/PassResultDialogLose2', this.params);
        }
    }]);

    return PassResultDialogLoseOne;
}(PaoYa.Dialog);

exports.default = PassResultDialogLoseOne;

},{"../GameControl":4,"./AlertDialog":15}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _GameControl2 = require("../GameControl");

var _GameControl3 = _interopRequireDefault(_GameControl2);

var _SpeakMan = require("./SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _WeaponManager = require("../WeaponManager");

var _WeaponManager2 = _interopRequireDefault(_WeaponManager);

var _Global = require("../../scripts/common/tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var guideSteps = [{ x: 100, y: 617, w: 150, h: 110, tip: "res/guide/help6.png", fingerX: 200, fingerY: 250 }, { x: 883, y: 620, radius: 100, tip: "res/guide/help4.png", tipx: 730, tipy: 380 }, { x: 1128, y: 583, radius: 110, tip: "res/guide/help3.png", tipx: 900, tipy: 300 }],
    guideContainer = void 0,
    maskArea = void 0,
    interactionArea = void 0,
    hitArea = void 0,
    selfSpeakMan = void 0,
    otherSpeakMan = void 0,
    selfSpeakManComp = void 0,
    otherSpeakManComp = void 0,
    nextLabel = void 0,
    guideStep = 0;

var GameGuideControl = function (_GameControl) {
    _inherits(GameGuideControl, _GameControl);

    /** @prop {name:weapon,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:weaponBar,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:player,tips:"人物预制体对象",type:Prefab} */
    /** @prop {name:weaponSkill,tips:"兵器技能名称预制体对象",type:Prefab} */
    /** @prop {name:selfHP,tips:'自己的血条',type:Node}*/
    /** @prop {name:selfMP,tips:'自己的体力',type:Node}*/
    /** @prop {name:otherHP,tips:'对方的血条',type:Node}*/
    /** @prop {name:otherMP,tips:'对方的体力',type:Node}*/
    /** @prop {name:playerState,tips:'人物状态',type:Node}*/
    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/
    /** @prop {name:selfSpeakMan,tips:"我方解说预制体对象",type:Prefab}*/
    /** @prop {name:otherSpeakMan,tips:"对方解说预制体对象",type:Prefab}*/
    /** @prop {name:spriteBg,tips:"游戏底图",type:node}*/
    /** @prop {name:aniFinger,tips:"手指动画",type:node}*/
    function GameGuideControl() {
        _classCallCheck(this, GameGuideControl);

        var _this = _possibleConstructorReturn(this, (GameGuideControl.__proto__ || Object.getPrototypeOf(GameGuideControl)).call(this));

        _this.closeRobot = true;
        _this.gameState = 'start';
        return _this;
    }
    /*    onAwake(){
          super();
      }  */


    _createClass(GameGuideControl, [{
        key: "onClick",
        value: function onClick(e) {
            switch (e.target.name) {
                case 'next':
                    e.stopPropagation();
                    console.log('跳过');
                    break;
                case 'mask':
                    console.log('全局');
                    break;
            }
        }
    }, {
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            _get(GameGuideControl.prototype.__proto__ || Object.getPrototypeOf(GameGuideControl.prototype), "onAwake", this).call(this);
            this.aniFinger.zOrder = 1200;
            this.owner.on(Laya.Event.CLICK, this, function (e) {
                if (_this2.noCount) {
                    return;
                }
                guideStep += 1;
                switch (guideStep) {
                    case 1:
                    case 2:
                    case 3:
                    case 5:
                    /*   case 6: */
                    case 7:
                    case 8:
                    case 9:
                    case 11:
                    case 12:
                        _this2['step' + guideStep]();
                        break;
                }
            });
        }
    }, {
        key: "arrowAni",
        value: function arrowAni() {
            this.target.visible = true;
            this.timeLine.play(0, true);
        }
    }, {
        key: "stopArrowAni",
        value: function stopArrowAni() {
            this.timeLine.pause();
        }
    }, {
        key: "resumeArrowAni",
        value: function resumeArrowAni() {
            this.target.visible = true;
            this.timeLine.resume();
        }
    }, {
        key: "step1",
        value: function step1() {
            selfSpeakMan.visible = false;
            otherSpeakMan.visible = true;
            otherSpeakManComp.showWord('小哥哥谦虚了，出招吧。');
        }
    }, {
        key: "step2",
        value: function step2() {
            selfSpeakMan.visible = true;
            otherSpeakMan.visible = false;
            selfSpeakManComp.showWord('那我就不客气了！');
        }
    }, {
        key: "step3",
        value: function step3() {
            selfSpeakMan.visible = false;
            nextLabel.visible = false;
            interactionArea.graphics.clear();
            interactionArea.graphics.drawRect(100, 617, 110, 110, '#000');
            this.noCount = true;
            hitArea.unHit.clear();
            hitArea.unHit.drawRect(100, 617, 110, 110, '#000');
            this.aniFinger.visible = true;
            this.aniFinger.pos(150, 667);
            this.aniFinger.play(0, true);
        }
    }, {
        key: "step4",
        value: function step4() {
            _Global.Global.dataPoints('点击第一格兵器');
            this.noCount = false;
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            maskArea.visible = false;
            Laya.MouseManager.enabled = false;
            interactionArea.graphics.clear();
        }
    }, {
        key: "step5",
        value: function step5() {
            var _this3 = this;

            this.noCount = true;
            nextLabel.visible = false;
            maskArea.visible = false;
            otherSpeakMan.visible = false;
            this.weaponManager = new _WeaponManager2.default(this.robotWeaponList);
            this.sWeapon = this.weaponManager.seletedWeapon(0);
            this.sWeapon.isSelf = false;

            this.weaponBarClickHandler(this.sWeapon);
            Laya.timer.once(1200, this, function () {
                _this3.setPause();
                /*  Laya.timer.scale=0; */
                _this3.aniFinger.visible = true;
                _this3.aniFinger.pos(310, 672);
                _this3.aniFinger.play(0, true);
                maskArea.visible = true;
                Laya.MouseManager.enabled = true;
                //  nextLabel.visible=true;
                interactionArea.graphics.clear();
                interactionArea.graphics.drawRect(260, 617, 110, 110, '#000');
                _this3.noCount = true;
                hitArea.unHit.clear();
                hitArea.unHit.drawRect(260, 617, 110, 110, '#000');
            });
        }

        //遮罩消失后,全局不能点击

    }, {
        key: "step6",
        value: function step6() {
            var _this4 = this;

            _Global.Global.dataPoints('点击第二格兵器');
            this.noCount = false;
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            maskArea.visible = false;
            Laya.MouseManager.enabled = false;
            nextLabel.visible = false;
            this.setResume();
            /*  Laya.timer.scale=1;  */
            interactionArea.graphics.clear();
            //这个定时器不靠谱
            Laya.timer.once(550, this, function () {
                _this4.setPause();
                Laya.MouseManager.enabled = true;
                maskArea.visible = true;
                nextLabel.visible = true;
                _this4.addTips();
            });
        }
    }, {
        key: "step7",
        value: function step7() {
            var _this5 = this;

            this.target.visible = false;
            this.imgTip.visible = false;
            this.imgTip.skin = "remote/guide/8.png";
            this.imgTip.y = 300;
            Laya.timer.once(200, this, function () {
                _this5.imgTip.visible = true;
                _this5.resumeArrowAni();
            });
        }
    }, {
        key: "step8",
        value: function step8() {
            this.target.visible = false;
            this.imgTip.visible = false;
            this.stopArrowAni();
            maskArea.visible = false;
            Laya.MouseManager.enabled = false;
            nextLabel.visible = false;
            this.setResume();
            Laya.timer.scale = 1;
            Laya.timer.once(100, this, function () {
                maskArea.visible = true;
                Laya.MouseManager.enabled = true;
                nextLabel.visible = true;
                otherSpeakMan.visible = true;
                otherSpeakManComp.showWord('没想到你的武功那么厉害，看来我要动真格了。');
            });
        }
    }, {
        key: "step9",
        value: function step9() {
            var _this6 = this;

            //扔出一把武器
            maskArea.visible = false;
            nextLabel.visible = false;
            Laya.MouseManager.enabled = false;
            otherSpeakMan.visible = false;
            /*  this.sWeapon = this.weaponManager.seletedWeapon(1);
             this.sWeapon.isSelf = false;
            
             this.weaponBarClickHandler(this.sWeapon);  */
            //释放技能1 雪女剑法
            this.skillWithWeapon(false);
            Laya.timer.once(1500, this, function () {
                _this6.setPause();
                maskArea.visible = true;
                Laya.MouseManager.enabled = true;
                _this6.dodgeOwner.zOrder = 1010;
                _this6.aniFinger.visible = true;
                _this6.aniFinger.pos(1240, 660);
                _this6.aniFinger.play(0, true);
                _this6.noCount = true;
                hitArea.unHit.clear();
                hitArea.unHit.drawRect(1160, 580, 160, 160, '#000');
                _this6.dodgeOwner.once(Laya.Event.CLICK, _this6, function (e) {
                    e.stopPropagation();
                    guideStep += 1;
                    _this6.setResume();
                    _this6.step10();
                });
            });
        }
        //呼，还好闪得快，不然够我喝一壶。

    }, {
        key: "step10",
        value: function step10() {
            _Global.Global.dataPoints('点击闪避');
            this.noCount = false;
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            this.dodgeOwner.zOrder = 10;
            maskArea.visible = false;
            Laya.MouseManager.enabled = false;
            console.log('hha,点击1000');
            Laya.timer.once(1500, this, function () {
                maskArea.visible = true;
                Laya.MouseManager.enabled = true;
                nextLabel.visible = true;
                selfSpeakMan.visible = true;
                selfSpeakManComp.showWord("\u547C\uFF0C\u8FD8\u597D\u95EA\u5F97\u5FEB\uFF0C\u4E0D\u7136\u591F\u6211\u559D\u4E00\u58F6\u3002");
            });
        }
    }, {
        key: "step11",
        value: function step11() {
            var tween = new Laya.Tween();
            tween.to(maskArea, {
                alpha: 1
            }, 2000, null, Laya.Handler.create(this, function () {}));
            selfSpeakManComp.showWord("\u5509\uFF1F\u9F99\u513F\u59D1\u5A18\u53BB\u54EA\u513F\u4E86\uFF1F");
            this.otherPlayer.node.removeSelf();
            //对手消失，跳转主界面
        }
    }, {
        key: "step12",
        value: function step12() {
            this.navigator.popToRootScene();
            PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).setGuide();
        }
    }, {
        key: "setPause",
        value: function setPause() {
            this.selfWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.pause();
            });
        }
    }, {
        key: "setResume",
        value: function setResume() {
            this.selfWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.resume();
            });
        }
    }, {
        key: "addTips",
        value: function addTips() {
            var imgTip = new Laya.Image();
            imgTip.skin = "remote/guide/imgRoute.png";
            imgTip.y = 100;
            imgTip.centerX = 0;
            imgTip.zOrder = 1200;
            this.imgTip = imgTip;
            this.owner.addChild(imgTip);
            this.arrowAni();
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this7 = this;

            _get(GameGuideControl.prototype.__proto__ || Object.getPrototypeOf(GameGuideControl.prototype), "onEnable", this).call(this);
            this.spriteBg.on(Laya.Event.CLICK, this, function (e) {
                /*   if(this.noCount){return;} */
                guideStep += 1;
                switch (guideStep) {
                    case 4:
                        e.stopPropagation();
                        _this7.step4();
                        break;
                    case 6:
                        e.stopPropagation();
                        _this7.step6();
                        break;
                }

                console.log("\u63A5\u6536\u5230\u70B9\u51FB");
            });
            //this.own
            this.onNotification('collide', this, function () {
                if (_this7._first) {
                    return;
                }
                Laya.timer.once(500, _this7, function () {
                    _this7._first = true;
                    maskArea.visible = true;
                    Laya.MouseManager.enabled = true;
                    nextLabel.visible = true;
                    otherSpeakMan.visible = true;
                    otherSpeakManComp.showWord("\u597D\u75DB\u3002\u6211\u751F\u6C14\u4E86\uFF01\u5403\u6211\u4E00\u5251\u3002");
                    // this.offNotificationListener('collide');
                });
            });
            //引导所在容器
            guideContainer = new Laya.Sprite();
            guideContainer.zOrder = 1000;
            this.owner.addChild(guideContainer);
            guideContainer.cacheAs = 'bitmap';

            // 绘制遮罩区，含透明度，
            maskArea = new Laya.Sprite();
            maskArea.alpha = 0.5;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.pos(-150, 0);
            maskArea.mouseEnabled = true;
            //maskArea.zOrder=1000;
            guideContainer.addChild(maskArea);

            //绘制可点击区域
            interactionArea = new Laya.Sprite();
            interactionArea.blendMode = 'destination-out';
            // interactionArea.zOrder=1001;
            guideContainer.addChild(interactionArea);

            //可点击区域
            hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(0, 0, 1634, 750, '#000');
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            //添加箭头
            var target = new Laya.Sprite();
            target.pos(885, 565);
            target.texture = "remote/guide/arrow.png";
            target.visible = false;
            this.target = target;
            this.curY = target.y;
            var timeLine = new Laya.TimeLine();
            this.timeLine = timeLine;
            var originY = this.curY;
            this.timeLine.to(this.target, {
                y: originY + 20
            }, 400, null, 0).to(this.target, {
                y: originY
            }, 400, null, 1);
            guideContainer.addChild(target);

            nextLabel = new Laya.Label();
            nextLabel.text = '跳过';
            nextLabel.font = 'figureDetail';
            nextLabel.pos(1100, 30);
            nextLabel.name = 'next';
            nextLabel.mouseEnabled = true;
            nextLabel.zOrder = 1300;
            console.log(nextLabel.width);
            guideContainer.addChild(nextLabel);

            nextLabel.on(Laya.Event.CLICK, this, this.nextTick);

            selfSpeakMan = this.selfSpeakMan.create.call(this.selfSpeakMan);
            selfSpeakManComp = selfSpeakMan.getComponent(_SpeakMan2.default);
            selfSpeakManComp.showWord('还请龙儿姑娘手下留情啊。');
            selfSpeakMan.y = 225;
            selfSpeakMan.zOrder = 1003;
            this.owner.addChild(selfSpeakMan);

            otherSpeakMan = this.otherSpeakMan.create.call(this.otherSpeakMan);
            otherSpeakManComp = otherSpeakMan.getComponent(_SpeakMan2.default);
            otherSpeakMan.pos(50, 255);
            otherSpeakMan.zOrder = 1003;
            this.owner.addChild(otherSpeakMan);
            otherSpeakMan.visible = false;
        }
    }, {
        key: "nextTick",
        value: function nextTick(e) {
            e.stopPropagation();
            guideStep += 1;
            this['step' + guideStep]();
        }
    }]);

    return GameGuideControl;
}(_GameControl3.default);

exports.default = GameGuideControl;

},{"../../scripts/common/HomeControl":38,"../../scripts/common/tool/Global":55,"../GameControl":4,"../WeaponManager":9,"./SpeakMan":21}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	"weaponList": [{
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"hurt": 5
			},
			"skillDesc": "造成5倍伤害",
			"skillId": 48,
			"skillLevel": 1,
			"skillName": "诛心",
			"skillProb": 18,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 0
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"critHarm": 20,
				"critProb": 5
			},
			"skillDesc": "暴击+5%，暴伤+20% ",
			"skillId": 65,
			"skillLevel": 1,
			"skillName": "灵猴",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 190.0,
		"weaponCd": 2.0,
		"weaponConsume": 91.0,
		"weaponDownConsume": 27,
		"weaponDurable": 22,
		"weaponIcon": "xxxxx",
		"weaponId": "d015_3",
		"weaponLevel": 15,
		"weaponName": "小李飞刀",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "48,65",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"recoverDown": "5-0.4"
			},
			"skillDesc": "使对手内力恢复速度-60%，持续5秒",
			"skillId": 55,
			"skillLevel": 1,
			"skillName": "气绝",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downConsume": 10
			},
			"skillDesc": "所有兵器内力消耗-10%",
			"skillId": 80,
			"skillLevel": 1,
			"skillName": "轮回",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 242.0,
		"weaponCd": 3.0,
		"weaponConsume": 72.0,
		"weaponDownConsume": 36,
		"weaponDurable": 25,
		"weaponIcon": "xxxx",
		"weaponId": "z015_3",
		"weaponLevel": 15,
		"weaponName": "倚天",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "55,80",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 2,
		"weaponUpAttack": 97,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"cd": 0
			},
			"skillDesc": "兵器立即冷却",
			"skillId": 58,
			"skillLevel": 1,
			"skillName": "顿悟",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"allWeaponSkillProb": 10
			},
			"skillDesc": "所有兵器技能触发几率提升10%",
			"skillId": 87,
			"skillLevel": 1,
			"skillName": "剑圣",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 456.0,
		"weaponCd": 4.0,
		"weaponConsume": 126.0,
		"weaponDownConsume": 50,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "g015_3",
		"weaponLevel": 15,
		"weaponName": "紫金降魔杵",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "58,87",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 3,
		"weaponUpAttack": 256,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"poison": "6-210"
			},
			"skillDesc": "使对手中剧毒，6秒损失210点生命",
			"skillId": 46,
			"skillLevel": 1,
			"skillName": "奇毒",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"notPoison": 1
			},
			"skillDesc": "免疫中毒",
			"skillId": 83,
			"skillLevel": 1,
			"skillName": "药师",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 185.0,
		"weaponCd": 2.0,
		"weaponConsume": 81.0,
		"weaponDownConsume": 27,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "d014_3",
		"weaponLevel": 15,
		"weaponName": "绝命",
		"weaponPrice": 25000,
		"weaponSalePrice": 5000,
		"weaponSkills": "46,83",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"weaponNum": 3
			},
			"skillDesc": "发出3件兵器",
			"skillId": 44,
			"skillLevel": 1,
			"skillName": "影刃",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downCd": 10
			},
			"skillDesc": "所有兵器冷却时间-10%",
			"skillId": 82,
			"skillLevel": 1,
			"skillName": "剑豪",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 180.0,
		"weaponCd": 2.0,
		"weaponConsume": 86.0,
		"weaponDownConsume": 27,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "d013_3",
		"weaponLevel": 15,
		"weaponName": "七星",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "44,82",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}],
	"role": {
		"addAllRate": 1.0,
		"addMpRate": 0.0,
		"addStrengthRate": 0.0,
		"addWeaponSkillProb": 10,
		"downWeaponCd": 10,
		"downWeaponConsume": 0,
		"hitRecoveMp": 0,
		"notCrit": 0,
		"notDizzy": 0,
		"notFrozen": 0,
		"notPalsy": 0,
		"notPoison": 1,
		"reboundRate": 0,
		"recoverHp": 0,
		"recoverMp": 1.0,
		"refiners": [{
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_09",
			"refinerBasics": {
				"show": 3,
				"weaponType": 1,
				"hurt": 1.03
			},
			"refinerDesc": "提升轻型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "轻型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "轻燕",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_10",
			"refinerBasics": {
				"show": 3,
				"weaponType": 2,
				"hurt": 1.03
			},
			"refinerDesc": "提升中型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "中型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "锋刃",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_11",
			"refinerBasics": {
				"show": 3,
				"weaponType": 3,
				"hurt": 1.03
			},
			"refinerDesc": "提升重型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "重型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "沉石",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}],
		"roleBone": 126,
		"roleCritHarm": 180,
		"roleCritProb": 0,
		"roleDesc": "飞刀",
		"roleDress": "hero_1",
		"roleHp": 1110,
		"roleIcon": "xxx",
		"roleId": 1,
		"roleLevel": 20,
		"roleMp": 259,
		"roleName": "阿强",
		"rolePrice": 0,
		"roleSkills": "31,32,33",
		"roleStar": 2,
		"roleStatus": 0,
		"roleStrength": 377,
		"roleTopLevel": 20,
		"roleType": 0,
		"roleUpBone": 5,
		"roleUpHp": 42,
		"roleUpMp": 10,
		"roleUpStrength": 15,
		"skillWeapon": {
			"exp": 0,
			"num": 0,
			"skills": [{
				"skillCd": 0.0,
				"skillConfig": {
					"critProb": 20
				},
				"skillDesc": "发出1把火焰飞刀，造成臂力*0.18倍伤害。技能暴击+20%。",
				"skillId": 88,
				"skillLevel": 1,
				"skillName": "酒灼刀",
				"skillProb": 100,
				"skillType": 1,
				"skillUnlock": 0,
				"status": 0
			}],
			"weaponAttack": 67.0,
			"weaponCd": 0.0,
			"weaponConsume": 0.2,
			"weaponDurable": 20,
			"weaponIcon": "3",
			"weaponId": "x001_4",
			"weaponName": "火焰飞刀",
			"weaponPrice": 0,
			"weaponSalePrice": 0,
			"weaponSkills": "88",
			"weaponStar": 4,
			"weaponTopLevel": 15,
			"weaponType": 1
		},
		"skills": [{
			"skillCd": 20.0,
			"skillConfig": {
				"weaponId": "x001_4",
				"critProb": 20
			},
			"skillConsume": 0.0,
			"skillDesc": "发出1把火焰飞刀，造成臂力*0.18倍伤害。技能暴击+20%。",
			"skillId": 31,
			"skillLevel": 1,
			"skillName": "酒灼刀",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 5,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"critHarm": 20,
				"hurt": 0.2
			},
			"skillConsume": 0.0,
			"skillDesc": "所有轻型兵器伤害+20%。暴击伤害+20%。",
			"skillId": 32,
			"skillLevel": 1,
			"skillName": "江湖老油条",
			"skillProb": 12,
			"skillType": 0,
			"skillUnlock": 10,
			"status": 1
		}, {
			"skillCd": 60.0,
			"skillConfig": {
				"weaponCd": 0,
				"time": 10
			},
			"skillConsume": 0.0,
			"skillDesc": "所有兵器无冷却时间，持续10秒。",
			"skillId": 33,
			"skillLevel": 1,
			"skillName": "夺命连环三仙剑",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 15,
			"status": 1
		}],
		"upgradeCost": 0
	},
	"robotWeaponList": [{
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"recoverDown": "5-0.4"
			},
			"skillDesc": "使对手内力恢复速度-60%，持续5秒",
			"skillId": 55,
			"skillLevel": 1,
			"skillName": "气绝",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downConsume": 10
			},
			"skillDesc": "所有兵器内力消耗-10%",
			"skillId": 80,
			"skillLevel": 1,
			"skillName": "轮回",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 242.0,
		"weaponCd": 2.9,
		"weaponConsume": 72.0,
		"weaponDownConsume": 36,
		"weaponDurable": 25,
		"weaponIcon": "xxxx",
		"weaponId": "z015_3",
		"weaponLevel": 15,
		"weaponName": "倚天",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "55,80",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 2,
		"weaponUpAttack": 97,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"cd": 0
			},
			"skillDesc": "兵器立即冷却",
			"skillId": 58,
			"skillLevel": 1,
			"skillName": "顿悟",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"allWeaponSkillProb": 10
			},
			"skillDesc": "所有兵器技能触发几率提升10%",
			"skillId": 87,
			"skillLevel": 1,
			"skillName": "剑圣",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 456.0,
		"weaponCd": 4.4,
		"weaponConsume": 126.0,
		"weaponDownConsume": 50,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "g015_3",
		"weaponLevel": 15,
		"weaponName": "紫金降魔杵",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "58,87",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 3,
		"weaponUpAttack": 256,
		"weaponUpDurable": 10
	}],
	"robotRole": {
		"addAllRate": 1.0,
		"addMpRate": 0.0,
		"addStrengthRate": 0.0,
		"addWeaponSkillProb": 10,
		"downWeaponCd": 0,
		"downWeaponConsume": 0,
		"hitRecoveMp": 5,
		"notCrit": 0,
		"notDizzy": 0,
		"notFrozen": 0,
		"notPalsy": 0,
		"notPoison": 0,
		"reboundRate": 0,
		"recoverHp": 0,
		"recoverMp": 1.0,
		"refiners": [{
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_09",
			"refinerBasics": {
				"show": 3,
				"weaponType": 1,
				"hurt": 1.03
			},
			"refinerDesc": "提升轻型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "轻型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "轻燕",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_10",
			"refinerBasics": {
				"show": 3,
				"weaponType": 2,
				"hurt": 1.03
			},
			"refinerDesc": "提升中型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "中型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "锋刃",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_11",
			"refinerBasics": {
				"show": 3,
				"weaponType": 3,
				"hurt": 1.03
			},
			"refinerDesc": "提升重型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "重型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "沉石",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}],
		"roleBone": 52,
		"roleCritHarm": 192,
		"roleCritProb": 20,
		"roleDesc": "内力",
		"roleDress": "hero_2",
		"roleHp": 835,
		"roleIcon": "xxx",
		"roleId": 2,
		"roleLevel": 20,
		"roleMp": 386,
		"roleName": "龙女",
		"rolePrice": 1200,
		"roleSkills": "34,35,36",
		"roleStar": 3,
		"roleStatus": 0,
		"roleStrength": 252,
		"roleTopLevel": 20,
		"roleType": 0,
		"roleUpBone": 2,
		"roleUpHp": 31,
		"roleUpMp": 15,
		"roleUpStrength": 10,
		"skillWeapon": {
			"exp": 0,
			"num": 0,
			"skills": [{
				"skillCd": 0.0,
				"skillConfig": {
					"downMp": 100
				},
				"skillDesc": "发出一把素心长剑，造成内力*0.24倍伤害。命中后使对手的内力立即减少100点。",
				"skillId": 89,
				"skillLevel": 1,
				"skillName": "雪女剑法",
				"skillProb": 100,
				"skillType": 1,
				"skillUnlock": 0,
				"status": 0
			}],
			"weaponAttack": 0.24,
			"weaponCd": 0.0,
			"weaponConsume": 0.15,
			"weaponDurable": 20,
			"weaponIcon": "2",
			"weaponId": "x002_4",
			"weaponName": "素心长剑",
			"weaponPrice": 0,
			"weaponSalePrice": 0,
			"weaponSkills": "89",
			"weaponStar": 4,
			"weaponTopLevel": 15,
			"weaponType": 2
		},
		"skills": [{
			"skillCd": 24.0,
			"skillConfig": {
				"downMp": 100,
				"weaponId": "x002_4"
			},
			"skillConsume": 0.0,
			"skillDesc": "发出一把素心长剑，造成内力*0.24倍伤害。命中后使对手的内力立即减少100点。",
			"skillId": 34,
			"skillLevel": 1,
			"skillName": "雪女剑法",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 5,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"addHitRecoverMp": 5,
				"mp": 0.2
			},
			"skillConsume": 0.0,
			"skillDesc": "内力+20%，兵器命中后立即获得5点内力。",
			"skillId": 35,
			"skillLevel": 1,
			"skillName": "雪女心经",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 10,
			"status": 1
		}, {
			"skillCd": 60.0,
			"skillConfig": {
				"time": 10,
				"recoverHp": 0.2,
				"recoverMp": 2
			},
			"skillConsume": 0.0,
			"skillDesc": "立刻恢复20%生命。内力恢复速度提升100%，持续10秒。",
			"skillId": 36,
			"skillLevel": 1,
			"skillName": "素心大法",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 15,
			"status": 1
		}],
		"upgradeCost": 0
	}
};

},{}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SpeakMan = function (_PaoYa$Component) {
    _inherits(SpeakMan, _PaoYa$Component);

    /** @prop {name:lblSpeakName,tips:'人物名字',type:Node}*/
    /** @prop {name:lblIntroduct,tips:'介绍文字',type:Node}*/
    /** @prop {name:imgArrow,tips:'箭头图片',type:Node}*/
    /** @prop {name:imgRole,tips:'人物形象图片',type:Node}*/
    function SpeakMan() {
        _classCallCheck(this, SpeakMan);

        return _possibleConstructorReturn(this, (SpeakMan.__proto__ || Object.getPrototypeOf(SpeakMan)).call(this));
    }

    _createClass(SpeakMan, [{
        key: "onAwake",
        value: function onAwake() {
            this.lblSpeakName.font = "figureDetail";
            this.target = this.imgArrow;
            this.curY = this.target.y;
            var timeLine = new Laya.TimeLine();
            this.timeLine = timeLine;
            this.lblSpeakName.scale(0.8, 0.8);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "modify",
        value: function modify(value) {
            this.lblSpeakName.text = value;
            this.imgRole.visible = false;
        }
    }, {
        key: "refresh",
        value: function refresh(obj) {
            this.lblSpeakName.text = obj.name;
            this.imgRole.texture = "remote/guide/" + obj.dress + ".png";
        }
    }, {
        key: "showWord",
        value: function showWord(value) {
            this.str = value;
            var len = this.str.length;
            this.index = 0;
            this.lblIntroduct.text = '';
            Laya.timer.loop(60, this, this.wordAni, [len]);
        }
    }, {
        key: "wordAni",
        value: function wordAni(len) {
            this.lblIntroduct.text += this.str.substring(this.index, this.index + 1);
            this.index += 1;
            if (this.index == len) {
                Laya.timer.clear(this, this.wordAni);
                this.arrowAni();
            }
        }
    }, {
        key: "arrowAni",
        value: function arrowAni() {
            this.imgArrow.visible = true;
            var originY = this.curY;
            this.timeLine.to(this.target, {
                y: originY + 20
            }, 400, null, 0).to(this.target, {
                y: originY
            }, 400, null, 1);
            this.timeLine.play(0, true);
        }
    }, {
        key: "stopTimeLine",
        value: function stopTimeLine() {
            this.timeLine.pause();
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            console.log("\u9500\u6BC1\u5BF9\u8BDD");
            this.timeLine.destroy();
            this.timeLine = null;
        }
    }]);

    return SpeakMan;
}(PaoYa.Component);

exports.default = SpeakMan;

},{}],22:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var instance = void 0;

/**
 * 游戏开场前管理类
 */

var PreOpenManager = function (_Laya$EventDispatcher) {
  _inherits(PreOpenManager, _Laya$EventDispatcher);

  function PreOpenManager(cb) {
    _classCallCheck(this, PreOpenManager);

    var _this = _possibleConstructorReturn(this, (PreOpenManager.__proto__ || Object.getPrototypeOf(PreOpenManager)).call(this));

    if (instance) {
      var _ret;

      // cb();
      Laya.timer.callLater(_this, cb);
      return _ret = instance, _possibleConstructorReturn(_this, _ret);
    }
    instance = _this;
    _this.cb = cb;
    Laya.loader.create('gamescenes/prefab/PreOpenView.json', Laya.Handler.create(_this, _this.onComplete));

    return _this;
  }

  _createClass(PreOpenManager, [{
    key: 'onComplete',
    value: function onComplete(obj) {
      var preOpenView = new Laya.Prefab();
      preOpenView.json = obj;
      var view = Laya.Pool.getItemByCreateFun('PreOpenView', preOpenView.create, preOpenView);
      Laya.stage.addChild(view);
      view.width = Laya.stage.width;
      this.view = view;
      this.view.on('end', this, this.endHandler);
      this.cb();
    }
  }, {
    key: 'init',
    value: function init() {}
  }, {
    key: 'start',
    value: function start(data) {
      if (this.view) {
        this.view.visible = true;
        this.view.start(data);
      }
    }
  }, {
    key: 'endHandler',
    value: function endHandler() {
      if (this.view) {
        this.view.visible = false;
        this.event(PreOpenManager.TALKEND);
      }
    }
  }]);

  return PreOpenManager;
}(Laya.EventDispatcher);

exports.default = PreOpenManager;

PreOpenManager.TALKEND = 'talkend';

/* 先声明一个预设变量
{Laya.loader.create("prefab/预设名字.json",Handler.create(this,onComplete));
}
private function onComplete(obj:Object):Void{
  一个预设变量.json = ojb
  一个sprite = Pool.getItemByCreateFun("自己起一个名字", this.一个预设变量.create, this.一个预设变量);
} */

},{}],23:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SpeakMan = require('../gameGuide/SpeakMan');

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PreOpenView = function (_PaoYa$View) {
    _inherits(PreOpenView, _PaoYa$View);

    function PreOpenView() {
        _classCallCheck(this, PreOpenView);

        return _possibleConstructorReturn(this, (PreOpenView.__proto__ || Object.getPrototypeOf(PreOpenView)).call(this));
    }

    _createClass(PreOpenView, [{
        key: 'onAwake',
        value: function onAwake() {
            this.selfSpeakMan = this.getChildByName('selfSpeakMan');
            this.otherSpeakMan = this.getChildByName('otherSpeakMan');
            console.log(this.selfSpeakMan.getComponent(_SpeakMan2.default));
            this.selfSpeakManComp = this.selfSpeakMan.getComponent(_SpeakMan2.default);
            this.otherSpeakManComp = this.otherSpeakMan.getComponent(_SpeakMan2.default);

            this.selfSpeakMan.visible = false;
            this.otherSpeakMan.visible = false;
            this.selfSpeakMan.x = -50;
            this.otherSpeakMan.right = 0;

            this.on(Laya.Event.CLICK, this, this.clickHandler);
        }
    }, {
        key: 'clickHandler',
        value: function clickHandler() {
            this.indexId += 1;
            if (this.indexId > this.dialogues.length - 1) {
                console.log('\u6CA1\u6709\u5185\u5BB9\u5C55\u793A\u4E86');
                this.event('end');
            } else {
                this.refresh(this.dialogues[this.indexId]);
            }
        }
    }, {
        key: 'start',
        value: function start(res) {
            this.indexId = 0;
            this.stageInfo = JSON.parse(JSON.stringify(res));
            this.selfDress = this.stageInfo.selfDress;
            this.otherDress = this.stageInfo.otherDress;
            this.dialogues = this.stageInfo.dialogues;
            this.selfSpeakManComp.refresh({ dress: res.selfDress, name: res.selfName });
            this.otherSpeakManComp.refresh({ dress: res.otherDress, name: res.otherName });
            this.refresh(this.dialogues[this.indexId]);
        }
    }, {
        key: 'refresh',
        value: function refresh(item) {
            if (item.o) {
                this.selfSpeakMan.visible = false;
                this.otherSpeakMan.visible = true;
                this.otherSpeakManComp.showWord(item.o);
            } else if (item.s) {
                this.otherSpeakMan.visible = false;
                this.selfSpeakMan.visible = true;
                this.selfSpeakManComp.showWord(item.s);
            }
        }
    }]);

    return PreOpenView;
}(PaoYa.View);

exports.default = PreOpenView;

PreOpenView.END = 'end';

},{"../gameGuide/SpeakMan":21}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Tool = require("../../scripts/common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Cross = function (_PaoYa$Component) {
    _inherits(Cross, _PaoYa$Component);

    /* @prop {name:imgCross,tips:"小游戏精灵图",type:Node} */
    function Cross() {
        _classCallCheck(this, Cross);

        return _possibleConstructorReturn(this, (Cross.__proto__ || Object.getPrototypeOf(Cross)).call(this));
    }

    _createClass(Cross, [{
        key: "onAwake",
        value: function onAwake() {
            this.imgCross.skin = this.params.skin;
            if (this.params.isScale) {
                this.owner.scale(0.7, 0.7);
            }
            this.owner.on(Laya.Event.CLICK, this, this.crossGame);
            _Tool2.default.showGameNums(this.params);
            if (this.params.ani) {
                this.shakeEffect();
            }
        }
    }, {
        key: "crossGame",
        value: function crossGame() {
            console.log("\u8DF3\u8F6C\u6E38\u620F");
            _Tool2.default.goToNewGame(this.params);
        }
    }, {
        key: "shakeEffect",
        value: function shakeEffect() {
            this.owner.anchorX = 0.5;
            this.owner.anchorY = 0.5;
            var shakeTimeLine = new Laya.TimeLine();
            shakeTimeLine.to(this.owner, {
                rotation: -15
            }, 250, Laya.Ease.quadInOut, 500).to(this.owner, {
                rotation: 0
            }, 250, Laya.Ease.quadInOut, 0).to(this.owner, {
                rotation: 15
            }, 250, Laya.Ease.quadInOut, 0).to(this.owner, {
                rotation: 0
            }, 250, Laya.Ease.quadInOut, 0);
            shakeTimeLine.play(0, true);
            this.shakeTimeLine = shakeTimeLine;
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.shakeTimeLine && this.shakeTimeLine.destroy();
            this.shakeTimeLine = null;
        }
    }]);

    return Cross;
}(PaoYa.Component);

exports.default = Cross;

},{"../../scripts/common/tool/Tool":56}],25:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dodge = function (_PaoYa$Component) {
    _inherits(Dodge, _PaoYa$Component);

    /* @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    function Dodge() {
        _classCallCheck(this, Dodge);

        return _possibleConstructorReturn(this, (Dodge.__proto__ || Object.getPrototypeOf(Dodge)).call(this));
    }

    _createClass(Dodge, [{
        key: "onAwake",
        value: function onAwake() {
            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.spShadow.visible = false;
            this.maskArea = new Laya.Sprite();
            this.maskArea.texture = "remote/game/dodge.png";
            owner.addChild(this.maskArea);

            this.spMask = new Laya.Sprite();
            this.maskArea.mask = this.spMask;

            this.cdTime = 20000;
            this.freezeing = false;
            this.maxAngle = 270;
            this.startAngle = -90;
            this.endAngle = -90;
        }
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick() {
            this.clickHandler();
        }
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            if (_GameControl2.default.instance.gameState != "start") {
                _GameControl2.default.instance.showTips("游戏未开始");
                return;
            }
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            _GameControl2.default.instance.dodgeSkillShow(true);
        }
    }, {
        key: "startT",
        value: function startT(time) {

            this.spShadow.visible = true;
            this.maskArea.visible = true;
            this.freezeing = true;

            this.beiginTime = new Date().getTime();

            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
            //Laya.timer.loop(this.frameCd, this, this.startCd);
            var cdT = time == undefined ? this.cdTime : time;
            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
    }]);

    return Dodge;
}(PaoYa.Component);

exports.default = Dodge;

},{"../GameControl":4}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameBanner = function (_PaoYa$Component) {
    _inherits(GameBanner, _PaoYa$Component);

    /** @prop {name:lblGameType,tips:'比赛类型',type:Node}*/
    /** @prop {name:lblTime,tips:'时间label或者闯关数字',type:Node}*/
    function GameBanner() {
        _classCallCheck(this, GameBanner);

        return _possibleConstructorReturn(this, (GameBanner.__proto__ || Object.getPrototypeOf(GameBanner)).call(this));
    }

    _createClass(GameBanner, [{
        key: "onAwake",
        value: function onAwake() {
            this.lblGameType.font = "weaponNFontT";
        }
    }, {
        key: "changeStyle",
        value: function changeStyle(params) {
            if (params.gameType == "battle") {
                this.lblGameType.text = "匹配赛";
                this.startCount();
            } else if (params.gameType == "pass" || params.gameType == "adventure") {
                if (params.gameType == "pass") {
                    this.lblGameType.text = "\u7B2C" + params.curNum + "\u5173";
                } else {
                    this.lblGameType.text = "\u5947\u9047";
                }
                this.lblTime.text = params.battleIndex + "/" + params.monsterNum;
            }
        }
    }, {
        key: "setTimeText",
        value: function setTimeText(value) {
            this.lblTime.text = value;
        }
    }, {
        key: "startCount",
        value: function startCount() {
            var _this2 = this;

            var timerService = new PaoYa.TimerService(1000, 1, true);
            timerService.on(PaoYa.TimerService.PROGRESS, this, function (time) {

                _this2.lblTime.text = time.formatTime('M:S') + "";
            });
            timerService.on(PaoYa.TimerService.STOP, this, function () {});
            timerService.start();
            this.timerService = timerService;
        }
    }, {
        key: "pause",
        value: function pause() {}
    }, {
        key: "resume",
        value: function resume() {
            //this.timerService.
        }
    }, {
        key: "stop",
        value: function stop() {
            this.timerService.stop();
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.timerService && this.timerService.stop();
            this.timerService = null;
        }
    }]);

    return GameBanner;
}(PaoYa.Component);

exports.default = GameBanner;

},{}],27:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HPBar = function (_PaoYa$Component) {
  _inherits(HPBar, _PaoYa$Component);

  /** @prop {name:imgHp,tips:"血条图片",type:Node} */
  /** @prop {name:imgMask,tips:"血条mask",type:Node} */
  /** @prop {name:lblHpPct,tips:"hp百分比",type:Node} */
  function HPBar() {
    _classCallCheck(this, HPBar);

    return _possibleConstructorReturn(this, (HPBar.__proto__ || Object.getPrototypeOf(HPBar)).call(this));
  }

  _createClass(HPBar, [{
    key: 'onAwake',
    value: function onAwake() {}
  }, {
    key: 'onEnable',
    value: function onEnable() {}
  }, {
    key: 'initBar',
    value: function initBar(HPValue) {
      this.originW = this.owner.width;
      this.imgMask.width = this.owner.width;
      console.log('初始的血量值:', HPValue);
      this.originHP = this.curHP = HPValue;
      this.lblHpPct.text = this.curHP + '/' + this.originHP;
    }
  }, {
    key: 'changeHP',
    value: function changeHP(value) {
      this.curHP += value;
      if (this.curHP <= 0) {
        this.imgMask.width = 0;
        this.curHP = 0;
        this.lblHpPct.text = this.curHP + '/' + this.originHP;
        return;
      } else if (this.curHP > this.originHP) {
        this.curHP = this.originHP;
      }
      this.curHP = Math.round(this.curHP);
      this.lblHpPct.text = this.curHP + '/' + this.originHP;
      var w = Math.floor(this.curHP / this.originHP * this.originW);
      this.imgMask.width = w;
    }
  }, {
    key: 'halfHP',
    value: function halfHP() {
      this.curHP = Math.round(this.originHP / 2);
      this.lblHpPct.text = this.curHP + '/' + this.originHP;
      var w = Math.floor(this.curHP / this.originHP * this.originW);
      this.imgMask.width = w;
    }
  }, {
    key: 'onDisable',
    value: function onDisable() {}
  }, {
    key: 'onDestroy',
    value: function onDestroy() {}
  }]);

  return HPBar;
}(PaoYa.Component);

exports.default = HPBar;

},{}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MPBar = function (_PaoYa$Component) {
    _inherits(MPBar, _PaoYa$Component);

    /** @prop {name:imgMP,tips:"内力条图片",type:Node} */
    /** @prop {name:imgMask,tips:"内力条mask",type:Node} */
    /** @prop {name:lblMpPct,tips:"mp百分比",type:Node} */
    function MPBar() {
        _classCallCheck(this, MPBar);

        return _possibleConstructorReturn(this, (MPBar.__proto__ || Object.getPrototypeOf(MPBar)).call(this));
    }

    _createClass(MPBar, [{
        key: 'onAwake',
        value: function onAwake() {

            this.originW = this.owner.width;
            this.imgMP.mask = this.imgMask;
            this.loopTime = 320;
        }
    }, {
        key: 'onEnable',
        value: function onEnable() {}
    }, {
        key: 'initBar',
        value: function initBar(MPValue) {
            console.log('初始的体力值:', MPValue);
            this.originMP = this.curMP = MPValue;
            this.imgMask.width = this.owner.width;
            this.perAddMP = Math.ceil(this.originMP / 600 * 20);
            this.originPerAddMP = this.perAddMP;
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
            this.startBar();
        }
    }, {
        key: 'startBar',
        value: function startBar() {
            Laya.timer.loop(this.loopTime, this, this.autoIncreaseBar);
        }
    }, {
        key: 'autoIncreaseBar',
        value: function autoIncreaseBar() {
            if (this.curMP >= this.originMP) {
                // console.warn("内力已经满了")
                return;
            }
            var addedValue = Math.round(this.curMP + this.perAddMP);
            this.curMP = addedValue > this.originMP ? this.originMP : addedValue;
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
            this.imgMask.width = Math.floor(this.curMP / this.originMP * this.originW);
        }
    }, {
        key: 'changeMP',
        value: function changeMP(value) {
            this.curMP += value;
            if (this.curMP < 0) {
                this.curMP = 0;
            } else if (this.curMP > this.originMP) {
                this.curMP = this.originMP;
            }
            this.curMP = Math.round(this.curMP);
            this.imgMask.width = Math.floor(this.curMP / this.originMP * this.originW);
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
        }
    }, {
        key: 'changePerMP',
        value: function changePerMP(value) {

            this.perAddMP = value;
        }
    }, {
        key: 'updateBar',
        value: function updateBar() {}
    }, {
        key: 'stopIncrease',
        value: function stopIncrease() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'pause',
        value: function pause() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'resume',
        value: function resume() {
            Laya.timer.loop(this.loopTime, this, this.autoIncreaseBar);
        }
    }, {
        key: 'onDisable',
        value: function onDisable() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {}
    }]);

    return MPBar;
}(PaoYa.Component);

exports.default = MPBar;

},{}],29:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Player = function (_PaoYa$Component) {
  _inherits(Player, _PaoYa$Component);

  /** @prop {name:boxAniBot,tips:"受击动效box",type:Node} */
  /** @prop {name:aniBot,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniMid,tips:"中间受击动效box",type:Node} */
  /** @prop {name:aniMid,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniTop,tips:"顶部动效box",type:Node} */
  /** @prop {name:aniTop,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniPalsy,tips:"麻痹动效box",type:Node} */
  /** @prop {name:aniPalsy,tips:"麻痹动效节点",type:Node} */
  /** @prop {name:boxAniDizzy,tips:"眩晕动效box",type:Node} */
  /** @prop {name:aniDizzy,tips:"眩晕动效节点",type:Node} */
  /** @prop {name:boxAniHp,tips:"回血动效box",type:Node} */
  /** @prop {name:aniHp,tips:"回血动效节点",type:Node} */
  /** @prop {name:boxAniMp,tips:"回蓝动效box",type:Node} */
  /** @prop {name:aniMp,tips:"回蓝动效节点",type:Node} */
  /** @prop {name:boxAniPoison,tips:"中毒动效box",type:Node} */
  /** @prop {name:aniPoison,tips:"中毒动效节点",type:Node} */
  /** @prop {name:aniSkillCommon,tips:"兵器技能动效节点",type:Node} */
  /** @prop {name:aniSkill2Hero1,tips:"1号英雄技能2动效节点",type:Node} */
  /** @prop {name:aniSkill2Hero2,tips:"2号英雄技能2动效节点",type:Node} */
  /** @prop {name:aniSkill2Hero3,tips:"3号英雄技能2动效节点",type:Node} */
  function Player() {
    _classCallCheck(this, Player);

    return _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this));
  }

  _createClass(Player, [{
    key: "onAwake",
    value: function onAwake() {
      var owner = this.owner;

      var width = owner.width,
          height = owner.height;
      var posX = Math.floor(width / 2),
          posY = height;
      this.centerX = posX;

      //console.error('角色服装:', this.attr.roleDress);
      var dressIcon = this.attr.roleDress;
      this.dressIcon = dressIcon;
      // this.roleId = this.attr.roleId;
      var skeleton = _HeroConfig2.default.getSkeleton(dressIcon);
      skeleton.play('stand', true);
      skeleton.pos(posX, posY - 10);
      //不管什么状态播放完，都继续播放待机状态
      skeleton.on(Laya.Event.STOPPED, this, this.stopHandler);
      skeleton.on(Laya.Event.LABEL, this, this.labelHandler);
      this.skeleton = skeleton;

      this.owner.addChild(skeleton);
      this.typeAniName = ["", "Bot", "Mid", "Top", "Top"]; //对应轨迹的动画名称
      var freeze = _HeroConfig2.default.getSkeleton('freeze');
      freeze.pos(posX, posY);
      this.owner.addChild(freeze);
      this.freeze = freeze;
      this.index = 0;
    }
    //执行两次，找原因(因为player在GameControl的onAwake创建)

  }, {
    key: "onEnable",
    value: function onEnable() {
      this.killed = false;
      this.index += 1;
      this.roleId = this.attr.roleId; //重新获取 对象池复用 roleId也许有变
      if (this.dressIcon != this.attr.roleDress) {
        this.dressIcon = this.attr.roleDress;
        var templet = _HeroConfig2.default.spineMap[this.dressIcon].templet;
        this.skeleton.init(templet, 0);
        this.skeleton.play('stand', true);
      } else {
        this.skeleton.play('stand', true);
      }
      this.canAction = true;
      this.bounceSkill = false;
      this.stealHPSkill = false;
      this.sectionAni = 0; //分段动画
      //状态清零 以免影响下一个
      this.plasyState = false;
      this.freezeState = false;
      this.dizzyState = false;
    }
    /* 监听事件帧 */

  }, {
    key: "labelHandler",
    value: function labelHandler(e) {
      var _this2 = this;

      // this.skeleton.on(Laya.Event.LABEL, this, (e) => {
      switch (e.name) {
        case 'skill1':
          /* 防止技能1和技能2触发太密集 */
          Laya.timer.once(500, this, function () {
            if (!_this2.plasyState && !_this2.freezeState && !_this2.dizzyState) {
              _this2.canAction = true;
            }
          });
          _GameControl2.default.instance.allResume(this.isSelf);
          this.skillCallback();
          break;
        case 'stop':
          console.log("------stop-------");
          this.canAction = false;
          _GameControl2.default.instance.allPause(this.isSelf);

          break;
        case 'skill2':
          /* 防止技能1和技能2触发太密集 */
          Laya.timer.once(500, this, function () {
            console.log("\u51B0\u51BB\u72B6\u6001", _this2.freezeState);
            if (!_this2.plasyState && !_this2.freezeState && !_this2.dizzyState) {
              _this2.canAction = true;
            }
          });
          _GameControl2.default.instance.allResume(this.isSelf);
          this.skillCallback();
          if (this['aniSkill2Hero' + this.roleId]) {
            this['aniSkill2Hero' + this.roleId].visible = true;
            this['aniSkill2Hero' + this.roleId].play(0, true);
          }
          break;
        case 'launch':
          this.attackCallback();
          break;
      }

      // })
    }
    //监听动画停止；

  }, {
    key: "stopHandler",
    value: function stopHandler() {
      var _this3 = this;

      var time = 0;
      //Laya.MouseManager.enabled = true;
      if (this.killed) {
        this.owner.removeSelf();
        return;
      }
      if (this.sectionAni == 1) {
        this.sectionAni += 1;
        this.skeleton.play('dodge2', true);
        if (this.roleId == 1) {
          time = 800;
        } else if (this.roleId == 2) {
          time = 200;
        } else if (this.roleId == 4) {
          time = 1000;
        } else if (this.roleId == 3) {
          time = 1000;
        }
        Laya.timer.once(time, this, function () {
          _this3.sectionAni += 1;
          _this3.skeleton.play('dodge3', false);
        });
        return;
      }
      if (this.sectionAni == 3) {
        this.removeDodge();
        // return;
      }
      if (this.plasyState || this.freezeState) {
        console.log("------freeze still-------");
        this.skeleton.play('freeze', true);
        return;
      }
      if (this.dizzyState) {
        console.log("------dizzy still-------");
        this.skeleton.play('dizzy', true);
        return;
      }
      //skeleton被打断，解除机器人不能动 机器人在受伤过程中不能动
      if (!this.isSelf) {
        this.canAction = true;
      }
      this.skeleton.play('stand', true);
    }
    //动态注册技能回调

  }, {
    key: "skillCallback",
    value: function skillCallback() {}
    //动态注册攻击回调

  }, {
    key: "attackCallback",
    value: function attackCallback() {}

    //人物触发兵器技能,人物通用技能

  }, {
    key: "showSkill1",
    value: function showSkill1() {
      this.skeleton.play("skill1", false);
    }
    /* removeSkill1() {
      this.aniSkillCommon.stop();
    } */
    //人物触发技能2

  }, {
    key: "showSkill2",
    value: function showSkill2() {
      this.skeleton.play("skill2", false);
    }
  }, {
    key: "removeSkill2",
    value: function removeSkill2() {
      if (this['aniSkill2Hero' + this.roleId]) {
        this['aniSkill2Hero' + this.roleId].visible = false;
        this['aniSkill2Hero' + this.roleId].stop();
      }
    }
    //人物触发兵器技能特效

  }, {
    key: "skillEffect",
    value: function skillEffect() {
      this.aniSkillCommon.visible = true;
      this.aniSkillCommon.play(0, false);
    }
  }, {
    key: "removeSkillEffect",
    value: function removeSkillEffect() {
      this.aniSkillCommon.stop();
      this.boxAniPoison.visible = false;
    }
    //攻击

  }, {
    key: "attackEffect",
    value: function attackEffect(weaponSkillEffect) {
      // this.skeleton.playbackRate(1)
      this.skeleton.play("attack", false);
      if (weaponSkillEffect) {
        this.skillEffect();
      }
    }
    //受击打,所有武器碰到都有这效果

  }, {
    key: "injuredEffect",
    value: function injuredEffect(posType, value, isCrit, cb) {
      if (this.killed) {
        return;
      }
      //机器人用 以防机器人选兵器打断受伤从而打断其他效果,比如中毒回调不执行
      if (!this.isSelf) {
        this.canAction = false;
      }
      value = Math.round(value);
      this.HPComp.changeHP(value);
      if (isCrit) {
        this.showFontEffect("暴击" + value, "crit");
      } else {
        this.showFontEffect(value, "hurt");
      }

      if (this.HPComp.curHP <= 0) {
        console.warn("---------------\u6B7B\u4EA1\u7ED3\u675F---------------");
        Laya.timer.clearAll(this);
        this.removeAllAni();
        _GameControl2.default.instance.deathHandler(this.isSelf);
        this.killed = true;
        this.skeleton.play("death", false);
        return;
      }
      var aniName = this.typeAniName[posType];
      this.skeleton.play("injured", false);
      this['boxAni' + aniName].visible = true;
      this['ani' + aniName].play(0, false);
      this.skeleton.once(Laya.Event.LABEL, this, function (e) {
        if (e.name === "injuredEnd") {
          cb && cb();
        }
      });
    }
    /* 受击打但是没有受伤特效 */

  }, {
    key: "injuredWithoutEffect",
    value: function injuredWithoutEffect(value, isCrit) {
      if (this.killed) {
        return;
      }
      //机器人用 以防机器人选兵器打断受伤从而打断其他效果,比如中毒回调不执行
      if (!this.isSelf) {
        this.canAction = false;
      }
      value = Math.round(value);
      this.HPComp.changeHP(value);
      if (isCrit) {
        this.showFontEffect("暴击" + value, "crit");
      } else {
        this.showFontEffect(value, "hurt");
      }

      if (this.HPComp.curHP <= 0) {
        console.warn("---------------\u6B7B\u4EA1\u7ED3\u675F---------------");
        Laya.timer.clearAll(this);
        this.removeAllAni();
        _GameControl2.default.instance.deathHandler(this.isSelf);
        this.killed = true;
        this.skeleton.play("death", false);
        return;
      }
    }
    //死亡时候移除所有动效

  }, {
    key: "removeAllAni",
    value: function removeAllAni() {
      this.boxAniPoison.visible = false;
      this.aniPoison.stop();

      this.freeze.visible = false;

      this.boxAniPalsy.visible = false;
      this.aniPalsy.stop();

      this.boxAniDizzy.visible = false;
      this.aniDizzy.stop();
    }
    //恢复生命

  }, {
    key: "hpRecoverEffect",
    value: function hpRecoverEffect(value) {
      value = Math.round(value);
      this.boxAniHp.visible = true;
      this.aniHp.play(0, false);
      this.HPComp.changeHP(value);
      this.showFontEffect("+" + value, "recoverHP");
    }
    //恢复或燃烧内力

  }, {
    key: "mpRecoverEffect",
    value: function mpRecoverEffect(value) {
      value = Math.round(value);
      this.boxAniMp.visible = true;
      this.aniMp.play(0, false);
      this.MPComp.changeMP(value);
      if (value > 0) {
        this.showFontEffect("+" + value, "recoverMP");
      } else {
        this.showFontEffect(value, "recoverMP");
      }
    }
    //中毒

  }, {
    key: "poisonEffect",
    value: function poisonEffect(poisonTime, hpValue) {
      if (this.attr.notPoison == 1) {
        this.showPlayerState("免疫");
        return;
      }
      this.boxAniPoison.visible = true;
      this.aniPoison.play(0, true);
      var startTime = new Date().getTime();
      var endTime = startTime + poisonTime + 1000;
      this.showPlayerState("中毒");
      Laya.timer.loop(1000, this, this.minusHp, [endTime, hpValue]);
    }
  }, {
    key: "minusHp",
    value: function minusHp(endTime, hpValue) {
      if (new Date().getTime() > endTime || _GameControl2.default.instance.gameState == "over") {
        //游戏结束时候去除毒
        this.removePoison();
        return;
      }
      var showText = hpValue > 0 ? "中毒+" + hpValue : "中毒" + hpValue;
      this.showFontEffect(showText, "poision");
      this.HPComp.changeHP(hpValue);
      if (this.HPComp.curHP <= 0 && !this.killed) {
        console.error('--------中毒死亡结束--------');
        //关掉所有定时器，比如中毒
        this.removePoison();
        this.killed = true;
        this.skeleton.play("death", false);
        _GameControl2.default.instance.deathHandler(this.isSelf);
        return;
      }
    }
    /*  */

  }, {
    key: "becomeDevil",
    value: function becomeDevil(hpValue) {
      this.HPComp.changeHP(hpValue);
      if (this.HPComp.curHP <= 0 && !this.killed) {
        console.error('--------走火入魔结束--------');
        this.killed = true;
        this.skeleton.play("death", false);
        _GameControl2.default.instance.deathHandler(this.isSelf);
      }
    }
  }, {
    key: "halfHP",
    value: function halfHP() {
      this.HPComp.halfHP();
    }
  }, {
    key: "removePoison",
    value: function removePoison() {
      Laya.timer.clear(this, this.minusHp);
      this.boxAniPoison.visible = false;
      this.aniPoison.stop();
    }
    //x眩晕

  }, {
    key: "dizzyEffect",
    value: function dizzyEffect(dizzyTime) {
      if (this.attr.notDizzy == 1) {
        this.showPlayerState("免疫");
        return;
      }
      console.log("------dizzy-------");
      this.canAction = false;
      this.dizzyState = true;
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsLock();
      }
      this.boxAniDizzy.visible = true;
      this.aniDizzy.play(0, true);
      this.skeleton.play('dizzy', true);
      this.showPlayerState("晕眩");
      Laya.timer.once(dizzyTime, this, this.removeDizzy);
    }
  }, {
    key: "removeDizzy",
    value: function removeDizzy() {
      console.log("------remove dizzy-------");
      if (!this.freezeState && !this.plasyState) {
        this.canAction = true;
        this.skeleton.play('stand', true);
      }
      this.dizzyState = false;
      if (this.isSelf) {
        //  Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.boxAniDizzy.visible = false;
      this.aniDizzy.stop();
    }
    //麻痹

  }, {
    key: "palsyEffect",
    value: function palsyEffect(palsyTime) {
      if (this.attr.notPalsy == 1) {
        this.showPlayerState("免疫");
        return;
      }
      console.log("------palsy-------");
      this.plasyState = true;
      this.canAction = false;
      if (this.isSelf) {
        // Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.boxAniPalsy.visible = true;
      this.aniPalsy.play(0, true);
      this.skeleton.play('freeze', true);
      this.showPlayerState("麻痹");
      Laya.timer.once(palsyTime, this, this.removePalsy);
    }
  }, {
    key: "removePalsy",
    value: function removePalsy() {
      console.log("------remove palsy-------");
      if (!this.freezeState && !this.dizzyState) {
        this.canAction = true;
        this.skeleton.play('stand', true);
      }
      this.plasyState = false;
      if (this.isSelf) {
        //  Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.boxAniPalsy.visible = false;
      this.aniPalsy.stop();
    }
    //冰冻

  }, {
    key: "freezedEffect",
    value: function freezedEffect() {
      var freezeTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3000;

      if (this.attr.notFrozen == 1) {
        this.showPlayerState("免疫");
        return;
      }
      console.log("------freeze-------");
      this.canAction = false;
      this.freezeState = true;
      if (this.isSelf) {
        // Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.freeze.visible = true;
      this.skeleton.play('freeze', true);
      this.freeze.play('freeze', false);
      this.showPlayerState("冰冻");
      Laya.timer.once(freezeTime, this, this.removeFreeze);
    }
  }, {
    key: "removeFreeze",
    value: function removeFreeze() {
      console.log("------remove freeze-------");
      if (!this.plasyState && !this.dizzyState) {
        this.canAction = true;
        this.skeleton.play('stand', true);
      }
      this.freezeState = false;
      if (this.isSelf) {
        // Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.freeze.visible = false;
    }
    //龙的效果

  }, {
    key: "dragonEffect",
    value: function dragonEffect() {
      var freezeTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3000;

      this.canAction = false;
      this.freezeStateDragon = true;
      if (this.isSelf) {
        // Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.skeleton.play('freeze', true);
      Laya.timer.once(freezeTime, this, this.removeDragonEffect);
    }
  }, {
    key: "removeDragonEffect",
    value: function removeDragonEffect() {
      console.log("------remove freeze-------");
      this.freezeStateDragon = false;
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsUnlock();
      }
      if (!this.plasyState && !this.freezeState && !this.dizzyState && !this.killed) {
        this.canAction = true;
        this.skeleton.play('stand', true);
      }
    }
    //闪避技能

  }, {
    key: "dodgeEffect",
    value: function dodgeEffect() {
      this.sectionAni = 1;
      this.dodge = true; //闪避无敌状态
      this.owner.zOrder = 100;
      this.skeleton.play('dodge1', false);
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsLock();
      }
    }
  }, {
    key: "removeDodge",
    value: function removeDodge() {
      this.owner.zOrder = 20;
      this.sectionAni = 0;
      this.dodge = false;
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsUnlock();
      }
    }
  }, {
    key: "changePerMp",
    value: function changePerMp(time, valuePer) {
      this.MPComp.changePerMP(this.MPComp.perAddMP * valuePer);
      Laya.timer.once(time, this, this.recoverPerMp);
    }
  }, {
    key: "recoverPerMp",
    value: function recoverPerMp() {
      this.MPComp.changePerMP(this.MPComp.originPerAddMP);
    }
  }, {
    key: "showPlayerState",
    value: function showPlayerState(value) {
      var lblState = Laya.Pool.getItemByClass('effectState', Laya.Label);
      this.lblState = lblState;
      lblState.text = value;
      /*   hurt.fontSize = 100;  */
      lblState.font = "playerState";
      lblState.alpha = 1;
      lblState.leading = 30;
      var endPos = void 0;
      var targetScaleX = void 0;
      if (this.isSelf) {
        lblState.scaleX = 1.5;
        targetScaleX = 1;
      } else {
        lblState.scaleX = -1.5;
        targetScaleX = -1;
      }
      lblState.scaleY = 1.5;
      endPos = {
        y: -60
      };
      lblState.y = 60;
      lblState.pivot(lblState.width / 2, lblState.height / 2);
      lblState.x = this.centerX;
      this.owner.addChild(lblState);

      var tween = new Laya.Tween();
      tween.to(lblState, {
        y: endPos.y
      }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function (item) {
        item.removeSelf();
        Laya.Pool.recover('effectLabel', item);
      }, [lblState]));
    }
    /* value 有可能是文字或者數字 注意*/

  }, {
    key: "showFontEffect",
    value: function showFontEffect(value, type) {
      var hurt = Laya.Pool.getItemByClass('effectLabel', Laya.Label);
      this.hurt = hurt;
      hurt.text = value;
      /*   hurt.fontSize = 100;  */
      hurt.font = type;
      hurt.alpha = 1;
      hurt.leading = 30;
      var endPos = void 0;
      var targetScaleX = void 0;
      if (this.isSelf) {
        hurt.scaleX = 2.5;
        targetScaleX = 1;
      } else {
        hurt.scaleX = -2.5;
        targetScaleX = -1;
      }
      hurt.scaleY = 2.5;
      endPos = {
        y: -60
      };
      hurt.y = 40;
      hurt.pivot(hurt.width / 2, hurt.height / 2);
      hurt.x = this.centerX;
      this.owner.addChild(hurt);

      var duration = 600;
      if (type == "recoverMP") {
        duration = 1000;
        endPos.y = -100;
      } else if (type == "recoverHP") {
        duration = 800;
        endPos.y = -140;
      }
      var tween = new Laya.Tween();
      tween.to(hurt, {
        y: endPos.y,
        scaleX: targetScaleX,
        scaleY: 1
      }, duration, Laya.Ease.linearIn, Laya.Handler.create(this, function (item) {
        item.removeSelf();
        Laya.Pool.recover('effectLabel', item);
      }, [hurt]));
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      //对象回收的时候把冰冻效果去除
      if (this.freezeState) {
        this.removeFreeze();
      }
      Laya.Pool.recover("player", this.owner);
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {
      this.skeleton.off(Laya.Event.STOPPED, this);
      this.skeleton.off(Laya.Event.LABEL, this);
    }
  }]);

  return Player;
}(PaoYa.Component);

exports.default = Player;

},{"../GameControl":4,"../config/HeroConfig":10}],30:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PlayerSkill = function (_PaoYa$Component) {
    _inherits(PlayerSkill, _PaoYa$Component);

    /** @prop {name:imgBg,tips:"背景图",type:Node} */
    /** @prop {name:lblState,tips:"人物状态",type:Node} */
    function PlayerSkill() {
        _classCallCheck(this, PlayerSkill);

        return _possibleConstructorReturn(this, (PlayerSkill.__proto__ || Object.getPrototypeOf(PlayerSkill)).call(this));
    }

    _createClass(PlayerSkill, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            //this.tweenText = new Laya.Tween();
            this.tweenImg = new Laya.Tween();
            this.timeLine = new Laya.TimeLine();
            this.lblState.font = "playerSkill";
            this.timeLine.to(this.lblState, {
                scaleX: 1.5,
                scaleY: 1.5
            }, 500, Laya.Ease.backOut, null).to(this.owner, {
                alpha: 0
            }, 300, null, 800);
            this.timeLine.on('complete', this, function () {
                _this2.owner.visible = false;
            });
        }
    }, {
        key: "setSkillText",
        value: function setSkillText(value) {
            this.owner.visible = true;
            this.imgBg.alpha = 0;
            /*  console.log(this.imgBg) */
            this.owner.alpha = 1;
            this.lblState.text = value;
            //this.owner.scale(5,5);
            this.lblState.scale(5, 5);
            this.tweenImg.complete();
            /*   this.tweenText.complete(); */
            this.tweenImg.to(this.imgBg, {
                alpha: 1
            }, 500);
            /*    this.tweenText.to(this.lblState,{scaleX:1.5,scaleY:1.5},500,Laya.Ease.backOut,Laya.Handler.create(this,()=>{
                   this.tweenText.to(this.owner,{alpha:0},300,null,Laya.Handler.create(this,()=>{
                       this.owner.visible=false;
                  }),800); 
               }))   */
            //  this.timeLine._complete();
            this.timeLine.play(0, false);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.tweenImg && this.tweenImg.clear();
            this.tweenImg = null;
            this.timeLine && this.timeLine.destroy();
            this.timeLine = null;
        }
    }]);

    return PlayerSkill;
}(PaoYa.Component);

exports.default = PlayerSkill;

},{}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
   value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PlayerState = function (_PaoYa$Component) {
   _inherits(PlayerState, _PaoYa$Component);

   /** @prop {name:lblState,tips:"人物状态",type:Node} */
   function PlayerState() {
      _classCallCheck(this, PlayerState);

      return _possibleConstructorReturn(this, (PlayerState.__proto__ || Object.getPrototypeOf(PlayerState)).call(this));
   }

   _createClass(PlayerState, [{
      key: "onAwake",
      value: function onAwake() {
         // this.tween = new Laya.Tween();
      }
   }, {
      key: "setStateText",
      value: function setStateText(value) {
         this.owner.visible = true;
         this.lblState.text = value;
         this.lblState.font = "playerState";
         // this.owner.alpha=1;
         /*  this.tween.complete();
          this.tween.to(this.owner,{alpha:1},1000,null,Laya.Handler.create(this,()=>{
             this.owner.visible=false;
          })); */
         Laya.timer.clear(this, this.hide);
         Laya.timer.once(500, this, this.hide);
      }
   }, {
      key: "hide",
      value: function hide() {
         this.owner.visible = false;
      }
   }, {
      key: "onDisable",
      value: function onDisable() {}
   }, {
      key: "onDestroy",
      value: function onDestroy() {
         /*  this.tween&&this.tween.destroy();
          this.tween=null; */
      }
   }]);

   return PlayerState;
}(PaoYa.Component);

exports.default = PlayerState;

},{}],32:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RobotSkill = function () {
    function RobotSkill(skillConfig) {
        _classCallCheck(this, RobotSkill);

        console.log('机器人技能1111:', skillConfig);
        this._id = 0;
        this.limit = 0;
        this.lifeValue = 0;
        this.cdTime = 0;

        // this.perTime=0;

        this.timeOK = true;
        this.perTimeOK = true;
        /* this.lefeOK=true;  */

        this.initSkill(skillConfig);
    }

    _createClass(RobotSkill, [{
        key: 'initSkill',
        value: function initSkill(skillConfig) {
            console.log('\u521D\u59CB\u5316\u673A\u5668\u4EBA\u6280\u80FD');
            this.freezeing = false;
            this.skillId = skillConfig.skillId;
            if (skillConfig.life != undefined) {
                this.lifeValue = skillConfig.life * skillConfig.roleHp;
            }
            if (skillConfig.limit != undefined) {
                this.limit = skillConfig.limit;
            }
            if (skillConfig.cd != undefined) {
                this.cdTime = skillConfig.cd * 1000;
            }
            if (skillConfig.btime != undefined) {
                this.timeOK = false;
                Laya.timer.once(skillConfig.btime * 1000, this, this.changeTimeStatus);
            }
            if (skillConfig.perTime != undefined) {
                //this.perTime=skillConfig.perTime  
                this.perTimeOK = false;
                Laya.timer.loop(skillConfig.perTime * 1000, this, this.changePerTimeStatus);
            }
            if (skillConfig.name != undefined) {
                //this.perTime=skillConfig.perTime  
                this.name = skillConfig.name;
            }
            //  this.lifeValue=null;/* 生命限制条件 */
            return this;
        }
    }, {
        key: 'getSkill',
        value: function getSkill() {
            if (this.freezeing) {
                return false;
            }
            return true;
        }
    }, {
        key: 'setCdTime',
        value: function setCdTime(cdTime) {
            if (cdTime == 0) {
                console.log('\u6280\u80FD\u65E0cd\u72B6\u6001');
            } else {
                console.warn('修改机器人cd时间:', cdTime);
            } //cd 时间
            this.cdTime = cdTime;
        }
    }, {
        key: 'startCd',
        value: function startCd() {
            if (this.cdTime != 0) {
                this.freezeing = true;
            }
            Laya.timer.once(this.cdTime, this, this.changeSkillStatus);
        }
    }, {
        key: 'changeSkillStatus',
        value: function changeSkillStatus() {
            this.freezeing = true;
        }
    }, {
        key: 'changeTimeStatus',
        value: function changeTimeStatus() {
            this.timeOK = true;
        }
    }, {
        key: 'changePerTimeStatus',
        value: function changePerTimeStatus() {
            var _this = this;

            this.perTimeOK = true;
            Laya.timer.once(1000, this, function () {
                _this.perTimeOK = false;
            });
        }
    }, {
        key: 'clear',
        value: function clear() {}
    }], [{
        key: 'create',
        value: function create(skillConfig) {
            if (RobotSkill._pool.length) return RobotSkill._pool.pop().initSkill(skillConfig);
            return new RobotSkill(skillConfig);
        }
    }]);

    return RobotSkill;
}();

exports.default = RobotSkill;

RobotSkill._pool = [];
RobotSkill._gid = 1;

/*  */

},{}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Skill = function (_PaoYa$Component) {
    _inherits(Skill, _PaoYa$Component);

    /* @prop {name:spSkill,tips:"技能精灵图",type:Node} */
    /* @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    /* @prop {name:lblLockTips,tips:"解锁等级提示",type:Node} */
    function Skill() {
        _classCallCheck(this, Skill);

        return _possibleConstructorReturn(this, (Skill.__proto__ || Object.getPrototypeOf(Skill)).call(this));
    }

    _createClass(Skill, [{
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick() {
            this.clickHandler();
        }
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            if (_GameControl2.default.instance.gameState != "start") {
                _GameControl2.default.instance.showTips("游戏未开始");
                return;
            }
            if (_GameControl2.default.instance.isSkilling) {
                console.error("-----\u6280\u80FD\u4E92\u65A5-----");
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            this.postNotification(Skill.CLICK, [this.owner.name, true]);
        }
    }, {
        key: "init",
        value: function init(params) {
            var _this2 = this;

            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.centerX = Math.floor(this.ownW / 2);
            this.centerY = Math.floor(this.ownH / 2);
            this.maskArea = new Laya.Sprite();
            // this.spSkill.texture=``;
            //  this.maskArea.texture=``;
            Laya.loader.load("local/common/" + params.skillId + ".png", Laya.Handler.create(this, function () {
                _this2.spSkill.texture = "local/common/" + params.skillId + ".png";
                _this2.maskArea.texture = "local/common/" + params.skillId + ".png";
            }));
            owner.addChild(this.maskArea);

            this.spMask = new Laya.Sprite();
            //  this.maskArea.mask = this.spMask;
            //  this.spMask.graphics.clear();

            this.freezeing = false;
            this.maxAngle = 270;
            this.startAngle = -90;
            this.endAngle = -90;

            this.cdTime = params.skillCd * 1000;
            if (!params.status) {
                this.lblLockTips.visible = true;
                this.lblLockTips.font = 'weaponNFontT';
                this.lblLockTips.text = "LV." + params.skillUnlock + "\u89E3\u9501";
                this.spShadow.visible = true;
                this.lblLockTips.scale(0.5, 0.5);
                this.lblLockTips.zOrder = 1000;
                this.owner.disabled = true;
            } else {
                this.spShadow.visible = false;
                this.lblLockTips.visible = false;
            }
        }
    }, {
        key: "setCdTime",
        value: function setCdTime(cdTime) {
            console.warn('修改cd时间:', cdTime);
            //cd 时间
            this.cdTime = cdTime;
        }
    }, {
        key: "startT",
        value: function startT(time) {
            this.freezeing = true;
            this.beiginTime = new Date().getTime();
            this.spMask.graphics.clear();
            //很关键，每次点击先滞空
            this.maskArea.mask = null;
            this.maskArea.mask = this.spMask;
            this.spMask.graphics.drawPie(this.centerX, this.centerY, this.ownW, this.startAngle, this.endAngle, "#000000");
            this.spShadow.visible = true; //要在重新画好遮罩后显示
            this.maskArea.visible = true;

            var cdT = time == undefined ? this.cdTime : time;
            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.centerX, this.centerY, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
    }]);

    return Skill;
}(PaoYa.Component);

exports.default = Skill;

Skill.CLICK = "skillClick";

},{"../GameControl":4}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _SoundManager = require("../SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponAniType;
(function (WeaponAniType) {
  WeaponAniType[WeaponAniType["aniRepeat1"] = 43] = "aniRepeat1";
  WeaponAniType[WeaponAniType["aniRepeat2"] = 44] = "aniRepeat2";
  WeaponAniType[WeaponAniType["aniPoison1"] = 45] = "aniPoison1";
  WeaponAniType[WeaponAniType["aniPoison2"] = 46] = "aniPoison2";
  WeaponAniType[WeaponAniType["aniCrit1"] = 47] = "aniCrit1";
  WeaponAniType[WeaponAniType["aniCrit2"] = 48] = "aniCrit2";
  WeaponAniType[WeaponAniType["aniBlood"] = 53] = "aniBlood";
  WeaponAniType[WeaponAniType["aniBlue"] = 54] = "aniBlue";
  WeaponAniType[WeaponAniType["aniReduce"] = 55] = "aniReduce";
  WeaponAniType[WeaponAniType["aniThump1"] = 56] = "aniThump1";
  WeaponAniType[WeaponAniType["aniThump2"] = 57] = "aniThump2";
  WeaponAniType[WeaponAniType["aniFreeze"] = 59] = "aniFreeze";
  WeaponAniType[WeaponAniType["aniThump3"] = 61] = "aniThump3";
  WeaponAniType[WeaponAniType["aniPetrifie"] = 62] = "aniPetrifie";
  WeaponAniType[WeaponAniType["aniHero1"] = 88] = "aniHero1";
  WeaponAniType[WeaponAniType["aniHero2"] = 89] = "aniHero2";
  WeaponAniType[WeaponAniType["aniHero3"] = 90] = "aniHero3";
})(WeaponAniType || (WeaponAniType = {}));

var Weapon = function (_PaoYa$Component) {
  _inherits(Weapon, _PaoYa$Component);

  /** @prop {name:imgWeapon,tips:"四个点",type:Node}*/
  /** @prop {name:boxAniWeapon,tips:"武器碰撞动效Box",type:Node}*/
  /** @prop {name:boxAniCollision,tips:"武器碰撞动效",type:Node}*/
  /** @prop {name:boxHpWeapon,tips:"武器的血条",type:Node}*/
  /** @prop {name:imgHpMask,tips:"武器血条mask",type:Node}*/
  /** @prop {name:imgHp,tips:"武器血条图片",type:Node}*/
  /** @prop {name:aniCrit1,tips:"致命特效",type:Node}*/
  /** @prop {name:aniCrit2,tips:"诛心特效",type:Node}*/
  /** @prop {name:aniPoison1,tips:"浸毒特效",type:Node}*/
  /** @prop {name:aniPoison2,tips:"奇毒特效",type:Node}*/
  /** @prop {name:aniRepeat1,tips:"双刃特效",type:Node}*/
  /** @prop {name:aniRepeat2,tips:"影刃特效",type:Node}*/
  /** @prop {name:aniBlood,tips:"嗜血特效",type:Node}*/
  /** @prop {name:aniBlue,tips:"嗜魔特效",type:Node}*/
  /** @prop {name:aniReduce,tips:"气绝特效",type:Node}*/

  /** @prop {name:aniThump1,tips:"重击特效",type:Node}*/
  /** @prop {name:aniThump2,tips:"碎石特效",type:Node}*/
  /** @prop {name:aniThump3,tips:"斩皇特效",type:Node}*/
  /** @prop {name:aniFreeze,tips:"冰心特效",type:Node}*/
  /** @prop {name:aniPetrifie,tips:"石化特效",type:Node}*/
  /** @prop {name:aniHero1,tips:"人物1技能2特效",type:Node}*/
  /** @prop {name:aniHero2,tips:"人物2技能2特效",type:Node}*/
  /** @prop {name:aniHero3,tips:"人物3技能2特效",type:Node}*/

  function Weapon() {
    _classCallCheck(this, Weapon);

    var _this = _possibleConstructorReturn(this, (Weapon.__proto__ || Object.getPrototypeOf(Weapon)).call(this));

    _this.pathsCurvature = [0, 0, 0.0008, 0.0015, 0.0025];
    _this.speedsArr = [0, 680 / 100, 680 / 80, 680 / 100, 680 / 80];
    return _this;
  }

  _createClass(Weapon, [{
    key: "onAwake",
    value: function onAwake() {
      this.tween = new Laya.Tween();

      //添加碰撞体
      var collideSp = new Laya.Sprite();
      this.collideSp = collideSp;
      this.imgWeapon.addChild(collideSp);

      /* 抛物线公式 */
      this.startPos = {
        x: 180,
        y: 450
      };
      this.endPos = {
        x: 1150,
        y: 450
        // X轴Y轴的偏移总量
      };this.driftX = this.endPos.x - this.startPos.x;
      this.driftY = this.endPos.y - this.startPos.y;
    }

    //可能执行多次

  }, {
    key: "onEnable",
    value: function onEnable() {

      this.params = this.owner.params;

      if (this.params.weaponType != 1) {
        this.rotateAngle = 360;
      }
      this.firstAngle = undefined;
      //初始化
      this.imgWeapon.alpha = 1;
      this.imgWeapon.scaleX = 1;
      this.imgWeapon.scaleY = 1;

      this.effectAni = false; //兵器是否在做碰撞动效
      this.boxAniWeapon.visible = false;

      //武器图片 
      this.imgWeapon.skin = "remote/weapons/" + this.params.weaponId + ".png";
      this.weaponAttack = this.params.weaponAttack; //武器攻击力
      this.weaponDurable = this.params.weaponDurable;
      this.owner.zOrder = 100 - this.weaponDurable;
      var imgW = this.imgWeapon.width,
          imgH = this.imgWeapon.height;

      this.imgWeapon.pivot(imgW / 2, imgH / 2); //图片的位置
      var x = this.imgWeapon.x,
          y = this.imgWeapon.y,
          skillX = -Math.floor(imgW / 2);
      this.boxAniWeapon.pos(x, y); //碰撞动效的位置
      this.aniPoison1.pos(x, y);
      this.aniPoison2.pos(skillX, y);
      //  this.boxAniCrit1.pos(x,y);
      this.aniCrit1.pos(x, y);
      this.aniCrit2.pos(skillX + 5, y);
      this.aniRepeat1.pos(skillX + 5, y);
      this.aniRepeat2.pos(skillX + 5, y);

      this.aniBlood.pos(x, y);
      this.aniBlue.pos(x, y);
      this.aniReduce.pos(x, y);
      this.aniThump1.pos(x, y);
      this.aniThump2.pos(x, y);
      this.aniThump3.pos(x, y);
      this.aniPetrifie.pos(x, y);
      this.aniHero1.pos(0, y);
      this.aniHero2.pos(0, y);
      this.aniHero3.pos(0, y);
      /* this.aniPoison1.play(0,true); */
      this.collideSp.size(Math.floor(imgW * 0.2), imgH);
      var collideW = this.collideSp.width,
          collideH = this.collideSp.height;
      this.collideW = collideW;
      this.collideH = collideH;

      this.collideSp.pivot(collideW / 2, collideH / 2);
      this.collideSp.pos(imgW / 2, imgH / 2);
      //碰撞区域画图显示
      /* this.collideSp.graphics.clear();
      this.collideSp.graphics.drawRect(0, 0, collideW, collideH, '#ff0000'); */

      this.newX = 0;
      this.newY = 0;

      var speed = this.speedsArr[this.params.weaponType]; //代表 像素/帧
      this.speed = speed;
      //根据weaponType不同，运动轨迹不同,造成curvature
      this.curvature = this.pathsCurvature[this.params.weaponType];
      /*
       * 因为经过(0, 0), 因此c = 0
       * 于是：
       * y = a * x*x + b*x;
       * y1 = a * x1*x1 + b*x1;
       * y2 = a * x2*x2 + b*x2;
       * 利用第二个坐标：
       * b = (y2+ a*x2*x2) / x2
       */
      this.b = (this.driftY - this.curvature * this.driftX * this.driftX) / this.driftX;
      this.currentAni = null; //暂存当前的animation
      this.initWeaponInfo();
      //初始化血条状态
      this.initBar();
      this.initSkillEffect(); //兵器技能特效
      Laya.timer.frameLoop(1, this, this.startParabola, [speed]);
    }
  }, {
    key: "initBar",
    value: function initBar() {
      this.originHpW = this.imgHp.width;
      this.originHP = this.curHP = this.weaponDurable;
      this.boxHpWeapon.visible = false;
      this.imgHpMask.width = this.originHpW;
    }
  }, {
    key: "initSkillEffect",
    value: function initSkillEffect() {
      if (this.params.skillEffect) {
        var skillId = this.params.activeSkill.skillId;
        if (WeaponAniType[skillId]) {
          this[WeaponAniType[skillId]].visible = true;
          this[WeaponAniType[skillId]].play(0, true);
          this.currentAni = this[WeaponAniType[skillId]];
        }
      }
    }
  }, {
    key: "stopSkillEffect",
    value: function stopSkillEffect() {
      if (this.params.skillEffect) {
        var skillId = this.params.activeSkill.skillId;
        if (WeaponAniType[skillId]) {
          this[WeaponAniType[skillId]].visible = false;
          this[WeaponAniType[skillId]].stop();
          this.currentAni = null;
        }
      }
    }
  }, {
    key: "initWeaponInfo",
    value: function initWeaponInfo() {
      //暂时这么写  
      if (this.isSelf) {
        this.selfPlayerComp = _GameControl2.default.instance.selfPlayer.comp;
        this.otherPlayerComp = _GameControl2.default.instance.otherPlayer.comp;
        this.owner.scaleX = 1;
        this.startPos = {
          x: 180,
          y: 450
        };
        this.endPos = {
          x: 1150,
          y: 450
        };
      } else {
        this.selfPlayerComp = _GameControl2.default.instance.otherPlayer.comp;
        this.otherPlayerComp = _GameControl2.default.instance.selfPlayer.comp;
        this.owner.scaleX = -1;
        this.startPos = {
          x: 1150,
          y: 450
        };
        this.endPos = {
          x: 180,
          y: 450
        };
      }
      //这个是武器发射的坐标
      this.originX = this.owner.x;
      this.originY = this.owner.y;
      this.diffX = Math.abs(this.originX - this.startPos.x);
      this.beginTime = new Date().valueOf();

      this.weaponPoint = [{
        x: Math.floor(this.originX - this.collideW / 2),
        y: Math.floor(this.originY - this.collideH / 2)
      }, {
        x: Math.floor(this.originX + this.collideW / 2),
        y: Math.floor(this.originY - this.collideH / 2)
      }, {
        x: Math.floor(this.originX + this.collideW / 2),
        y: Math.floor(this.originY + this.collideH / 2)
      }, {
        x: Math.floor(this.originX - this.collideW / 2),
        y: Math.floor(this.originY + this.collideH / 2)
      }];
    }
  }, {
    key: "changeHP",
    value: function changeHP(value) {
      this.boxHpWeapon.visible = true;

      this.curHP += value;
      if (this.curHP <= 0) {
        this.curHP = 0;
        this.imgMask.width = 0;
        return;
      } else if (this.curHP > this.originHP) {
        this.curHP = this.originHP;
      }
      var w = Math.floor(this.curHP / this.originHP * this.originHpW);
      this.imgHpMask.width = w;
    }

    //开始抛物线运动

  }, {
    key: "startParabola",
    value: function startParabola(speed) {
      var now = new Date().valueOf();
      var x = void 0,
          y = void 0,
          curAngle = void 0;

      x = Math.floor((now - this.beginTime) * 0.06 * speed) + this.diffX;
      y = Math.floor(this.curvature * x * x + this.b * x);
      curAngle = Math.floor(x / this.driftX * 720);
      this.doMove(x, y, curAngle);
    }
  }, {
    key: "stopParabola",
    value: function stopParabola() {
      //console.error(`-------关闭抛物线定时器1-------`)
      Laya.timer.clear(this, this.startParabola);
    }
    //暂停动画

  }, {
    key: "pause",
    value: function pause() {
      //console.error(`--------关闭抛物线定时器2-------`)
      Laya.timer.clear(this, this.startParabola);
      this.pauseTimeNode = new Date().valueOf();
      //  this.playedTime = this.pauseTime - this.beginTime;
      this.currentAni && this.currentAni.stop();
    }
    //恢复动画

  }, {
    key: "resume",
    value: function resume() {
      var speed = this.speed;
      // this.beginTime = (new Date()).valueOf() - this.playedTime;
      this.beginTime = this.beginTime + new Date().valueOf() - this.pauseTimeNode;
      Laya.timer.frameLoop(1, this, this.startParabola, [speed]);
      this.currentAni && this.currentAni.play(0, true);
    }
    //运动

  }, {
    key: "doMove",
    value: function doMove(x, y, curAngle) {
      var _this2 = this;

      //技能未完成释放阶段不判断碰撞
      if (this.isSelf) {
        this.newX = this.startPos.x + x;
      } else {
        this.newX = this.startPos.x - x;
      }

      this.newY = this.originY + y;

      this.owner.x = this.newX;
      this.owner.y = this.newY;
      if (this.firstAngle == undefined) {
        this.firstAngle = this.getDegreeByPos(x, y, this.newX, this.newY);
      }
      if (this.params.weaponType != 1) {
        this.imgWeapon.rotation = this.firstAngle + curAngle;
      } else {
        this.imgWeapon.rotation = this.getDegreeByPos(x, y, this.newX, this.newY);
      }

      // 
      this.refreshWeaponPoint(this.newX, this.newY);
      if (this.newX > 1334 || this.newY > 750 || this.newX < 0 || this.selfPlayerComp.killed || this.otherPlayerComp.killed) {
        this.endMove();
        return;
      }

      if (this.doPolygonsIntersect(this.weaponPoint, this.otherPlayerComp.collidePoint)) {
        this.postNotification('collide');
        //如果对方闪避状态，无敌
        if (this.otherPlayerComp.dodge) {
          console.log('------无敌状态或者一方已经死亡------');
          return;
        }
        //如果roleId=4,会20%反弹兵器。不会受到暴击。
        //let targetName=this.isSelf?'other':'self';
        if (this.otherPlayerComp.attr.roleId == 4) {
          var random = Math.ceil(Math.random() * 100);
          var reboundRate = this.otherPlayerComp.attr.skills[1].skillConfig.reboundRate;
          if (random <= reboundRate) {
            //反弹提示
            _GameControl2.default.instance.showSkillText(true, "游龙入水");
            this.goBack();
            return;
          }
        }
        //如果是roleId是2
        if (this.selfPlayerComp.attr.roleId == 2) {
          console.warn('------我是龙儿------');
          if (this.selfPlayerComp.attr.skills[1].skillType == 1) {
            var addHitRecoverMp = this.selfPlayerComp.attr.skills[1].skillConfig.addHitRecoverMp;
            this.selfPlayerComp.MPComp.changeMP(addHitRecoverMp);
          }
        }
        _SoundManager2.default.ins.injured();
        this.endMove();
        var skill = this.params.activeSkill;
        var skillEffect = this.params.skillEffect;

        var _calcAttackNum = this.calcAttackNum(skillEffect),
            attackNum = _calcAttackNum.attackNum,
            isCrit = _calcAttackNum.isCrit;

        this.effectRefiner(this.selfPlayerComp.attr); //计算炼器效果
        if (skillEffect) {
          var skillConfig = skill.skillConfig,
              skillId = skill.skillId;
          //this.otherPlayerComp.injuredEffect(this.params.weaponType,-attackNum);
          switch (skillId) {
            case 45:
            case 46:
              var arr = skillConfig.poison.split('-').map(Number);
              var time = arr[0];
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.poisonEffect(time * 1000, -arr[1] / time);
              });

              break;
            //麻痹和冰冻一个效果 指的是skeleton
            case 49:
            case 50:
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.palsyEffect(skillConfig.mabi * 1000);
              });
              break;
            case 53:
              var stealHp = skillConfig.stealHp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.selfPlayerComp.hpRecoverEffect(attackNum * stealHp); //数值暂定，要算
              });
              break;
            case 54:
              var stealMp = skillConfig.stealMp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.selfPlayerComp.mpRecoverEffect(Math.ceil(attackNum * stealMp));
              });
              break;
            case 55:
              var recoverDown = skillConfig.recoverDown.split('-').map(Number);
              var recoverDownT = recoverDown[0],
                  recoverDownPer = recoverDown[1];
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, null);
              this.otherPlayerComp.changePerMp(recoverDownT * 1000, recoverDownPer);
              break;
            case 59:
              var freezeTime = skillConfig.freeze * 1000;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.freezedEffect(freezeTime);
              });
              break;
            case 89:
              console.warn('--------释放人物技能89,让对方内力减少100点--------');
              var downMP = skillConfig.downMp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, null);
              this.otherPlayerComp.MPComp.changeMP(-downMP);
              break;
            //命中后对手晕眩2秒
            case 90:
              var dizzyT = skillConfig.dizziness * 1000;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.dizzyEffect(dizzyT);
              });
              break;
            default:
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit);
              break;
          }
        } else {
          this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit);
        }
        if (this.otherPlayerComp.stealHPSkill) {
          console.error("-----\u5438\u661F\u5927\u6CD5\u52A0\u8840----", attackNum * 2);
          this.otherPlayerComp.hpRecoverEffect(attackNum * 2);
        }
        if (this.otherPlayerComp.bounceSkill && !this.otherPlayerComp.killed) {
          console.error("-----\u94C1\u5E03\u886B\u53CD\u5F39\u4F24\u5BB3----", attackNum);
          this.selfPlayerComp.injuredWithoutEffect(-attackNum, isCrit);
        }
      }

      if (this.isSelf) {
        this.collideWithWeapon();
      }
    }
    /* 
        伤害公式=兵器攻击力*（攻击方臂力-防御方根骨）/攻击方臂力*[暴伤百分比]*[1+兵器炼器伤害加成百分比]*[1+英雄技能伤害加成百分比]*（1-防御方炼器减伤百分比）*兵器技能伤害百分比
    [暴伤百分比]=角色自身暴伤百分比+兵器技能附加暴伤百分比+兵器炼器暴伤百分比
    [1+英雄技能伤害加成百分比]//不用管
    */

  }, {
    key: "calcAttackNum",
    value: function calcAttackNum(skillEffect) {
      var randomNum = Math.floor(Math.random() * 100 + 1);
      var selfAttr = this.selfPlayerComp.attr,
          otherAttr = this.otherPlayerComp.attr,
          selfStrength = selfAttr.roleStrength,
          //臂力
      roleCritHarm = selfAttr.calcCritProb,
          selfCritHarm = randomNum < roleCritHarm ? selfAttr.roleCritHarm / 100 : 1,
          otherBone = otherAttr.roleBone,

      //otherStrength=otherAttr.roleStrength,
      //兵器炼器伤害加成百分比
      refinerHurt = this.calcRefinerHurt(selfAttr),

      //减伤百分比
      otherReduceHurt = this.calcReduceHurt(otherAttr),
          hurtPer = selfStrength - otherBone < 0 ? 0.1 : (selfStrength - otherBone) / selfStrength,
          skillHurtMulti = 1;
      hurtPer = hurtPer <= 0.2 ? 0.2 : hurtPer;
      console.log("---roleBone\u6839\u9AA8---", otherBone, selfAttr.roleBone);
      if (skillEffect) {
        console.warn('--------触发技能伤害，有莫有伤害倍数不知道--------'); //技能伤害百分比
        skillHurtMulti = this.params.activeSkill.skillConfig.hurt ? this.params.activeSkill.skillConfig.hurt : 1;
      }
      var attackNum = Math.floor(this.weaponAttack * hurtPer * selfCritHarm * refinerHurt * (1 - otherReduceHurt) * skillHurtMulti);
      if (this.selfPlayerComp.attr.roleId == 3 && _GameControl2.default.instance.heroSkill2) {
        //杨过 九圣真经触发
        console.log("-----\u4F24\u5BB3\u52A030%---------");
        attackNum = attackNum * 1.3;
      }
      return {
        attackNum: attackNum,
        isCrit: randomNum < roleCritHarm
      };
    }
  }, {
    key: "effectRefiner",
    value: function effectRefiner(selfAttr) {
      if (!selfAttr.refiners) {
        return;
      }
      var len = selfAttr.refiners.length;
      var refiners = selfAttr.refiners;
      for (var i = 0; i < len; i++) {
        if (this.weaponType == refiners[i].refinerBasics.weaponType) {
          if (refiners[i].id == "refiner_12") {
            var hitRecoveHp = refiners[i].refinerBasics.hitRecoveHp;
            this.selfPlayerComp.hpRecoverEffect(hitRecoveHp);
          } else if (refiners[i].id == "refiner_13") {
            var hitRivalDownMp = refiners[i].refinerBasics.hitRivalDownMp;
            this.otherPlayerComp.mpRecoverEffect(-hitRivalDownMp);
          } else if (refiners[i].id == "refiner_14") {
            //有几率晕眩三秒
            var random = Math.round(Math.random() * 100);
            if (random <= refiners[i].refinerBasics.dizzinessRate) {
              console.log("----------\u4F7F\u5BF9\u624B\u6655\u7729\u4E09\u79D2----------");
              // this.otherPlayerComp.dizzyEffect(3000);
            }
          }
        }
      }
    }
  }, {
    key: "calcRefinerHurt",
    value: function calcRefinerHurt(selfAttr) {
      console.log("------\u8BA1\u7B97\u70BC\u5668\u4F24\u5BB3\u767E\u5206\u6BD4------");
      var refinerHurt = 1;
      if (!selfAttr.refiners) {
        return refinerHurt;
      }
      var len = selfAttr.refiners.length;
      var refiners = selfAttr.refiners;
      for (var i = 0; i < len; i++) {
        if (refiners[i].refinerBasics.hurt) {
          if (this.weaponType == refiners[i].refinerBasics.weaponType) {
            return refiners[i].refinerBasics.hurt;
          }
        }
      }
      return refinerHurt;
    }
  }, {
    key: "calcReduceHurt",
    value: function calcReduceHurt(otherAttr) {
      var otherReduceHurt = 0;
      if (!otherAttr.refiners) {
        return otherReduceHurt;
      }
      var len = otherAttr.refiners.length;
      var refiners = otherAttr.refiners;
      for (var i = 0; i < len; i++) {
        if (refiners[i].refinerBasics.reduceHurt) {
          console.warn("------\u9632\u5FA1\u65B9\u70BC\u5668\u51CF\u4F24\u767E\u5206\u6BD4------", refiners[i].refinerBasics.reduceHurt);
          return refiners[i].refinerBasics.reduceHurt;
        }
      }
      return otherReduceHurt;
    }
    //兵器反弹

  }, {
    key: "goBack",
    value: function goBack() {
      _GameControl2.default.instance.removeWeapon(this);
      this.isSelf = !this.isSelf;
      _GameControl2.default.instance.selfWeapons.push(this);
      this.owner.pos(280, 450); //重置成初始发射位置
      this.initWeaponInfo();
    }
    //根据抛物线的点求角度和计算矩形四个位置

  }, {
    key: "getDegreeByPos",
    value: function getDegreeByPos(x, y, newX, newY) {
      var ratio = 2 * this.curvature * x + this.b;
      var degree = Math.round(180 * Math.atan(ratio) / Math.PI);
      return degree;
    }
  }, {
    key: "refreshWeaponPoint",
    value: function refreshWeaponPoint(newX, newY) {
      var ratio = this.imgWeapon.rotation * Math.PI / 360;;
      this.weaponPoint = this.CalcCoord(newX, newY, this.collideW, this.collideH, ratio);
    }

    /* 
    x2 = x0+(x-x0)*cos(theta)+(y-y0)*sin(theta)
    y2 = y0-(x-x0)*sin(theta)+(y-y0)*cos(theta)
    (x0,y0) is the center around which you are rotating
    */
    //根据旋转角度求   

  }, {
    key: "CalcCoord",
    value: function CalcCoord(centerX, centerY, rw, rh, radians) {
      var x1 = -rw / 2 + centerX,
          x2 = rw / 2 + centerX,
          x3 = rw / 2 + centerX,
          x4 = -rw / 2 + centerX,
          y1 = -rh / 2 + centerY,
          y2 = -rh / 2 + centerY,
          y3 = rh / 2 + centerY,
          y4 = rh / 2 + centerY;

      var x11 = (x1 - centerX) * Math.cos(radians) - (y1 - centerY) * Math.sin(radians) + centerX,
          y11 = (x1 - centerX) * Math.sin(radians) + (y1 - centerY) * Math.cos(radians) + centerY,
          x21 = (x2 - centerX) * Math.cos(radians) - (y2 - centerY) * Math.sin(radians) + centerX,
          y21 = (x2 - centerX) * Math.sin(radians) + (y2 - centerY) * Math.cos(radians) + centerY,
          x31 = (x3 - centerX) * Math.cos(radians) - (y3 - centerY) * Math.sin(radians) + centerX,
          y31 = (x3 - centerX) * Math.sin(radians) + (y3 - centerY) * Math.cos(radians) + centerY,
          x41 = (x4 - centerX) * Math.cos(radians) - (y4 - centerY) * Math.sin(radians) + centerX,
          y41 = (x4 - centerX) * Math.sin(radians) + (y4 - centerY) * Math.cos(radians) + centerY;
      return [{
        x: Math.round(x11),
        y: Math.round(y11)
      }, {
        x: Math.round(x21),
        y: Math.round(y21)
      }, {
        x: Math.round(x31),
        y: Math.round(y31)
      }, {
        x: Math.round(x41),
        y: Math.round(y41)
      }];
    }
  }, {
    key: "collideWithWeapon",
    value: function collideWithWeapon() {
      //GameControl.instance.selfWeapons.forEach((weaponComp,index)=>{
      for (var i = 0; i < _GameControl2.default.instance.otherWeapons.length; i++) {
        var otherWeapon = _GameControl2.default.instance.otherWeapons[i];
        if (!this.effectAni && !otherWeapon.effectAni && this.weaponType == otherWeapon.weaponType) {
          if (this.doPolygonsIntersect(this.weaponPoint, otherWeapon.weaponPoint)) {
            /*   console.log(this.owner.x);
              console.log(this.weaponPoint,otherWeapon.weaponPoint)
              let sprite=new Laya.Sprite();
              GameControl.instance.owner.addChild(sprite);
              sprite.pos(this.weaponPoint[0].x,this.weaponPoint[0].y)
              sprite.size(this.collideW,this.collideH)
              sprite.graphics.clear();
              sprite.graphics.drawRect(0,0,this.collideW,this.collideH,"yellow")
              this.stopParabola();
              otherWeapon.stopParabola()
              return; */
            _SoundManager2.default.ins.collide();
            this.postNotification('weaponsCollide');
            if (this.weaponDurable > otherWeapon.weaponDurable) {
              otherWeapon.playWeaponCollideEffect();
              this.weaponDurable -= otherWeapon.weaponDurable;
              this.owner.zOrder = 100 - this.weaponDurable;
              this.changeHP(-otherWeapon.weaponDurable);
              i -= 1;
            } else if (this.weaponDurable < otherWeapon.weaponDurable) {
              this.playWeaponCollideEffect();
              otherWeapon.weaponDurable -= this.weaponDurable;
              otherWeapon.owner.zOrder = 100 - this.weaponDurable;
              otherWeapon.changeHP(-this.weaponDurable);
              break;
              // i-=1;
            } else {
              this.playWeaponCollideEffect();
              otherWeapon.endMove();
              break;
            }
          }
        }
      }
    }
  }, {
    key: "playWeaponCollideEffect",
    value: function playWeaponCollideEffect() {
      var _this3 = this;

      this.boxAniWeapon.visible = true;
      this.boxHpWeapon.visible = false;
      this.effectAni = true;
      // this.imgWeapon.visible=false;
      //兵器上带技能的隐藏
      this.stopSkillEffect();
      this.stopParabola();
      this.tween.to(this.imgWeapon, {
        scaleX: 1.5,
        scaleY: 1.5,
        alpha: 0.3
      }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
        // console.log('变大效果播放完', new Date().getTime());
        _this3.endMove();
      }));
      this.boxAniCollision.play(0, false);
    }
  }, {
    key: "doPolygonsIntersect",
    value: function doPolygonsIntersect(a, b) {
      var polygons = [a, b];
      var minA, maxA, projected, i, i1, j, minB, maxB;

      for (i = 0; i < polygons.length; i++) {

        // for each polygon, look at each edge of the polygon, and determine if it separates
        // the two shapes
        var polygon = polygons[i];
        for (i1 = 0; i1 < polygon.length; i1++) {

          // grab 2 vertices to create an edge
          var i2 = (i1 + 1) % polygon.length;
          var p1 = polygon[i1];
          var p2 = polygon[i2];

          // find the line perpendicular to this edge
          var normal = {
            x: p2.y - p1.y,
            y: p1.x - p2.x
          };

          minA = maxA = undefined;
          // for each vertex in the first shape, project it onto the line perpendicular to the edge
          // and keep track of the min and max of these values
          for (j = 0; j < a.length; j++) {
            projected = normal.x * a[j].x + normal.y * a[j].y;
            if (!minA || projected < minA) {
              minA = projected;
            }
            if (!maxA || projected > maxA) {
              maxA = projected;
            }
          }

          // for each vertex in the second shape, project it onto the line perpendicular to the edge
          // and keep track of the min and max of these values
          minB = maxB = undefined;
          for (j = 0; j < b.length; j++) {
            projected = normal.x * b[j].x + normal.y * b[j].y;
            if (!minB || projected < minB) {
              minB = projected;
            }
            if (!maxB || projected > maxB) {
              maxB = projected;
            }
          }

          // if there is no overlap between the projects, the edge we are looking at separates the two
          // polygons, and we know there is no overlap
          if (maxA < minB || maxB < minA) {
            //   console.log("polygons don't intersect!");
            return false;
          }
        }
      }
      return true;
    }
  }, {
    key: "endMove",
    value: function endMove() {
      this.stopSkillEffect();
      this.stopParabola();
      this.owner.removeSelf();
      _GameControl2.default.instance.removeWeapon(this);
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      Laya.Pool.recover("weapon", this.owner);
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {}
  }]);

  return Weapon;
}(PaoYa.Component);

exports.default = Weapon;

},{"../GameControl":4,"../SoundManager":8}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponBar = function (_PaoYa$Component) {
    _inherits(WeaponBar, _PaoYa$Component);

    /** @prop {name:spWeapon,tips:"武器图片",type:Node} */
    /** @prop {name:imgQuality,tips:"代表武器品质的背景",type:Node} */
    /** @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    /** @prop {name:imgType,tips:"武器类型图片",type:Node} */
    /** @prop {name:lblGrade,tips:"武器等级",type:Node} */
    /** @prop {name:boxAniWarn,tips:"animation box",type:Node} */
    /** @prop {name:aniWarn,tips:"冷却完发光animation",type:Node} */
    function WeaponBar() {
        _classCallCheck(this, WeaponBar);

        return _possibleConstructorReturn(this, (WeaponBar.__proto__ || Object.getPrototypeOf(WeaponBar)).call(this));
    }

    _createClass(WeaponBar, [{
        key: "onAwake",
        value: function onAwake() {
            /*   console.log("WeaponBar awake.....")
              console.log(this.owner.params); */
            // this.params=this.owner.params;

            //初始化数值。冷却时间
            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.boxAniWarn.pos(this.ownW / 2, this.ownH / 2);
            // this.aniWarn.play(0,true)
            //  owner.on(Laya.Event.CLICK, this, this.clickHandler);

            this.spMask = new Laya.Sprite();
            this.maskArea = new Laya.Sprite();

            this.maskArea.texture = "remote/game/frameBg.png";

            owner.addChild(this.maskArea);
            this.maskArea.mask = this.spMask;
            this.maskArea.visible = false;

            this.maxAngle = 270;
            this.endAngle = -90;
            this.startAngle = -90;
            this.freezeing = false;
        }
        //预防连续多次点击,来不及cd

    }, {
        key: "onThrottleClick",
        value: function onThrottleClick() {
            this.clickHandler();
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.cdTime = this.params.weaponCd * 1000;
            this.originCdTime = this.cdTime;

            this.weaponConsume = this.params.weaponConsume; //使用一次要消耗的体力值

            this.initView();
        }
        //根据武器参数，初始化视图

    }, {
        key: "initView",
        value: function initView() {
            var skin = "remote/small_weapons/s_" + this.params.weaponId + ".png";
            this.spWeapon.texture = skin;
            this.maskArea.graphics.drawTexture(Laya.loader.getRes(skin), 0, 0, this.ownW, this.ownH);
            this.imgQuality.skin = "remote/game/quality_" + this.params.weaponStar + ".png";
            this.imgType.skin = "remote/game/type_" + this.params.weaponType + ".png";
            if (this.params.weaponLevel) {
                this.lblGrade.text = "LV." + this.params.weaponLevel;
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "clickHandler",
        value: function clickHandler(e) {
            if (!_GameControl2.default.instance) {
                return;
            }
            if (_GameControl2.default.instance.gameState != "start") {
                _GameControl2.default.instance.showTips("游戏未开始");
                return;
            }
            if (_GameControl2.default.instance.isSkilling) {
                console.error("-----\u6280\u80FD\u4E92\u65A5-----");
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            // console.error('传出去的武器攻击值:',this.params.weaponAttack)
            this.postNotification(WeaponBar.CLICK, [this]);
        }
    }, {
        key: "setCdTime",
        value: function setCdTime(cdTime) {
            //console.warn('修改cd时间:',cdTime);
            //cd 时间
            this.cdTime = cdTime;
        }
    }, {
        key: "drawTexture",
        value: function drawTexture(skin) {
            this.maskArea.graphics.drawTexture(Laya.loader.getRes(skin), 0, 0, this.ownW, this.ownH);
        }
        //所谓冷却是一种障眼法

    }, {
        key: "startT",
        value: function startT(time) {
            if (this.cdTime == 0) {
                // console.error('冷却免疫');
                return;
            }
            this.spShadow.visible = true;
            this.maskArea.visible = true;
            this.freezeing = true;

            this.beiginTime = new Date().getTime();

            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
            var cdT = time == undefined ? this.cdTime : time;

            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                this.aniWarn.play(0, false);
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
        //

    }, {
        key: "onDestroy",
        value: function onDestroy() {}
    }]);

    return WeaponBar;
}(PaoYa.Component);

exports.default = WeaponBar;

WeaponBar.CLICK = "weanponBarClick";

},{"../GameControl":4}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponSkill = function (_PaoYa$Component) {
    _inherits(WeaponSkill, _PaoYa$Component);

    /** @prop {name:lblWeaponSkill,tips:"兵器技能",type:Node} */
    function WeaponSkill() {
        _classCallCheck(this, WeaponSkill);

        return _possibleConstructorReturn(this, (WeaponSkill.__proto__ || Object.getPrototypeOf(WeaponSkill)).call(this));
    }

    _createClass(WeaponSkill, [{
        key: "onAwake",
        value: function onAwake() {
            this.timeLine = new Laya.TimeLine();
            this.lblWeaponSkill.font = "weaponSkill";
            this.timeLine.on(Laya.Event.COMPLETE, this, this.removeSelf);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            var params = this.owner.params;
            var skillName = params.skillName;
            this.lblWeaponSkill.text = skillName;

            var owner = this.owner;
            owner.alpha = 1;
            var targetX = params.isSelf ? 0 : 1170;
            this.timeLine.to(owner, {
                x: targetX
            }, 500, Laya.Ease.backOut, 0).to(owner, {
                alpha: 0
            }, 500);
            this.timeLine.play();
        }
    }, {
        key: "removeSelf",
        value: function removeSelf() {
            this.timeLine.reset();
            this.owner.removeSelf();
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            //对象池回收
            Laya.Pool.recover('weaponSkillBox', this.owner);
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.timeLine && this.timeLine.destroy();
            this.timeLine = null;
        }
    }]);

    return WeaponSkill;
}(PaoYa.Component);

exports.default = WeaponSkill;

},{}],37:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _LoadingView = require('./Loading/LoadingView');

var _LoadingView2 = _interopRequireDefault(_LoadingView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameMain = function (_PaoYa$Main) {
	_inherits(GameMain, _PaoYa$Main);

	function GameMain() {
		_classCallCheck(this, GameMain);

		return _possibleConstructorReturn(this, (GameMain.__proto__ || Object.getPrototypeOf(GameMain)).apply(this, arguments));
	}

	_createClass(GameMain, [{
		key: 'setupOthers',
		value: function setupOthers() {}
	}, {
		key: 'setupConfig',
		value: function setupConfig() {
			var resList = [];
			/**添加必要网络资源 */
			/* [
   ].forEach(url => {
   	resList.push(`${PaoYa.DataCenter.CDNURL}${url}`)
   }) */

			/**加载必要首屏界面资源 */
			/* 	let scenes = [
   		
   	]
   	resList = resList.concat(scenes) */
			/**加载游戏界面所需资源 */
			//resList = resList.concat(this.setupGameRes())

			PaoYa.DataCenter.GAMERES = this.setupGameRes();
			//分享地址
			PaoYa.ShareManager.makeShareImageURLHandler = function () {
				return PaoYa.DataCenter.CDNURL + PaoYa.DataCenter.config.game.share_img.randomItem;
			};
		}
	}, {
		key: 'setupLoadingView',
		value: function setupLoadingView(cb) {
			Laya.Scene.load('scenes/common/Loading/LoadWaitingView.scene', Laya.Handler.create(this, function (scene) {
				PaoYa.Navigator.adjustViewPosition(scene, false);
				Laya.Scene.setLoadingPage(scene);
				Laya.AtlasInfoManager.enable('fileconfig.json', Laya.Handler.create(this, cb));
			}));
		}
	}, {
		key: 'initRootScene',
		value: function initRootScene(launchInfo, isFirstLaunch) {
			PaoYa.ShareManager.isShare = false;
			this.navigator.push("HomeView", {}, null, Laya.Handler.create(this, function () {
				/*	let list=this.setupAsyncRes();
     	console.log('【异步】准备工作已完成')
    	Laya.loader.load(list,Laya.Handler.create(this,()=>{
    		console.log(`游戏中资源加载完成`)
    	}))*/
				PaoYa.LaunchScreenView.hide();
			}), null);
		}
	}, {
		key: 'onHide',
		value: function onHide(res) {
			if (PaoYa.ShareManager.isShare) {
				return;
			}
			if (PaoYa.navigator.visibleScene.url.indexOf('FBView') >= 0) {
				console.warn("在邀请界面");
				return;
			}
			if (res && res.mode != undefined && res.targetAction != undefined && !(res.mode == "hide" && res.targetAction == 8)) {
				this.socket.sendMessage(PaoYa.Client.LEAVE_ROOM, {});
				Laya.Dialog.manager.closeAll();
				this.navigator.popToRootScene();
			}
		}
	}]);

	return GameMain;
}(PaoYa.Main);

exports.default = GameMain;

},{"./Loading/LoadingView":40}],38:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _AlertDialog = require("../../gamescripts/dialog/AlertDialog");

var _AlertDialog2 = _interopRequireDefault(_AlertDialog);

var _SoundManager = require("../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _GameGuideData = require("../../gamescripts/gameGuide/GameGuideData");

var _GameGuideData2 = _interopRequireDefault(_GameGuideData);

var _Global = require("./tool/Global");

var _SpeakMan = require("../../gamescripts/gameGuide/SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

var _White = require("../prefab/White");

var _White2 = _interopRequireDefault(_White);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var guideContainer = void 0,
    maskArea = void 0,
    interactionArea = void 0,
    hitArea = void 0,
    selfSpeakMan = void 0,
    otherSpeakMan = void 0,
    selfSpeakManComp = void 0,
    otherSpeakManComp = void 0,
    nextLabel = void 0,
    guideStep = 0;

var HomeControl = function (_PaoYa$Component) {
    _inherits(HomeControl, _PaoYa$Component);

    function HomeControl() {
        _classCallCheck(this, HomeControl);

        return _possibleConstructorReturn(this, (HomeControl.__proto__ || Object.getPrototypeOf(HomeControl)).apply(this, arguments));
    }

    _createClass(HomeControl, [{
        key: "onAwake",

        /** @prop {name:lblLadder,tips:"用户段位",type:Node} */
        /** @prop {name:lblName,tips:"用户名字",type:Node} */
        /** @prop {name:selfSpeakMan,tips:"我方解说预制体对象",type:Prefab}*/
        /** @prop {name:otherSpeakMan,tips:"对方解说预制体对象",type:Prefab}*/
        /** @prop {name:aniFinger,tips:"手指动画",type:node}*/
        /** @prop {name:spriteBg,tips:"游戏底图",type:node}*/
        value: function onAwake() {
            var _this3 = this;

            HomeControl.ins = this;
            this.rolesName = ['', '小虾米', '龙女', '过儿', '乔帮主'];
            var name = PaoYa.DataCenter.user.defaultRoleId;
            var ladder = PaoYa.DataCenter.user.ladder;

            var player = new Laya.Skeleton();
            player.load(_HeroConfig2.default.spineMap["hero_" + name].path, Laya.Handler.create(this, function (res) {
                player.play('stand', true);
            }));
            player.pos(371, 590);
            player.scale(1.5, 1.5);
            this.owner.addChild(player);
            this.player = player;

            this.lblName.text = PaoYa.DataCenter.user.nickname;
            this.lblLadder.font = "weaponNFontT";
            this.lblLadder.scale(0.8, 0.8);
            this.lblLadder.text = _HeroConfig2.default.ladderArr[ladder];
            PaoYa.DataCenter.user.ladderName = _HeroConfig2.default.ladderArr[ladder];
            this.owner.imgAvstar.skin = PaoYa.DataCenter.user.avstar;
            this.onNotification('roleIdChanged', this, function (roleId) {
                if (name != roleId) {
                    name = roleId;
                    PaoYa.DataCenter.user.defaultRoleId = roleId;
                    var templet = _HeroConfig2.default.spineMap["hero_" + name].templet;
                    _this3.player.init(templet, 0);
                    if (!PaoYa.DataCenter.userInfoAuth) {
                        //未授权换装 修改名字和默认头像
                        _this3.owner.imgAvstar.skin = "local/common/avstar" + roleId + ".png";
                        _this3.lblName.text = _this3.rolesName[roleId];
                    }
                }
            });
            this.onNotification('AuthOK', this, function () {
                _this3.lblName.text = PaoYa.DataCenter.user.nickname;
                _this3.owner.imgAvstar.skin = PaoYa.DataCenter.user.avstar;
            });
            this.adventBox = new Laya.Box();
            this.adventBox.size(152, 145);
            this.adventBox.pos(500, 500);
            this.adventBox.visible = true;
            this.owner.addChild(this.adventBox);
            var spIcon = new Laya.Sprite();
            this.spIcon = spIcon;
            this.adventBox.addChild(spIcon);
            var adventAni = new Laya.Animation();
            adventAni.pos(this.adventBox.width / 2, this.adventBox.height / 2);
            this.adventAni = adventAni;
            this.adventBox.addChild(this.adventAni);
            this.originAdventType = 0;
            this.adventAni.blendMode = "lighter";

            this.adventBox.on(Laya.Event.CLICK, this, this.adventIconClick);
            this.onNotification('adventCancel', this, function () {
                if (PaoYa.navigator.scenes.length == 1) {
                    _this3.onAppear();
                }
            });
            this.onNotification('adventComplete', this, function () {
                if (PaoYa.navigator.scenes.length == 1) {
                    _this3.onAppear();
                }
            });
            /*  Laya.loader.create('gamescenes/prefab/WeaponBar.json', Laya.Handler.create(this, (json) => {
                 console.log(json)
                 Laya.loader.create('gamescenes/prefab/WeaponBar.json', Laya.Handler.create(this, (json) => {
                     console.log(json)
                 }))
             })) */
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.getLock(179, 72, "lock2");

            this.owner.lock.visible = PaoYa.DataCenter.user.current > 5 ? false : true;
            if (this.owner.lock.visible) {
                this.getLock(179, 72, "lock");
            }

            if (PaoYa.DataCenter.user.is_first_game == 1) {
                this.navigator.push('GameGuide', _GameGuideData2.default);
            }
            // this.guideF(`btn2`)
            this.showRankList();
        }
    }, {
        key: "onAppear",
        value: function onAppear() {
            var _this4 = this;

            // SoundManager.ins.homeBg();

            if (this.first) {
                this.player.play('stand', true);
            } else {
                this.first = true;
            }
            this.lblLadder.text = PaoYa.DataCenter.user.ladderName;
            this.owner.taskDot.visible = PaoYa.DataCenter.user.dailyTaskStatus ? true : false;
            this.owner.signDot.visible = PaoYa.DataCenter.user.loginBonusStatus ? true : false;
            this.GET("martial_encounter_detail", {}, function (res) {
                _this4.adventParams = res;
                if (JSON.stringify(res) != '{}') {
                    _this4.adventBox.visible = true;
                    if (_this4.originAdventType != res.type) {
                        _this4.originAdventType = res.type;
                        _this4.spIcon.texture = "remote/adventure/advent" + res.type + ".png";
                        _this4.adventAni.loadAnimation("gamescenes/animations/advent_effect" + res.type + ".ani", Laya.Handler.create(_this4, function () {
                            _this4.adventAni.play(0, true);
                        }));
                    } else {
                        _this4.adventAni.play(0, true);
                    }
                } else {
                    _this4.adventBox.visible = false;
                }
            });

            if (!_White2.default.ins.isFirst && _White2.default.ins.container) {
                _White2.default.ins.isFirst = true;
                _White2.default.ins.startTurn();
            }
        }
    }, {
        key: "adventIconClick",
        value: function adventIconClick() {
            var res = this.adventParams;
            switch (this.originAdventType) {
                case 1:
                case 2:
                    this.navigator.popup("/dialog/AdventDialog", res);
                    break;
                case 3:
                    this.navigator.popup("adventure/ChangeWp", res);
                    break;
                case 4:
                    this.navigator.popup("adventure/GetAward", res);
                    break;
                case 5:
                    if (res.time * 1000 > 0) {
                        if (res.time * 1000 - new Date().valueOf() < 0) {
                            res.state = "get";
                            this.navigator.popup("/dialog/AdventResultDialog5", res);
                        } else {
                            res.state = "wait";
                            this.navigator.popup("/dialog/AdventResultDialog5", res);
                        }
                    } else {
                        this.navigator.popup("/dialog/AdventDialog5", res);
                    }

                    break;
                case 6:
                    this.navigator.popup("adventure/BuyWp", res);

                    break;
            }
            res = null;
        }
    }, {
        key: "onDisappear",
        value: function onDisappear() {
            this.player._templet && this.player.stop();
            this.adventAni && this.adventAni.stop();
            _White2.default.ins.finishTurn();
        }
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            var _this5 = this;

            if (_Global.Global.isShowGrading) {
                return;
            }
            if (e.target instanceof Laya.Button) {
                _SoundManager2.default.ins.btn();
            }
            switch (e.target.name) {
                //兵器库
                case "btnWeaponHouse":
                    console.log("进入兵器库");
                    this.goWeaponHouse();
                    break;
                //兵器商店
                case "btnWeaponStore":
                    console.log("进入兵器商店");
                    this.POST("martial_shop_list", {
                        refresh: 0
                    }, function (res) {
                        if (!res) {
                            return;
                        }
                        //console.log(res)
                        _this5.POST("martial_user_weapon_list", {}, function (data) {
                            if (!data) {
                                return;
                            }
                            var obj = {
                                buyList: res,
                                sellList: data
                            };
                            _this5.navigator.push("WeaponStore", obj);
                        });
                    });
                    break;
                //炼器
                case "btnRefiner":
                    console.log("进入炼器");
                    this.goRefiner();
                    break;
                //兵器谱
                case "btnWeaponSpectrum":
                    this.GET("martial_weapon_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this5.navigator.push("WeapList", res);
                    });
                    console.log("进入兵器谱");
                    break;
                //英雄库
                case "btnHerosHouse":
                    console.log("进入英雄库");
                    this.goHerosHouse();
                    break;

                //签到
                case "btnRegister":
                    this.GET("martial_login_bonus_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this5.navigator.push("Sign", res);
                    });
                    console.log("打开签到");
                    break;
                //抽奖转盘
                case "btnRoulette":
                    this.navigator.push("Wheel");
                    console.log("去抽奖");
                    break;
                //开始游戏：
                case "btnStartGame":
                    console.log("开始游戏请求的数据......");
                    this.goPassGame();
                    break;
                //华山论剑
                case "btnBattle":
                    console.log("华山论剑");
                    if (PaoYa.DataCenter.user.current <= 5) {
                        py.showToast({
                            title: '过5关解锁'
                        });
                        return;
                    }
                    this.GET("martial_role_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this5.navigator.push("Grading", res);
                    });
                    break;
                //决战紫禁城之巅
                case "btnBoss":
                    if (PaoYa.DataCenter.user.current <= 10) {
                        py.showToast({
                            title: '过10关解锁'
                        });
                        return;
                    }
                    py.showToast({
                        title: '敬请期待'
                    });
                    console.log("决战");
                    break;
                //排行榜
                case "rank":
                    var _this = this;
                    _SoundManager2.default.ins.btn();
                    PaoYa.AuthManager.auth({
                        scope: PaoYa.AuthManager.scope.userInfo,
                        isNecessary: true, //是否强制授权,如果是强制，需要success函数记录用户信息
                        success: function success(res) {
                            console.log("\u6388\u6743\u6210\u529F1");
                            PaoYa.DataCenter.userInfoAuth = true;
                            PaoYa.DataCenter.user.avstar = res.userInfo.avatarUrl;
                            PaoYa.DataCenter.user.nickname = res.userInfo.nickName;
                            PaoYa.NotificationCenter.postNotification("AuthOK");
                            PaoYa.Request.POST('update_profile', { icon_big: res.userInfo.avatarUrl, name: res.userInfo.nickName }, function () {
                                _this.GET("ranking_list", {
                                    type: 1
                                }, function (res) {
                                    //console.log(res)
                                    if (!res) {
                                        return;
                                    }
                                    _this.navigator.popup("common/Rank", res);
                                });
                            });
                        },
                        next: function next() {
                            console.log("\u6388\u6743\u6210\u529F2");
                            _this.GET("ranking_list", {
                                type: 1
                            }, function (res) {
                                //console.log(res)
                                if (!res) {
                                    return;
                                }
                                _this.navigator.popup("common/Rank", res);
                            });
                            console.log("进入排行榜");
                        }
                    });
                    break;
                //玩法
                case "btnPlayRule":
                    console.log("玩法介绍");
                    break;
                //设置
                case "btnTask":
                    this.GET("martial_task_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this5.navigator.popup("common/Task", res);
                    });
                    console.log("任务");
                    // this.GET(`martial_encounter_detail`, {}, (res) => {
                    //     this.navigator.popup('adventure/ChangeWp', res);
                    // })
                    break;

            }
        }
    }, {
        key: "goRefiner",
        value: function goRefiner(num) {
            var _this6 = this;

            this.GET("martial_refiner_list", {}, function (res) {
                //console.log(res)
                if (!res) {
                    return;
                }
                var obj = {
                    isGuide: num,
                    detail: res
                };
                _this6.navigator.push("Refining", obj);
            });
        }
    }, {
        key: "goHerosHouse",
        value: function goHerosHouse(num) {
            var _this7 = this;

            this.GET("martial_role_list", {}, function (res) {
                //console.log(res)
                if (!res) {
                    return;
                }
                var obj = {
                    isGuide: num,
                    detail: res
                };
                _this7.navigator.push("Swordsman", obj);
            });
        }
    }, {
        key: "goWeaponHouse",
        value: function goWeaponHouse(num) {
            var _this8 = this;

            this.POST("martial_user_weapon_list", {}, function (res) {
                //console.log(res)
                if (!res) {
                    return;
                }

                var obj = {
                    isGuide: num,
                    detail: num ? _Global.Global.wpGuide : res
                };
                _this8.navigator.push("WeaponHouse", obj);
            });
        }
    }, {
        key: "goPassGame",
        value: function goPassGame() {
            var _this9 = this;

            if (this.firstGoGame) {
                this.firstGoGame = false;
                this.step4();
            }
            var _this = this;
            this.POST("hero_game_start", {}, function (res) {
                res.gameType = "pass";
                _Global.Global.gameStartStat(res.stageId);
                var resUrl = [];
                if (res.stageId >= 15 && res.stageId <= 29) {
                    resUrl = ["remote/spine/scene/scene3.sk", "remote/game/scene3.jpg"];
                } else {
                    resUrl = ["remote/spine/scene/scene1.sk", "remote/game/scene1.jpg"];
                }
                _this9.navigator.push("GameView", res, resUrl);
            }, function (msg, code) {
                var errorDialog = void 0;
                if (code == 3018) {
                    //通关
                    errorDialog = new _AlertDialog2.default({
                        title: "",
                        message: msg
                    });
                } else {
                    errorDialog = new _AlertDialog2.default({
                        title: "",
                        message: msg,
                        confirmText: '前往',
                        confirmHandler: function confirmHandler() {
                            _this.goRefiner();
                        }
                    });
                }
                errorDialog.popup();
            });
        }
    }, {
        key: "setGuide",
        value: function setGuide() {
            var _this10 = this;

            this.firstGoGame = true;
            //引导所在容器
            guideContainer = new Laya.Sprite();
            guideContainer.zOrder = 1000;
            this.owner.addChild(guideContainer);
            guideContainer.cacheAs = 'bitmap';

            // 绘制遮罩区，含透明度，
            maskArea = new Laya.Sprite();
            maskArea.alpha = 1;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.pos(-150, 0);
            maskArea.mouseEnabled = true;
            //maskArea.zOrder=1000;
            guideContainer.addChild(maskArea);
            //透明度变化
            var tween = new Laya.Tween();
            tween.to(maskArea, {
                alpha: 0.5
            }, 2000, null, Laya.Handler.create(this, function () {}));
            //绘制可点击区域
            interactionArea = new Laya.Sprite();
            interactionArea.blendMode = 'destination-out';
            // interactionArea.zOrder=1001;
            guideContainer.addChild(interactionArea);

            //可点击区域
            hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(0, 0, 1634, 750, '#000');
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            nextLabel = new Laya.Label();
            nextLabel.text = '跳过';
            nextLabel.font = 'figureDetail';
            nextLabel.pos(1100, 30);
            nextLabel.name = 'next';
            nextLabel.mouseEnabled = true;
            console.log(nextLabel.width);
            guideContainer.addChild(nextLabel);

            selfSpeakMan = this.selfSpeakMan.create.call(this.selfSpeakMan);
            selfSpeakManComp = selfSpeakMan.getComponent(_SpeakMan2.default);
            selfSpeakManComp.showWord('阿嚏~~~刚。。刚才是做梦？');
            selfSpeakMan.y = 225;
            selfSpeakMan.zOrder = 1003;
            this.owner.addChild(selfSpeakMan);

            otherSpeakMan = this.otherSpeakMan.create.call(this.otherSpeakMan);
            otherSpeakManComp = otherSpeakMan.getComponent(_SpeakMan2.default);
            otherSpeakMan.pos(315, 225);
            otherSpeakMan.zOrder = 1003;
            this.owner.addChild(otherSpeakMan);
            otherSpeakManComp.modify("\u964C\u751F\u5973\u5B50");
            otherSpeakMan.visible = false;

            this.owner.on(Laya.Event.CLICK, this, function (e) {
                guideStep += 1;
                switch (guideStep) {
                    case 1:
                    case 2:
                    case 3:
                        _this10['step' + guideStep]();
                        break;
                }
            });
            /*     this.spriteBg.on(Laya.Event.CLICK, this, (e) => {
                    guideStep += 1;
                    switch (guideStep) {
                        case 4:
                            e.stopPropagation();
                            this.step4();
                            break;
                    }
                    console.log(`接收到点击`)
                }) */
            nextLabel.on(Laya.Event.CLICK, this, this.nextTick);
        }
    }, {
        key: "step1",
        value: function step1() {
            console.log("---\u7B2C1\u6B65----");
            selfSpeakMan.visible = false;
            otherSpeakMan.visible = true;
            otherSpeakManComp.showWord("\u6551\u547D\uFF01\u6551\u547D\u554A\uFF01");
        }
    }, {
        key: "step2",
        value: function step2() {
            console.log("---\u7B2C2\u6B65----");
            selfSpeakMan.visible = true;
            otherSpeakMan.visible = false;
            selfSpeakManComp.showWord("\u5927\u767D\u5929\u7684\u8C01\u5728\u558A\u6551\u547D\uFF1F\u53BB\u770B\u770B\u518D\u8BF4\u3002");
        }
    }, {
        key: "step3",
        value: function step3() {
            console.log("---\u7B2C3\u6B65----");
            nextLabel.visible = false;
            selfSpeakMan.visible = false;
            this.aniFinger.visible = true;
            this.aniFinger.play(0, true);
            interactionArea.graphics.clear();
            interactionArea.graphics.drawRect(730, 103, 370, 165, '#000');
            hitArea.unHit.clear();
            hitArea.unHit.drawRect(730, 103, 370, 165, '#000');
        }
    }, {
        key: "step4",
        value: function step4() {
            console.log("---\u7B2C4\u6B65----");
            if (this.aniFinger) {
                this.aniFinger.visible = false;
                this.aniFinger.stop();
            }
            interactionArea.graphics.clear();
            guideContainer.removeSelf();
            /*   this.aniFinger.destroy(); */
            _Global.Global.dataPoints('点击开始游戏');
            // this.goPassGame();
            console.error("------\u9996\u9875\u65B0\u624B\u5F15\u5BFC\u5220\u9664------");
        }
    }, {
        key: "nextTick",
        value: function nextTick(e) {
            e.stopPropagation();
            guideStep += 1;
            this['step' + guideStep]();
        }
    }, {
        key: "showRankList",
        value: function showRankList() {
            var rlist = PaoYa.DataCenter.user.list.slice(0, 3);

            this.owner.rankList.vScrollBarSkin = "";
            this.owner.rankList.renderHandler = new Laya.Handler(this, this.rankListItem);
            this.owner.rankList.array = rlist;
        }
    }, {
        key: "rankListItem",
        value: function rankListItem(cell, index) {
            cell.y = 108 * index;
            var rankicon = cell.getChildByName("rankicon");
            var usericon = cell.getChildByName("usericon");
            /*    Laya.loader.load(cell.dataSource.member_avstar, Laya.Handler.create(this, res => {
                   usericon.skin = cell.dataSource.member_avstar
               }))  */
            usericon.skin = cell.dataSource.member_avstar;
            //use
            rankicon.skin = "local/home/" + (index + 1) + ".png";
        }
    }, {
        key: "guideF",
        value: function guideF(name) {
            var _this11 = this;

            var Sprite = Laya.Sprite;

            // 绘制底图
            var gameContainer = new Sprite();
            gameContainer.size(1634, 750);
            gameContainer.pos(-150, 0);
            gameContainer.mouseEnabled = true;
            this.owner.addChild(gameContainer);

            var step = null;

            switch (name) {
                case "btn1":
                    step = this.owner.btnHerosHouse;
                    break;
                case "btn2":
                    step = this.owner.btnWeaponHouse;
                    break;
                case "btn3":
                    step = this.owner.btnRefiner;
                    break;
            }

            gameContainer.on(Laya.Event.CLICK, this, function () {
                switch (name) {
                    case "btn1":
                        _this11.goHerosHouse(1);
                        break;
                    case "btn2":
                        _this11.goWeaponHouse(1);
                        break;
                    case "btn3":
                        _this11.goRefiner(1);
                        break;
                }
                _this11.aniFinger.visible = false;
                _this11.owner.removeChild(guideContainer);
                _this11.owner.removeChild(gameContainer);
                _this11.aniFinger.visible = false;
                // this.owner.removeChild(this.aniFinger);
            });

            // 引导所在容器
            var guideContainer = new Laya.Sprite();
            guideContainer.zOrder = 1000;
            this.owner.addChild(guideContainer);
            guideContainer.cacheAs = 'bitmap';

            // 绘制遮罩区，含透明度，可见游戏背景
            var maskArea = new Sprite();
            guideContainer.addChild(maskArea);
            maskArea.alpha = 0.5;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.pos(-150, 0);

            // 绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
            var interactionArea = new Sprite();
            guideContainer.addChild(interactionArea);
            // 设置叠加模式
            interactionArea.blendMode = "destination-out";

            // 设置点击区域
            var hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(-150, 0, 1634, 750, "#000");
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            this.aniFinger.visible = true;
            this.aniFinger.pos(step.x + step.width / 2 - 150, step.height / 2 + step.y);
            this.aniFinger.play(0, true);

            hitArea.unHit.clear();
            hitArea.unHit.drawCircle(step.x + step.width / 2 - 150, step.height / 2 + step.y, 65, "#000000");

            interactionArea.graphics.clear();
            interactionArea.graphics.drawCircle(step.width / 2 + step.x - 150, step.height / 2 + step.y, 65, "#000000");
        }
    }, {
        key: "lockBattle",
        value: function lockBattle() {
            var _this12 = this;

            this.owner.tips.visible = true;

            Laya.Tween.to(this.owner.tips, { y: this.owner.tips.y - 100, alpha: 0 }, 1500, Laya.Ease.quadInOut, Laya.Handler.create(this, function () {
                _this12.lockAni.play(0, false);
                _this12.owner.tips.visible = false;
                _Global.Global.isShowGrading = false;
            }));
        }
    }, {
        key: "getLock",
        value: function getLock(x, y, name) {
            var _this13 = this;

            var dragonAni = new Laya.Animation();
            this.owner[name].addChild(dragonAni);
            dragonAni.pos(x, y);
            dragonAni.loadAnimation("gamescenes/animations/lock.ani", Laya.Handler.create(this, function (ani) {
                _this13[name + "Ani"] = dragonAni;
            }), "res/atlas/remote/lock.atlas");
        }
    }, {
        key: "onDisappear",
        value: function onDisappear() {}
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "onDestroy",
        value: function onDestroy() {}
    }]);

    return HomeControl;
}(PaoYa.Component);

exports.default = HomeControl;

},{"../../gamescripts/SoundManager":8,"../../gamescripts/config/HeroConfig":10,"../../gamescripts/dialog/AlertDialog":15,"../../gamescripts/gameGuide/GameGuideData":20,"../../gamescripts/gameGuide/SpeakMan":21,"../prefab/White":81,"./tool/Global":55}],39:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingControl = function (_PaoYa$Component) {
    _inherits(LoadingControl, _PaoYa$Component);

    function LoadingControl() {
        _classCallCheck(this, LoadingControl);

        return _possibleConstructorReturn(this, (LoadingControl.__proto__ || Object.getPrototypeOf(LoadingControl)).apply(this, arguments));
    }

    _createClass(LoadingControl, [{
        key: 'onAwake',

        /** @prop {name:progressView,tips:'',type:Node} */
        /** @prop {name:lblProgress,tips:'',type:Node} */
        /** @prop {name:progressViewBg,tips:'',type:Node} */
        /** @prop {name:type,type:Option,option:"normal,waiting",default:normal}*/
        value: function onAwake() {
            this.type = this.type || 'normal';
            this.owner.on(Laya.Event.PROGRESS, this, this.onProgress);
            if (this.type !== 'normal') {
                var bg = this.progressViewBg;
                bg.graphics.clear();
                bg.graphics.drawPath(0, 0, PaoYa.Utils.makeAllCornerRoundRectPath(bg.width, bg.height, 20), {
                    fillStyle: "#000000"
                });
            }
        }
    }, {
        key: 'onUpdate',
        value: function onUpdate() {
            if (this.type !== 'normal') {
                this.progressView.rotation += 5;
            }
        }
    }, {
        key: 'onProgress',
        value: function onProgress(progress) {
            this.lblProgress.text = Math.ceil(progress * 100) + '%';
            if (this.type == 'normal') {
                var mask = this.progressView.mask;
                mask.graphics.clear();
                mask.graphics.drawRect(0, 0, Math.ceil(this.progressView.width * progress), this.progressView.height, '#ff0000');
            }
        }
    }]);

    return LoadingControl;
}(PaoYa.Component);

exports.default = LoadingControl;

},{}],40:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingView = function (_PaoYa$View) {
    _inherits(LoadingView, _PaoYa$View);

    function LoadingView(type) {
        _classCallCheck(this, LoadingView);

        var _this = _possibleConstructorReturn(this, (LoadingView.__proto__ || Object.getPrototypeOf(LoadingView)).call(this));

        _this.type = type || 'normal';
        _this.on(Laya.Event.PROGRESS, _this, _this.onProgress);
        if (_this.type !== 'normal') {
            Laya.timer.frameLoop(1, _this, _this.onUpdate);
        }
        //on QQ
        var scene = PaoYa.game.launchOption.scene;
        if (window.BK && (scene == 318 || scene == 319) && _this.type == 'normal') {
            _this.lblProgress.visible = false;
            _this.progressView.visible = false;
            _this.imgProgressBg.visible = false;
            _this.lblTips.visible = false;
        }
        return _this;
    }

    _createClass(LoadingView, [{
        key: 'onUpdate',
        value: function onUpdate() {
            if (this.type !== 'normal') {
                this.progressView.rotation += 5;
            }
        }
    }, {
        key: 'onProgress',
        value: function onProgress(progress) {
            this.lblProgress.text = Math.ceil(progress * 100) + '%';
            if (this.type == 'normal') {
                var mask = this.progressView.mask;
                mask.graphics.clear();
                mask.graphics.drawRect(0, 0, Math.ceil(this.progressView.width * progress), this.progressView.height, '#ff0000');
            }
        }
    }]);

    return LoadingView;
}(PaoYa.View);

exports.default = LoadingView;

},{}],41:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameBanner = require('../../../gamescripts/prefab/GameBanner');

var _GameBanner2 = _interopRequireDefault(_GameBanner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MatchControl = function (_PaoYa$Component) {
    _inherits(MatchControl, _PaoYa$Component);

    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/
    function MatchControl() {
        _classCallCheck(this, MatchControl);

        var _this = _possibleConstructorReturn(this, (MatchControl.__proto__ || Object.getPrototypeOf(MatchControl)).call(this));

        MatchControl.ins = _this;
        return _this;
    }

    _createClass(MatchControl, [{
        key: 'onAwake',
        value: function onAwake() {
            this.params = this.owner.params;
            this.gameBannerComp = this.boxGameBanner.getComponent(_GameBanner2.default);
        }
    }, {
        key: 'onAppear',
        value: function onAppear() {
            var _this2 = this;

            var timerService = new PaoYa.TimerService(1000, 1, true);
            timerService.on(PaoYa.TimerService.PROGRESS, this, function (time) {
                _this2.gameBannerComp.setTimeText('\u7B49\u5F85\u65F6\u95F4:' + time);
            });
            timerService.on(PaoYa.TimerService.STOP, this, function () {
                console.log('停止计时器');
            });
            timerService.start();
            this.timerService = timerService;
            this.owner.startAni();
            var randomTime = (Math.floor(Math.random() * 3) + 1) * 1000;
            Laya.timer.once(randomTime, this, this.matchOK);
        }
    }, {
        key: 'onClick',
        value: function onClick(e) {
            switch (e.target.name) {
                case 'btnBack':
                    this.timerService.stop();
                    Laya.timer.clearAll(this);
                    this.navigator.pop();
                    break;
            }
        }
        //匹配成功

    }, {
        key: 'matchOK',
        value: function matchOK() {
            var _this3 = this;

            this.owner.matchOK();
            this.timerService && this.timerService.stop();
            Laya.timer.once(200, this, function () {
                _this3.navigator.push("GameView", _this3.params);
            });
        }
    }, {
        key: 'onDisappear',
        value: function onDisappear() {
            this.owner.stopAni();
        }
    }]);

    return MatchControl;
}(PaoYa.Component);

exports.default = MatchControl;

},{"../../../gamescripts/prefab/GameBanner":26}],42:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MatchView = function (_PaoYa$View) {
    _inherits(MatchView, _PaoYa$View);

    function MatchView() {
        _classCallCheck(this, MatchView);

        return _possibleConstructorReturn(this, (MatchView.__proto__ || Object.getPrototypeOf(MatchView)).call(this));
    }

    _createClass(MatchView, [{
        key: 'onAwake',
        value: function onAwake() {
            this.lblTip.font = 'weaponNFontT';
            this.selfLadderName.font = "weaponNFontT";
            this.otherLadderName.font = 'weaponNFontT';
            this.lblTip.scale(0.8, 0.8);
            this.ladderNameArr = ['无名小卒', '初出茅庐', '后起之秀', '江湖少侠', '武林高手', '名震江湖', '独步武林', '一代宗师', '独孤求败'];
            this.initView();
        }
    }, {
        key: 'initView',
        value: function initView() {
            var params = this.params;
            this.selfLadderId = params.ladder;
            this.otherLadderId = params.robotLadder;
            this.selfName.text = PaoYa.Utils.formatName(params.nickName);
            this.selfAvstar.texture = 'local/common/hero_' + params.roleId + '.png';
            this.selfLadderInfo = this.findLadderById(this.selfLadderId);
            this.otherLadderInfo = this.findLadderById(this.otherLadderId);
            this.selfLadder.texture = 'local/common/badge_' + this.selfLadderInfo.ladderId + '.png';
            console.log(this.selfLadderInfo.texture);
            this.selfLadderName.text = this.selfLadderInfo.ladderName;

            this.resetStar(true);
            this.resetStar(false);
            this.otherStars.visible = false;
        }
    }, {
        key: 'resetStar',
        value: function resetStar(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var ladder = isSelf ? 'ladder' : 'robotLadder';
            if (this.params[ladder] > 8) {
                var sprite = new Laya.Sprite();
                sprite.texture = 'local/common/starLight.png';
                this[name + 'Stars'].addChild(sprite);
                var label = new Laya.Label();
                label.text = '×' + this.params.ladderStar;
                label.fontSize = 30;
                label.height = 56;
                label.valign = 'middle';
                label.color = "#ffffff";
                this[name + 'Stars'].addChild(label);
            } else {
                var star = this.params[ladder + 'Star'];
                var numStar = this[name + 'LadderInfo'].ladderStar;
                for (var i = 0; i < numStar; i++) {
                    var _sprite = new Laya.Sprite();
                    if (i < star) {
                        _sprite.texture = 'local/common/starLight.png';
                    } else {
                        _sprite.texture = 'local/common/starDark.png';
                    }
                    this[name + 'Stars'].addChild(_sprite);
                    console.warn('hbox宽度：' + name, this[name + 'Stars'].width);
                }
            }
            // this[name+'Stars'].centerX=0;
        }
    }, {
        key: 'startAni',
        value: function startAni() {
            var _this2 = this;

            var point = "...";
            var index = 1;
            var ladderIndex = 1;
            var nameIndex = 0;
            Laya.timer.loop(300, this, function () {
                index = index == 4 ? 1 : index + 1;
                ladderIndex = ladderIndex == 9 ? 1 : ladderIndex + 1;
                nameIndex = nameIndex == _this2.ladderNameArr.length - 1 ? 0 : nameIndex + 1;
                point = point == '...' ? '.' : point + '.';
                _this2.lblTip.text = '\u5339\u914D\u6210\u529F,\u53D1\u4FBF\u5F53\u4E2D' + point;
                _this2.otherAvstar.texture = 'local/common/hero_' + index + '.png';
                _this2.otherLadderName.text = _this2.ladderNameArr[nameIndex];
                _this2.otherLadder.texture = 'local/common/badge_' + ladderIndex + '.png';
            });
        }
    }, {
        key: 'matchOK',
        value: function matchOK() {
            this.stopAni();
            this.otherStars.visible = true;
            this.otherName.text = this.params.robotNickName;
            this.otherLadder.texture = 'local/common/badge_' + this.otherLadderInfo.ladderId + '.png';
            this.otherLadderName.text = PaoYa.Utils.formatName(this.otherLadderInfo.ladderName);
            this.otherAvstar.texture = 'local/common/hero_' + this.params.robotRoleId + '.png';
        }
    }, {
        key: 'stopAni',
        value: function stopAni() {
            Laya.timer.clearAll(this);
        }
    }, {
        key: 'findLadderById',
        value: function findLadderById(id) {
            var result = PaoYa.DataCenter.config.hero.ladderList.filter(function (item) {
                return item.id == id;
            });
            return result[0];
        }
    }]);

    return MatchView;
}(PaoYa.View);

exports.default = MatchView;

},{}],43:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Grading = function (_PaoYa$View) {
    _inherits(Grading, _PaoYa$View);

    function Grading() {
        _classCallCheck(this, Grading);

        return _possibleConstructorReturn(this, (Grading.__proto__ || Object.getPrototypeOf(Grading)).call(this));
    }

    _createClass(Grading, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            _Global.Global.dataPoints('进入华山论剑');
            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     GradingControl.ins.navigator.pop()
            // })

            // this.gameStart.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     GradingControl.ins.gameRole(this.showDetail.roleId)
            // })


            this.gameStartTxt.font = "weaponDFont";
            this.gameStartTxt.scale(0.7, 0.7);
            this.gameStartTxt.pos(22, 15);

            this.gradingNum.skin = "local/common/badge_" + this.params.ladder + ".png";

            this.canUseList = [];
            this.params.roleList.forEach(function (element) {
                if (element.roleStatus) {
                    _this2.canUseList.push(element);
                }
            });

            this.canUseList.forEach(function (element) {
                if (element.roleId == _this2.params.defaultRole) {
                    _this2.showDetail = element;
                }
            });
            if (this.canUseList.length > 3) {
                this.canUseList.splice(2, 1);
            }
            // this.canUseList = this.canUseList.slice(0, 2)
            this.herolist.renderHandler = new Laya.Handler(this, this.figureRender);
            this.herolist.array = this.canUseList;

            if (this.params.ladder == 9) {
                this.starNum.visible = false;
                this.starNum2.visible = true;
                this.starNumTxt.text = "\xD7" + this.params.ladderStar;
                this.starNumTxt.font = "weaponNFontT";
                this.starNumTxt.scale(0.8, 0.8);
            } else {
                this.starNum.visible = true;
                this.starNum2.visible = false;
                var arr = new Array(this.params.ladderFullStar);
                this.starNum.renderHandler = new Laya.Handler(this, this.starNumRender);
                this.starNum.array = arr;

                this.starNum.x = 224 / 7 * (7 - this.params.ladderFullStar) + 121;
            }

            PaoYa.DataCenter.user.config_list.hero.ladderList.forEach(function (element) {
                if (_this2.params.ladder == element.ladderId) {
                    _this2.gradingNum.skin = "local/common/badge_" + element.ladderId + ".png";
                    _this2.gradingname.text = element.ladderName;
                    _this2.gradingname.font = "weaponNFontT";
                    _this2.gradingname.scale(0.8, 0.8);
                    _this2.gradingname.pos(258.5, 470);
                }
            });

            this.initInfo();
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "changeGold",
        value: function changeGold() {}
        //人物列表渲染

    }, {
        key: "figureRender",
        value: function figureRender(cell, idx) {
            var _this3 = this;

            cell.getChildByName("icon").skin = "local/common/" + cell.dataSource.roleDress + ".png";
            cell.getChildByName("bgwarp").visible = this.showDetail.roleId == cell.dataSource.roleId ? true : false;
            if (this.showDetail.roleId == cell.dataSource.roleId) {
                this.prole = cell;
            }
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this3.prole.getChildByName("bgwarp").visible = false;
                _this3.prole = cell;
                _this3.showDetail = cell.dataSource;
                _this3.initInfo();
                cell.getChildByName("bgwarp").visible = true;
            });
        }
    }, {
        key: "starNumRender",
        value: function starNumRender(cell, idx) {
            cell.skin = idx + 1 > this.params.ladderStar ? "remote/grading/5.png" : "remote/grading/4.png";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
        //初始化展示信息

    }, {
        key: "initInfo",
        value: function initInfo() {
            this.skbox.y = 390;
            this.skbox.x = 370;
            if (this.heroSkin) {
                this.heroSkin.stop();
                this.heroSkin.destroy();
                this.heroSkin = null;
            }

            this.heroSkin = _HeroConfig2.default.getSkeleton(this.showDetail.roleDress);
            this.skbox.addChild(this.heroSkin);
            this.heroSkin.pos(100, 400);
            this.heroSkin.scale(1.5, 1.5);
            this.heroSkin.play("stand", true);

            for (var i = 0; i < 5; i++) {
                this["lv" + (i + 1)].visible = false;
                if (i < this.showDetail.roleStar) {
                    this["lv" + (i + 1)].visible = true;
                }
            }

            this.heroname.text = this.showDetail.roleName + "LV." + this.showDetail.roleLevel + "/" + this.showDetail.roleTopLevel;
            this.heroname.font = "weaponNFontT";
            this.heroname.scale(0.8, 0.8);
        }
    }]);

    return Grading;
}(PaoYa.View);

exports.default = Grading;

},{"../../../gamescripts/SoundManager":8,"../../../gamescripts/config/HeroConfig":10,"../tool/Global":55}],44:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GradingControl = function (_PaoYa$Component) {
    _inherits(GradingControl, _PaoYa$Component);

    function GradingControl() {
        _classCallCheck(this, GradingControl);

        var _this2 = _possibleConstructorReturn(this, (GradingControl.__proto__ || Object.getPrototypeOf(GradingControl)).call(this));

        GradingControl.ins = _this2;
        return _this2;
    }

    _createClass(GradingControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "gameStart":
                    var _this = this;
                    _SoundManager2.default.ins.btn();
                    PaoYa.AuthManager.auth({
                        scope: PaoYa.AuthManager.scope.userInfo,
                        isNecessary: false, //是否强制授权
                        success: function success(res) {
                            PaoYa.DataCenter.userInfoAuth = true;
                            PaoYa.DataCenter.user.avstar = res.userInfo.avatarUrl;
                            PaoYa.DataCenter.user.nickname = res.userInfo.nickName;
                            PaoYa.NotificationCenter.postNotification("AuthOK");
                            PaoYa.Request.POST('update_profile', { icon_big: res.userInfo.avatarUrl, name: res.userInfo.nickName }, function () {
                                _this.gameRole(_this.owner.showDetail.roleId);
                            });
                        },
                        next: function next() {
                            _this.gameRole(_this.owner.showDetail.roleId);
                        }
                    });

                    break;
            }
        }
    }, {
        key: "gameRole",
        value: function gameRole(e) {
            var _this3 = this;

            this.POST("hero_match_game_start", { roleId: e }, function (res) {
                res.gameType = "battle";
                _this3.navigator.push('MatchView', res);
            });
        }
    }]);

    return GradingControl;
}(PaoYa.Component);

exports.default = GradingControl;

},{"../../../gamescripts/SoundManager":8}],45:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Swordsman = function (_PaoYa$View) {
    _inherits(Swordsman, _PaoYa$View);

    function Swordsman() {
        _classCallCheck(this, Swordsman);

        var _this = _possibleConstructorReturn(this, (Swordsman.__proto__ || Object.getPrototypeOf(Swordsman)).call(this));

        Swordsman.ins = _this;
        return _this;
    }

    _createClass(Swordsman, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.isGuide = this.params.isGuide;
            this.guideBack = false;
            this.params = this.params.detail;
            if (this.isGuide) {
                _Global.Global.dataPoints('用户进入人物引导页面');
                this.guide1.visible = true;
                this.guide1.zOrder = 999;
                PaoYa.Request.POST("martial_change_new_hand", { type: "roleNew" });
                this.guideContainer = new Laya.Sprite();
                this.addChild(this.guideContainer);
                this.guideContainer.cacheAs = "bitmap";

                var spmask = new Laya.Sprite();
                spmask.alpha = 0.5;
                this.guideContainer.addChild(spmask);
                spmask.graphics.drawRect(-150, 0, 1634, 750, "#000");

                this.sp = new Laya.Sprite();
                this.guideContainer.addChild(this.sp);
                // 设置叠加模式
                this.sp.blendMode = "destination-out";
                this.graR(this.guide1.x + 143, this.guide1.y, 90);

                this.guide1f(1);
            }
            this.params.roleList.forEach(function (element) {
                if (element.roleId == _this2.params.defaultRole) {
                    _this2.showDetail = element;
                }
            });

            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     if (this.isGuide) {
            //         Global.dataPoints('用户点击人物升级')
            //     }
            //     if (this.isGuide && !this.guideBack) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.postNotification(`roleIdChanged`, this.params.defaultRole);
            //     SwordsmanControl.ins.navigator.pop()
            // })
            // if (this.params.roleList.length > 3) {
            //     this.params.roleList.splice(2, 1)
            // }
            this.params.roleList = this.params.roleList;
            this.herolist.renderHandler = new Laya.Handler(this, this.figureRender);
            this.herolist.array = this.params.roleList;

            this.lvupbtnTxt.font = "weaponDFont";
            this.lvupbtnTxt.scale(0.8, 0.8);
            this.lvupbtnTxt.pos(60, 10);
            this.equipbtnTxt.font = "weaponDFont";
            this.equipbtnTxt.scale(0.8, 0.8);
            this.equipbtnTxt.pos(60, 10);
            this.signGetTxt.font = "weaponDFont";
            this.signGetTxt.scale(0.8, 0.8);
            this.signGetTxt.pos(60, 10);
            this.alreadyTxt.font = "weaponDFont";
            this.alreadyTxt.scale(0.8, 0.8);
            this.alreadyTxt.pos(35, 10);

            // this.lvupbtn.on(Laya.Event.CLICK, this, () => {
            //     SwordsmanControl.ins.roleLevelUp()
            // })

            // this.equipbtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.changeRole()
            // })

            // this.buyBtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.navigator.popup("figure/BuyHero", this.showDetail);
            // })

            // this.signGet.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     PaoYa.Request.GET("martial_login_bonus_list", {}, res => {
            //         //console.log(res)
            //         res.isFromSw = true
            //         if (!res) {
            //             return
            //         }
            //         SwordsmanControl.ins.navigator.push("Sign", res);
            //     })
            // })

            // this.skill1.on(Laya.Event.CLICK, this, () => {
            //     if (this.isGuide) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.showSkillDetail(0)
            // })

            // this.skill2.on(Laya.Event.CLICK, this, () => {
            //     if (this.isGuide) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.showSkillDetail(1)
            // })

            // this.skill3.on(Laya.Event.CLICK, this, () => {
            //     if (this.isGuide) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     SwordsmanControl.ins.showSkillDetail(2)
            // })
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
        //初始化展示信息

    }, {
        key: "initInfo",
        value: function initInfo() {
            var _this3 = this;

            this.skbox.y = 390;
            this.skbox.x = 370;
            if (this.heroSkin) {
                this.heroSkin.stop();
                this.heroSkin.destroy();
                this.heroSkin = null;
            }

            this.heroSkin = _HeroConfig2.default.getSkeleton(this.showDetail.roleDress);
            this.skbox.addChild(this.heroSkin);
            this.heroSkin.pos(100, 400);
            this.heroSkin.scale(1.5, 1.5);
            this.heroSkin.play("stand", true);

            if (this.showDetail.roleId == this.params.defaultRole) {
                this.isUse.visible = true;
            } else {
                this.isUse.visible = false;
            }
            this.speciality.font = "weaponDFont";
            this.speciality.text = this.showDetail.roleDesc;
            switch (this.speciality.text.length) {
                case 2:
                    this.speciality.y = 60;
                    this.speciality.scale(1, 1);
                    this.speciality.x = 20;
                    break;
                case 3:
                    this.speciality.y = 50;
                    this.speciality.scale(0.8, 0.8);
                    this.speciality.x = 25;
                    break;
                case 4:
                    this.speciality.y = 35;
                    this.speciality.scale(0.7, 0.7);
                    this.speciality.x = 30;
                    break;
            }

            for (var i = 0; i < 5; i++) {
                this["lv" + (i + 1)].visible = false;
                if (i < this.showDetail.roleStar) {
                    this["lv" + (i + 1)].visible = true;
                }
            }

            this.showDetail.skills.forEach(function (element, index) {
                _this3["skill" + (index + 1)].skin = "local/common/" + element.skillId + ".png";
                if (element.status) {
                    _this3["skill" + (index + 1)].gray = false;
                    _this3["skill" + (index + 1) + "Txt"].visible = false;
                } else {
                    _this3["skill" + (index + 1)].gray = true;
                    _this3["skill" + (index + 1) + "Txt"].visible = true;
                    _this3["skill" + (index + 1) + "Txt"].text = "LV." + element.skillUnlock + "\u89E3\u9501";
                    _this3["skill" + (index + 1) + "Txt"].font = "weaponNFontT";
                    _this3["skill" + (index + 1) + "Txt"].scale(0.4, 0.4);
                    _this3["skill" + (index + 1) + "Txt"].pos(15, 40);
                }
            });

            this.heroname.text = this.showDetail.roleName + "LV." + this.showDetail.roleLevel + "/" + this.showDetail.roleTopLevel;
            this.heroname.font = "weaponNFontT";
            this.heroname.scale(0.8, 0.8);

            this.hp.text = "\u751F\u547D " + (this.showDetail.roleHp - this.showDetail.roleUpHp);
            this.additionHp.text = this.showDetail.roleStatus && this.showDetail.roleUpHp ? "+" + this.showDetail.roleUpHp : "";

            this.force.text = "\u5185\u529B " + (this.showDetail.roleMp - this.showDetail.roleUpMp);
            this.adddtionForce.text = this.showDetail.roleStatus && this.showDetail.roleUpMp ? "+" + this.showDetail.roleUpMp : "";

            this.muscle.text = "\u81C2\u529B " + (this.showDetail.roleStrength - this.showDetail.roleUpStrength);
            this.additionMuscle.text = this.showDetail.roleStatus && this.showDetail.roleUpStrength ? "+" + this.showDetail.roleUpStrength : "";

            this.bone.text = "\u6839\u9AA8 " + (this.showDetail.roleBone - this.showDetail.roleUpBone);
            this.additionBone.text = this.showDetail.roleStatus && this.showDetail.roleUpBone ? "+" + this.showDetail.roleUpBone : "";

            this.critical.text = "\u66B4\u51FB " + this.showDetail.roleCritProb + "%";

            this.hurt.text = "\u7206\u4F24 " + this.showDetail.roleCritHarm + "%";

            this.needGoldNum.font = "weaponNFontT";
            this.needGoldNum.text = this.isGuide ? 0 : this.showDetail.upgradeCost;
            this.needGoldNum.scale(0.8, 0.8);

            this.equipbtn.visible = false;
            this.already.visible = false;
            this.lvupbtn.visible = false;
            this.buyBtn.visible = false;
            this.signGet.visible = false;

            if (this.showDetail.roleStatus) {
                this.lvupbtn.visible = true;
                if (this.showDetail.roleId == this.params.defaultRole) {
                    this.already.visible = true;
                    this.equipbtn.visible = false;
                } else {
                    this.already.visible = false;
                    this.equipbtn.visible = true;
                }
            } else {
                if (this.showDetail.rolePrice) {
                    this.buyBtn.visible = true;
                    this.needDiamon.text = this.showDetail.rolePrice;
                    this.needDiamon.font = "weaponDFont";
                    this.needDiamon.scale(0.8, 0.8);
                    this.needDiamon.y = 10;
                } else {
                    this.signGet.visible = true;
                }
            }

            this.lvupbtn.disabled = this.showDetail.roleLevel >= this.showDetail.roleTopLevel ? true : false;
        }
    }, {
        key: "changeGold",
        value: function changeGold() {
            var _this4 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this4.goldNum.width = null;
                _this4.changeHB(res);
            });
        }
    }, {
        key: "changeHB",
        value: function changeHB(res) {
            PaoYa.DataCenter.user.gold = res.gold;
            PaoYa.DataCenter.user.diamond = res.diamond;
            var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
            var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);

            this.goldNum.text = goldnum;
            this.goldNum.font = "weaponNFontT";
            this.goldNum.scale(0.6, 0.6);
            this.goldNum.pos(365 + (149 - this.goldNum.width * 0.6) / 2, 25);
            this.diamondNum.text = diamondnum;
            this.diamondNum.font = "weaponNFontT";
            this.diamondNum.scale(0.6, 0.6);
            this.diamondNum.pos(600 + (149 - this.goldNum.width * 0.6) / 2, 25);

            function addNumberUnit(num) {
                switch (true) {
                    case num >= 10000 && num < 100000000:
                        var integ = num / 10000;
                        return Math.floor(integ * 100) / 100 + '万';
                        break;
                    case num >= 100000000:
                        var integ1 = num / 100000000;
                        return Math.floor(integ1 * 100) / 100 + '亿';
                        break;
                    default:
                        return num + '';
                        break;
                }
            };
        }
    }, {
        key: "onAppear",
        value: function onAppear() {
            var _this5 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this5.goldNum.width = null;
                _this5.changeHB(res);
                // PaoYa.DataCenter.user.gold = res.gold
                // PaoYa.DataCenter.user.diamond = res.diamond
                // let goldnum = addNumberUnit(PaoYa.DataCenter.user.gold)
                // let diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond)

                // this.goldNum.text = goldnum
                // this.goldNum.font = `weaponNFontT`
                // this.goldNum.scale(0.6, 0.6)
                // this.goldNum.pos(365 + (149 - this.goldNum.width * 0.6) / 2, 25)
                // this.diamondNum.text = diamondnum
                // this.diamondNum.font = `weaponNFontT`
                // this.diamondNum.scale(0.6, 0.6)
                // this.diamondNum.pos(600 + (149 - this.diamondNum.width * 0.6) / 2, 25)

                // function addNumberUnit(num) {
                //     switch (true) {
                //         case num >= 10000 && num < 100000000:
                //             let integ = num / 10000
                //             return Math.floor(integ * 100) / 100 + '万'
                //             break
                //         case num >= 100000000:
                //             let integ1 = num / 100000000
                //             return Math.floor(integ1 * 100) / 100 + '亿'
                //             break
                //         default:
                //             return num + ''
                //             break
                //     }
                // };
            });
        }
        //人物列表渲染

    }, {
        key: "figureRender",
        value: function figureRender(cell, idx) {
            var _this6 = this;

            console.log(cell.dataSource);
            cell.getChildByName("icon").skin = "local/common/" + cell.dataSource.roleDress + ".png";
            cell.getChildByName("bgwarp").visible = this.showDetail.roleId == cell.dataSource.roleId ? true : false;
            if (this.showDetail.roleId == cell.dataSource.roleId) {
                this.prole = cell;
                this.initInfo();
            }
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                if (_this6.isGuide) {
                    return;
                }
                _SoundManager2.default.ins.btn();
                _this6.prole.getChildByName("bgwarp").visible = false;
                _this6.prole = cell;
                _this6.showDetail = cell.dataSource;
                _this6.initInfo();
                cell.getChildByName("bgwarp").visible = true;
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            if (this.heroSkin) {
                this.heroSkin.stop();
                this.heroSkin.destroy();
                this.heroSkin = null;
            }
            this.removeChild(this.guideContainer);
        }
    }, {
        key: "guide1f",
        value: function guide1f(e) {
            var _this7 = this;

            if (this.guideBack) {
                this.guide1.visible = false;
                return;
            }
            var n = e == 1 ? -1 : 1;
            Laya.Tween.to(this.guide1, { x: this.guide1.x + 15 * n }, 300, null, Laya.Handler.create(this, function () {
                _this7.guide1f(n);
            }));
        }
    }, {
        key: "guide2f",
        value: function guide2f(e) {
            var _this8 = this;

            var n = e == 1 ? -1 : 1;
            Laya.Tween.to(this.guide2, { y: this.guide2.y + 15 * n }, 300, null, Laya.Handler.create(this, function () {
                _this8.guide2f(n);
            }));
        }
    }, {
        key: "graR",
        value: function graR(x, y, r) {
            this.sp.graphics.clear();
            this.sp.graphics.drawCircle(x, y, r, "#000000");
        }
    }]);

    return Swordsman;
}(PaoYa.View);

exports.default = Swordsman;

},{"../../../gamescripts/SoundManager":8,"../../../gamescripts/config/HeroConfig":10,"../tool/Global":55}],46:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwordsmanControl = function (_PaoYa$Component) {
    _inherits(SwordsmanControl, _PaoYa$Component);

    function SwordsmanControl() {
        _classCallCheck(this, SwordsmanControl);

        var _this = _possibleConstructorReturn(this, (SwordsmanControl.__proto__ || Object.getPrototypeOf(SwordsmanControl)).call(this));

        SwordsmanControl.ins = _this;
        return _this;
    }

    _createClass(SwordsmanControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            var _this2 = this;

            if (!this.owner) {
                return;
            }
            var owner = this.owner;
            switch (e.target.name) {
                case "benBack":
                    if (owner.isGuide && !owner.guideBack) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.postNotification("roleIdChanged", owner.params.defaultRole);
                    this.navigator.pop();
                    break;
                case "lvupbtn":
                    this.roleLevelUp();
                    break;
                case "equipbtn":
                    _SoundManager2.default.ins.btn();
                    this.changeRole();
                    break;
                case "buyBtn":
                    _SoundManager2.default.ins.btn();
                    this.navigator.popup("figure/BuyHero", owner.showDetail);
                    break;
                case "signGet":
                    _SoundManager2.default.ins.btn();
                    PaoYa.Request.GET("martial_login_bonus_list", {}, function (res) {
                        //console.log(res)
                        res.isFromSw = true;
                        if (!res) {
                            return;
                        }
                        _this2.navigator.push("Sign", res);
                    });
                    break;
                case "skill1":
                    if (owner.isGuide) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.showSkillDetail(0);
                    break;
                case "skill2":
                    if (owner.isGuide) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.showSkillDetail(1);
                    break;
                case "skill3":
                    if (owner.isGuide) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.showSkillDetail(2);
                    break;
            }
        }
    }, {
        key: "roleLevelUp",
        value: function roleLevelUp() {
            var _this3 = this;

            var owner = this.owner;
            var numNew = 0;
            if (owner.isGuide) {
                owner.guideBack = true;
                owner.isGuide = false;
                owner.removeChild(owner.guideContainer);
                _Global.Global.dataPoints('用户点击人物升级');
                numNew = 1;
            } else {
                if (owner.showDetail.roleLevel >= owner.showDetail.roleTopLevel) {
                    return;
                }
                if (Number(owner.needGoldNum.text) > PaoYa.DataCenter.user.gold) {
                    this.navigator.popup("weapon/GoldLack");
                    return;
                } else {
                    var obj = {
                        gold: PaoYa.DataCenter.user.gold - Number(owner.needGoldNum.text),
                        diamond: PaoYa.DataCenter.user.diamond
                    };
                    owner.changeHB(obj);
                }
            }
            PaoYa.Request.POST("martial_update_role", { roleId: owner.showDetail.roleId, newHand: numNew }, function (res) {
                _SoundManager2.default.ins.upgrade();
                owner.heroLvup.visible = true;
                owner.heroLvup.play(0, false);
                owner.params.roleList.forEach(function (element) {
                    if (element.roleId == res.role.roleId) {
                        for (var key in element) {
                            element[key] = res.role[key];
                        }
                        owner.showDetail = element;
                    }
                });
                owner.initInfo();

                if (res.unlock) {
                    var detail = null;
                    owner.showDetail.skills.forEach(function (element) {
                        if (element.status) {
                            detail = element;
                        }
                    });

                    _this3.navigator.popup("figure/GetNewSkill", detail);
                }
            });
        }
    }, {
        key: "changeRole",
        value: function changeRole() {
            var owner = this.owner;
            PaoYa.Request.POST("martial_change_role", { roleId: owner.showDetail.roleId }, function (res) {
                owner.params.defaultRole = res.roleId;
                owner.initInfo();
            });
        }
    }, {
        key: "showSkillDetail",
        value: function showSkillDetail(num) {
            var detail = this.owner.showDetail.skills[num];
            if (!detail) {
                return;
            }
            if (detail.status) {
                this.navigator.popup("figure/SkillDetail", detail);
            } else {
                this.navigator.popup("figure/SkillDetail", detail);
            }
        }
    }, {
        key: "openGetD",
        value: function openGetD() {
            this.navigator.popup("weapon/DiamondLack");
        }
    }]);

    return SwordsmanControl;
}(PaoYa.Component);

exports.default = SwordsmanControl;

},{"../../../gamescripts/SoundManager":8,"../tool/Global":55}],47:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DevourControl = require("./DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Refining = require("./Refining");

var _Refining2 = _interopRequireDefault(_Refining);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Devour = function (_PaoYa$View) {
    _inherits(Devour, _PaoYa$View);

    function Devour() {
        _classCallCheck(this, Devour);

        var _this = _possibleConstructorReturn(this, (Devour.__proto__ || Object.getPrototypeOf(Devour)).call(this));

        Devour.ins = _this;
        return _this;
    }

    _createClass(Devour, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            if (this.params.isGuide) {
                _DevourControl2.default.ins.getMask();
            }
            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     DevourControl.ins.navigator.pop()
            // })

            // this.eatBtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     DevourControl.ins.eatWp()
            // })

            // this.choiceBtn.on(Laya.Event.CLICK, this, () => {
            //     // this.curryExp.width = (this.params.refiner.currentExp / this.params.refiner.currentFullExp) * 224
            //     // this.nextExp.width = (this.params.refiner.currentExp / this.params.refiner.currentFullExp) * 224
            //     SoundManager.ins.btn()
            //     // if (DevourControl.ins.willBeEatList.length > 2) {
            //     //     return
            //     // }

            //     DevourControl.ins.chiocethreeWp()
            // })

            this.warehouseList.vScrollBarSkin = "";
            this.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this2.goldNum.width = null;

                PaoYa.DataCenter.user.gold = res.gold;
                PaoYa.DataCenter.user.diamond = res.diamond;
                var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);

                _this2.goldNum.text = goldnum;
                _this2.goldNum.font = "weaponNFontT";
                _this2.goldNum.scale(0.6, 0.6);
                _this2.goldNum.pos(365 + (149 - _this2.goldNum.width * 0.6) / 2, 25);
                _this2.diamondNum.text = diamondnum;
                _this2.diamondNum.font = "weaponNFontT";
                _this2.diamondNum.scale(0.6, 0.6);
                _this2.diamondNum.pos(600 + (149 - _this2.goldNum.width * 0.6) / 2, 25);

                function addNumberUnit(num) {
                    switch (true) {
                        case num >= 10000 && num < 100000000:
                            var integ = num / 10000;
                            return Math.floor(integ * 100) / 100 + '万';
                            break;
                        case num >= 100000000:
                            var integ1 = num / 100000000;
                            return Math.floor(integ1 * 100) / 100 + '亿';
                            break;
                        default:
                            return num + '';
                            break;
                    }
                };
            });

            this.title.text = this.params.refiner.refinerName;
            this.title.font = "weaponDFont";
            this.title.scale(0.8, 0.8);
            this.title.x = (411 - this.title.width) / 2;

            this.detail.text = this.params.refiner.refinerDesc;

            this.next.font = "weaponDFont";
            this.next.scale(0.6, 0.6);

            this.choiceTxt.font = "weaponDFont";
            this.choiceTxt.scale(0.6, 0.6);
            this.choiceTxt.pos(40, 13);

            this.eatTxt.font = "weaponDFont";
            this.eatTxt.scale(0.6, 0.6);
            this.eatTxt.pos(40, 13);

            _DevourControl2.default.ins.getWareList();
            this.initInfo();
        }
    }, {
        key: "onAppear",
        value: function onAppear() {
            if (!_Refining2.default.ins.isGuide) {
                this.guide2.visible = false;
                this.guide3.visible = false;
            }
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "initInfo",
        value: function initInfo() {
            this.pLv.text = "LV." + this.params.refiner.refinerLevel;
            this.pLv.font = "weaponDFont";
            this.pLv.scale(0.55, 0.55);
            this.pLv.pos(28, 20);

            // this.pd.fontSize = 20
            // this.add.fontSize = 20
            // this.pd2.fontSize = 20
            // this.pnd.fontSize = 20
            // this.pnd2.fontSize = 20
            // this.pnadd.fontSize = 20

            var nowaddtext = null;
            var arr = [];
            if (this.params.refiner.refinerEffect.indexOf("+") != -1) {
                if (this.params.refiner.refinerEffect.indexOf("%") != -1) {
                    arr = this.params.refiner.refinerEffect.split("+d%");
                    nowaddtext = "+" + (this.params.refiner.refinerBasics.show | 0) + "%";
                } else {
                    arr = this.params.refiner.refinerEffect.split("+d");
                    nowaddtext = "+" + (this.params.refiner.refinerBasics.show | 0);
                }
            } else {
                if (this.params.refiner.refinerEffect.indexOf("%") != -1) {
                    arr = this.params.refiner.refinerEffect.split("d%");
                    nowaddtext = (this.params.refiner.refinerBasics.show | 0) + "%";
                } else {
                    arr = this.params.refiner.refinerEffect.split("d");
                    nowaddtext = "" + (this.params.refiner.refinerBasics.show | 0);
                }
            }
            this.pd.text = arr[0];
            this.pd.x = 28;
            this.add.x = this.pd.width + this.pd.x;
            this.add.text = nowaddtext;
            this.pd2.text = arr[1];
            this.pd2.x = this.add.width + this.add.x;

            if (this.params.nextRefiner) {
                var nowaddtext2 = null;
                var arrr = [];
                if (this.params.nextRefiner.refinerEffect.indexOf("+") != -1) {
                    if (this.params.nextRefiner.refinerEffect.indexOf("%") != -1) {
                        arrr = this.params.nextRefiner.refinerEffect.split("+d%");
                        nowaddtext2 = "+" + (this.params.nextRefiner.refinerBasics.show | 0) + "%";
                    } else {
                        arrr = this.params.nextRefiner.refinerEffect.split("+d");
                        nowaddtext2 = "+" + (this.params.nextRefiner.refinerBasics.show | 0);
                    }
                } else {
                    if (this.params.nextRefiner.refinerEffect.indexOf("%") != -1) {
                        arrr = this.params.nextRefiner.refinerEffect.split("d%");
                        nowaddtext2 = (this.params.nextRefiner.refinerBasics.show | 0) + "%";
                    } else {
                        arrr = this.params.nextRefiner.refinerEffect.split("d");
                        nowaddtext2 = "" + (this.params.nextRefiner.refinerBasics.show | 0);
                    }
                }
                this.pnd.text = arrr[0];
                this.pnd.x = 28;
                this.pnadd.x = this.pnd.width + this.pnd.x;
                this.pnadd.text = nowaddtext2;
                this.pnd2.text = arr[1];
                this.pnd2.x = this.pnadd.width + this.pnadd.x;
            } else {
                this.eatBtn.disabled = true;
                this.choiceBtn.disabled = true;
                this.pnd.text = "";
                this.pnadd.text = "";
                this.pnd2.text = "";
            }

            this.curryExp.width = this.params.refiner.currentExp / this.params.refiner.currentFullExp * 224;
            this.nextExp.width = this.params.refiner.currentExp / this.params.refiner.currentFullExp * 224;
        }
    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, index) {
            console.log(this.warehouseList);
            _DevourControl2.default.ins.singleWeapon(cell, index);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _DevourControl2.default.ins.chioceWp(cell, index);
            });
        }
    }, {
        key: "guide2f",
        value: function guide2f(e) {
            var _this3 = this;

            var n = e == 1 ? -1 : 1;
            Laya.Tween.to(this.guide2, { x: this.guide2.x + 15 * n }, 300, null, Laya.Handler.create(this, function () {
                _this3.guide2f(n);
            }));
        }
    }, {
        key: "guide3f",
        value: function guide3f(e) {
            var _this4 = this;

            var n = e == 1 ? -1 : 1;
            Laya.Tween.to(this.guide3, { x: this.guide3.x + 15 * n }, 300, null, Laya.Handler.create(this, function () {
                _this4.guide3f(n);
            }));
        }
    }, {
        key: "nextP",
        value: function nextP() {
            this.guide2.visible = false;
            this.guide3.visible = true;
            this.guide3.zOrder = 2;
            this.guide3f(1);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            Laya.stage.removeChild(Devour.ins.guide2);
            Laya.stage.removeChild(Devour.ins.guide3);

            PaoYa.Request.GET("martial_refiner_list", {}, function (res) {
                //console.log(res)
                if (!res) {
                    return;
                }
                _Refining2.default.ins.params.refiner_list = res.refiner_list;
                _Refining2.default.ins.changeData();
            });
        }
    }]);

    return Devour;
}(PaoYa.View);

exports.default = Devour;

},{"../../../gamescripts/SoundManager":8,"./DevourControl":48,"./Refining":49}],48:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Refining = require("./Refining");

var _Refining2 = _interopRequireDefault(_Refining);

var _RefiningControl = require("./RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DevourControl = function (_PaoYa$Component) {
    _inherits(DevourControl, _PaoYa$Component);

    function DevourControl() {
        _classCallCheck(this, DevourControl);

        var _this = _possibleConstructorReturn(this, (DevourControl.__proto__ || Object.getPrototypeOf(DevourControl)).call(this));

        DevourControl.ins = _this;
        _this.willBeEatList = [];
        return _this;
    }

    _createClass(DevourControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "eatBtn":
                    _SoundManager2.default.ins.btn();
                    this.eatWp();
                    break;
                case "choiceBtn":
                    _SoundManager2.default.ins.btn();
                    this.chiocethreeWp();
            }
        }
    }, {
        key: "getWareList",
        value: function getWareList() {
            var _this2 = this;

            var owner = this.owner;
            this.lightList = owner.params.lightList;
            this.heavyList = owner.params.heavyList;
            this.middleList = owner.params.middleList;
            this.allList = this.lightList.concat(this.heavyList, this.middleList);

            this.myUserList = [];
            var arr = owner.params.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });

            this.showWareList(this.allList);
        }

        //仓库展示列表

    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            var unShowWeap = JSON.parse(JSON.stringify(this.myUserList));
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < unShowWeap.length; i++) {
                    if (element.weaponId == unShowWeap[i].name && element.weaponLevel == unShowWeap[i].lv) {
                        element.num -= 1;
                    }
                }

                for (var _i = 0; _i < element.num; _i++) {
                    var obj = JSON.parse(JSON.stringify(element));
                    obj.WpGrade = obj.weaponStar * 100 + obj.weaponLevel;
                    arr.push(obj);
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUsingWp && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }
            arr.sort(function (a, b) {
                return a.WpGrade - b.WpGrade;
            });
            this.isWareChoiceWp = null;
            this.newAllArr = arr;
            this.childList = [];
            this.idList = [];
            this.owner.warehouseList.array = arr;
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx) {
            this.childList.push(cell);

            cell.skin = "local/common/frameBg.png";

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;

            if (cell._dataSource.willBeEat) {
                cell.getChildByName("beChioce").visible = true;
            } else {
                cell.getChildByName("beChioce").visible = false;
            }
        }
        //是否选中操作

    }, {
        key: "chioceWp",
        value: function chioceWp(cell, index) {
            var owner = this.owner;
            if (cell._dataSource.willBeEat) {
                var _num = null;
                this.newAllArr[index].ischiocedd = false;
                this.willBeEatList.forEach(function (element, idx) {
                    if (element == index) {
                        _num = idx;
                    }
                });
                this.willBeEatList.splice(_num, 1);
                cell._dataSource.willBeEat = false;
                cell.getChildByName("beChioce").visible = false;
            } else {
                if (this.willBeEatList.length > 2) {
                    return;
                }
                this.newAllArr[index].ischiocedd = true;
                this.willBeEatList.push(index);
                cell._dataSource.willBeEat = true;
                cell.getChildByName("beChioce").visible = true;
            }

            var num = 0;
            var allnum = 0;
            this.childList.forEach(function (element, index) {
                if (allnum > 2) {
                    return;
                }
                if (element._dataSource.willBeEat) {
                    allnum++;
                    num += element._dataSource.exp;
                }
            });

            owner.curryExp.width = owner.nextExp.width + num / owner.params.refiner.currentFullExp * 224 > 224 ? 224 : owner.nextExp.width + num / owner.params.refiner.currentFullExp * 224;
        }
        //吞噬

    }, {
        key: "eatWp",
        value: function eatWp(e) {
            var _this3 = this;

            var owner = this.owner;
            if (this.willBeEatList.length < 1) {
                return;
            }

            var idlist = "";
            var isHigh = false,
                highDeatil = void 0;
            var addexp = 0;
            this.willBeEatList.forEach(function (element) {
                if (_this3.newAllArr[element].weaponStar == 3 && !e) {
                    isHigh = true;
                    highDeatil = _this3.newAllArr[element];
                }
                addexp += _this3.newAllArr[element].exp;
                idlist = "" + idlist + _this3.newAllArr[element].weaponId + "-" + _this3.newAllArr[element].weaponLevel + ",";
            });

            if (isHigh) {
                var obj = {
                    detail: highDeatil,
                    type: "refining"
                };
                this.navigator.popup("weapon/StoreSure", obj);
                return;
            }

            PaoYa.Request.POST("martial_update_refiner", { weaponId: idlist, refinerId: owner.params.refiner.id, addExp: addexp }, function (res) {
                if (res.refiner) {
                    owner.params.refiner = res.refiner;
                    owner.params.nextRefiner = res.nextRefiner;
                    _Refining2.default.ins.params.refiner_list[_Refining2.default.ins.ReIndex] = owner.params.refiner;
                } else {
                    owner.params.refiner.currentExp = res.totalExp;
                }
                owner.initInfo();
                var arr2 = [];
                _this3.newAllArr.forEach(function (element, idx) {
                    if (!element.ischiocedd) {
                        arr2.push(element);
                    }
                });
                _this3.willBeEatList = [];
                _this3.childList = [];
                _this3.newAllArr = arr2;
                owner.warehouseList.array = arr2;
            });
        }
        //一键选中

    }, {
        key: "chiocethreeWp",
        value: function chiocethreeWp() {
            var _this4 = this;

            var owner = this.owner;
            this.childList.forEach(function (element, index) {
                if (element.ischiocedd) {
                    _this4.chioceWp(element, index);
                }
            });

            owner.warehouseList.tweenTo(0, 200, Laya.Handler.create(this, function () {
                for (var i = 0; i < 3; i++) {
                    if (_this4.childList[i]) {
                        _this4.chioceWp(_this4.childList[i], i);
                    }
                }
            }));
        }
    }, {
        key: "getMask",
        value: function getMask() {
            var _this5 = this;

            var owner = this.owner;
            this.guideStep = 1;
            this.guideSteps = [{ x: 120, y: 3, radius: 53 }, { x: 143, y: 0, radius: 90 }, { x: 143, y: 0, radius: 90 }];

            var Sprite = Laya.Sprite;

            owner.guide2.zOrder = 2;
            owner.guide2.visible = true;
            owner.guide2f(1);

            _RefiningControl2.default.ins.sceondStep();
            // 绘制底图
            this.gameContainer = new Sprite();
            this.gameContainer.size(1634, 750);
            this.gameContainer.pos(-150, 0);
            this.gameContainer.mouseEnabled = true;
            owner.addChild(this.gameContainer);
            this.gameContainer.on(Laya.Event.CLICK, this, function () {
                switch (_this5.guideStep) {
                    case 0:
                        _Global.Global.dataPoints('点击淬体');
                        _RefiningControl2.default.ins.addLv(owner.params.refiner_list[0]);
                        break;
                    case 1:
                        owner.nextP();
                        _SoundManager2.default.ins.btn();
                        _this5.guideStep = 2;
                        _this5.chiocethreeWp();
                        _this5.nextStep(owner.guide3);
                        _Global.Global.dataPoints('点击一键选中');
                        break;
                    case 2:
                        _SoundManager2.default.ins.btn();
                        _this5.eatWp();
                        _this5.guideStep = 3;
                        _this5.isGuide = false;
                        _this5.nextStep();
                        owner.guide3.visible = false;
                        _Global.Global.dataPoints('点击吞噬升级');
                        _Global.Global.isShowGrading = true;
                        break;
                }
            });

            // 引导所在容器
            this.guideContainer = new Sprite();
            owner.addChild(this.guideContainer);
            this.guideContainer.cacheAs = "bitmap";

            // 绘制遮罩区，含透明度，可见游戏背景
            this.maskArea = new Sprite();
            this.guideContainer.addChild(this.maskArea);
            this.maskArea.alpha = 0.5;
            this.maskArea.graphics.drawRect(-150, 0, 1634, 750, "#000");

            // 绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
            this.interactionArea = new Sprite();
            this.guideContainer.addChild(this.interactionArea);
            // 设置叠加模式
            this.interactionArea.blendMode = "destination-out";

            // 设置点击区域
            this.hitArea = new Laya.HitArea();
            this.hitArea.hit.drawRect(-150, 0, 1634, 750, "#000");
            this.guideContainer.hitArea = this.hitArea;
            this.guideContainer.mouseEnabled = true;

            this.nextStep(owner.guide2);
        }
    }, {
        key: "sceondStep",
        value: function sceondStep() {
            this.owner.guide1.visible = false;
            _SoundManager2.default.ins.btn();
            this.guideStep = 1;
            this.nextStep(Devour.ins.guide2);
        }
    }, {
        key: "nextStep",
        value: function nextStep(obj) {
            var owner = this.owner;
            if (this.guideStep === this.guideSteps.length) {
                owner.removeChild(this.guideContainer);
                owner.removeChild(this.gameContainer);
                owner.guide2.visible = false;
                owner.guide3.visible = false;
                _Refining2.default.ins.isGuide = false;
                return;
            }
            var step = this.guideSteps[this.guideStep];

            this.hitArea.unHit.clear();
            this.hitArea.unHit.drawCircle(obj.x + step.x, obj.y + step.y, step.radius, "#000000");

            this.interactionArea.graphics.clear();
            this.interactionArea.graphics.drawCircle(obj.x + step.x, obj.y + step.y, step.radius, "#000000");
        }
    }]);

    return DevourControl;
}(PaoYa.Component);

exports.default = DevourControl;

},{"../../../gamescripts/SoundManager":8,"../tool/Global":55,"./Refining":49,"./RefiningControl":50}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RefiningControl = require("./RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Refining = function (_PaoYa$View) {
    _inherits(Refining, _PaoYa$View);

    function Refining() {
        _classCallCheck(this, Refining);

        var _this = _possibleConstructorReturn(this, (Refining.__proto__ || Object.getPrototypeOf(Refining)).call(this));

        Refining.ins = _this;
        return _this;
    }

    _createClass(Refining, [{
        key: "onAwake",
        value: function onAwake() {
            this.isGuide = this.params.isGuide;
            this.params = this.params.detail;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            _Global.Global.dataPoints('进入炼器页面');
            this.changeData();
            if (this.isGuide) {
                _RefiningControl2.default.ins.getMask();
                PaoYa.Request.POST("martial_change_new_hand", { type: "refinerNew" });
            }
            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     RefiningControl.ins.navigator.pop()
            // })

            // this.figure.on(Laya.Event.CLICK, this, () => {
            //     if (this.figureD.visible) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     this.figure.skin = `remote/refining/4.png`
            //     this.weopon.skin = `remote/refining/5.png`

            //     this.figureD.visible = true
            //     this.weoponD.visible = false
            // })

            // this.weopon.on(Laya.Event.CLICK, this, () => {
            //     if (this.weoponD.visible) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     this.figure.skin = `remote/refining/2.png`
            //     this.weopon.skin = `remote/refining/3.png`

            //     this.figureD.visible = false
            //     this.weoponD.visible = true
            // })
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "changeData",
        value: function changeData() {
            var _this2 = this;

            if (!this.isGuide) {
                this.guide1.visible = false;
            }
            this.params.refiner_list.forEach(function (element, index) {
                _this2[element.id + "Txt"].text = element.refinerName;
                _this2[element.id + "Txt"].font = "weaponDFont";
                _this2[element.id + "Txt"].scale(0.60, 0.60);
                _this2[element.id + "Txt"].pos(35, 12);

                _this2[element.id + "Lv"].text = element.refinerLevel ? "LV." + element.refinerLevel : "LV.1";
                _this2[element.id + "Lv"].font = "weaponNFontT";
                _this2[element.id + "Lv"].scale(0.5, 0.5);
                _this2[element.id + "Lv"].pos(26, 93);

                _this2["" + element.id].gray = element.status ? false : true;
                _this2["" + element.id].offAll();
                _this2["" + element.id].on(Laya.Event.CLICK, _this2, function () {
                    _SoundManager2.default.ins.btn();
                    _this2.ReIndex = index;
                    _RefiningControl2.default.ins.addLv(element);
                });
            });
        }
    }, {
        key: "guide1f",
        value: function guide1f(e) {
            var _this3 = this;

            var n = e == 1 ? -1 : 1;
            Laya.Tween.to(this.guide1, { x: this.guide1.x + 15 * n }, 300, null, Laya.Handler.create(this, function () {
                _this3.guide1f(n);
            }));
        }
    }]);

    return Refining;
}(PaoYa.View);

exports.default = Refining;

},{"../../../gamescripts/SoundManager":8,"../tool/Global":55,"./RefiningControl":50}],50:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Devour = require("./Devour");

var _Devour2 = _interopRequireDefault(_Devour);

var _Global = require("../tool/Global");

var _HomeControl = require("../HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RefiningControl = function (_PaoYa$Component) {
    _inherits(RefiningControl, _PaoYa$Component);

    function RefiningControl() {
        _classCallCheck(this, RefiningControl);

        var _this = _possibleConstructorReturn(this, (RefiningControl.__proto__ || Object.getPrototypeOf(RefiningControl)).call(this));

        RefiningControl.ins = _this;
        return _this;
    }

    _createClass(RefiningControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            var owner = this.owner;
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "figure":
                    if (owner.figureD.visible) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    owner.figure.skin = "remote/refining/4.png";
                    owner.weopon.skin = "remote/refining/5.png";

                    owner.figureD.visible = true;
                    owner.weoponD.visible = false;
                    break;
                case "weopon":
                    if (owner.weoponD.visible) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    owner.figure.skin = "remote/refining/2.png";
                    owner.weopon.skin = "remote/refining/3.png";

                    owner.figureD.visible = false;
                    owner.weoponD.visible = true;
                    break;
            }
        }
    }, {
        key: "addLv",
        value: function addLv(e) {
            var _this2 = this;

            if (e.status) {
                this.POST("martial_user_weapon_list", { refinerId: e.id }, function (data) {
                    data.isGuide = _this2.owner.isGuide;
                    _this2.navigator.push("Devour", data);
                });
            } else {
                this.navigator.popup("refiner/Canlock", e);
            }
        }
    }, {
        key: "getMask",
        value: function getMask() {
            var _this3 = this;

            var owner = this.owner;
            owner.guide1.visible = true;
            _Global.Global.dataPoints('进入炼器引导');
            this.guideStep = 0;
            this.guideSteps = [{ x: 120, y: 3, radius: 53 }];

            var Sprite = Laya.Sprite;

            // 绘制底图
            this.gameContainer = new Sprite();
            this.gameContainer.size(1634, 750);
            this.gameContainer.pos(-150, 0);
            this.gameContainer.mouseEnabled = true;
            owner.addChild(this.gameContainer);
            this.gameContainer.on(Laya.Event.CLICK, this, function () {
                switch (_this3.guideStep) {
                    case 0:
                        _this3.addLv(owner.params.refiner_list[0]);
                        _Global.Global.dataPoints('点击淬体');
                        break;
                    case 1:
                        _Global.Global.dataPoints('点击一键选中');
                        _Devour2.default.ins.nextP();
                        _SoundManager2.default.ins.btn();
                        _this3.guideStep = 2;
                        DevourControl.ins.chiocethreeWp();
                        _this3.nextStep(_Devour2.default.ins.guide3);
                        break;
                    case 2:
                        _Global.Global.dataPoints('点击吞噬升级');
                        _SoundManager2.default.ins.btn();
                        DevourControl.ins.eatWp();
                        _this3.guideStep = 3;
                        _this3.isGuide = false;
                        _this3.nextStep();
                        _Devour2.default.ins.guide3.visible = false;
                        _Global.Global.isShowGrading = true;
                        break;
                }
            });

            // 引导所在容器
            this.guideContainer = new Sprite();
            owner.addChild(this.guideContainer);
            this.guideContainer.cacheAs = "bitmap";

            owner.guide1.zOrder = 2;
            owner.guide1f(1);

            // 绘制遮罩区，含透明度，可见游戏背景
            this.maskArea = new Sprite();
            this.guideContainer.addChild(this.maskArea);
            this.maskArea.alpha = 0.5;
            this.maskArea.graphics.drawRect(-150, 0, 1634, 750, "#000");

            // 绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
            this.interactionArea = new Sprite();
            this.guideContainer.addChild(this.interactionArea);
            // 设置叠加模式
            this.interactionArea.blendMode = "destination-out";

            // 设置点击区域
            this.hitArea = new Laya.HitArea();
            this.hitArea.hit.drawRect(-150, 0, 1634, 750, "#000");
            this.guideContainer.hitArea = this.hitArea;
            this.guideContainer.mouseEnabled = true;

            this.nextStep(owner.guide1);
        }
    }, {
        key: "sceondStep",
        value: function sceondStep() {
            this.owner.guide1.visible = false;
            this.guideStep = 1;
            this.nextStep(_Devour2.default.ins.guide2);
        }
    }, {
        key: "nextStep",
        value: function nextStep(obj) {
            var owner = this.owner;
            if (this.guideStep === this.guideSteps.length) {
                owner.removeChild(this.guideContainer);
                owner.removeChild(this.gameContainer);
                owner.guide1.visible = false;
                return;
            }
            var step = this.guideSteps[this.guideStep];

            this.hitArea.unHit.clear();
            this.hitArea.unHit.drawCircle(obj.x + step.x, obj.y + step.y, step.radius, "#000000");

            this.interactionArea.graphics.clear();
            this.interactionArea.graphics.drawCircle(obj.x + step.x, obj.y + step.y, step.radius, "#000000");
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            if (_Global.Global.isShowGrading) {
                _HomeControl2.default.ins.lockBattle();
            }
        }
    }]);

    return RefiningControl;
}(PaoYa.Component);

exports.default = RefiningControl;

},{"../../../gamescripts/SoundManager":8,"../HomeControl":38,"../tool/Global":55,"./Devour":47}],51:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require("../tool/Global");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Sign = function (_PaoYa$View) {
    _inherits(Sign, _PaoYa$View);

    function Sign() {
        _classCallCheck(this, Sign);

        var _this = _possibleConstructorReturn(this, (Sign.__proto__ || Object.getPrototypeOf(Sign)).call(this));

        Sign.ins = _this;
        return _this;
    }

    _createClass(Sign, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            _Global.Global.dataPoints('进入签到页面');
            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     SignControl.ins.navigator.pop()
            // })
            this.initInfo();
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "initInfo",
        value: function initInfo() {
            this.params.login_days = this.params.login_days % 7;
            var arr = this.params.list.slice(0, 6);
            var arr1 = this.params.list.slice(6, 7);
            this.signList.vScrollBarSkin = "";
            this.signList.renderHandler = new Laya.Handler(this, this.signListItem);
            this.signList.array = arr;
            this.sevenDay.dataSource = arr1[0];
            this.signListItem(this.sevenDay, 6);

            if (this.params.status) {
                this.showtips.visible = true;
                this.showBtn.visible = false;
                this.video.visible = false;

                this.tips.font = "figureDetail";
                this.tips.scale(0.8, 0.8);
            } else {
                this.showtips.visible = false;
                this.showBtn.visible = true;
                this.video.visible = true;

                this.eatTxt.font = "weaponDFont";
                this.eatTxt.scale(0.6, 0.6);
                this.eatTxt.pos(35, 13);

                // this.eatTxt.on(Laya.Event.CLICK, this, () => {
                //     SoundManager.ins.btn()
                //     // let title = PaoYa.DataCenter.config.game.share_list.randomItem;
                //     // PaoYa.ShareManager.shareTitle(title, {}, () => {
                //     //     SignControl.ins.getAward()
                //     // })
                //     Global.dataPoints('签到激励广告')
                //     Tool.showVideoAD(()=>{
                //         SignControl.ins.getAward()
                //     })
                // })
            }
        }
    }, {
        key: "signListItem",
        value: function signListItem(cell, index) {
            var arr = cell.dataSource.split("-");
            var wp = cell.getChildByName("wp");
            var icon = cell.getChildByName("icon");
            var awardImage = cell.getChildByName("awardImage");
            var num = cell.getChildByName("num");
            var day = cell.getChildByName("day");
            var choice = cell.getChildByName("choice");
            var mask = cell.getChildByName("mask1");
            var already = cell.getChildByName("already");

            if (index + 1 > this.params.login_days) {
                mask.visible = false;
            } else {
                mask.visible = true;
                already.visible = true;
            }

            if (index == this.params.login_days && !this.params.status) {
                choice.visible = true;
            }

            day.text = "\u7B2C" + (index + 1) + "\u5929";
            day.font = "weaponNFontT";
            day.scale(0.75, 0.75);
            day.pos(31, 235);

            switch (arr[0]) {
                case "1":
                    wp.getChildByName("wp").skin = "local/common/wp.png";
                    wp.visible = true;
                    break;
                case "2":
                    icon.visible = true;
                    icon.getChildByName("iconnum").skin = "local/common/hero_" + arr[1] + ".png";
                    console.log(icon);
                    break;
                case "3":
                    wp.getChildByName("wp").skin = "local/common/wp.png";
                    wp.visible = true;
                    break;
                case "8":
                    awardImage.visible = true;
                    num.visible = true;
                    awardImage.skin = "local/common/icon.png";
                    num.text = "\xD7" + arr[1];
                    num.font = "weaponNFontT";
                    num.scale(0.65, 0.65);
                    num.pos(28, 175);
                    break;
                case "9":
                    awardImage.visible = true;
                    num.visible = true;
                    awardImage.skin = "local/common/diamond.png";
                    num.text = "\xD7" + arr[1];
                    num.font = "weaponNFontT";
                    num.scale(0.65, 0.65);
                    num.pos(28, 175);
                    break;
            }
        }
    }]);

    return Sign;
}(PaoYa.View);

exports.default = Sign;

},{"../tool/Global":55}],52:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Swordsman = require("../figure/Swordsman");

var _Swordsman2 = _interopRequireDefault(_Swordsman);

var _HomeControl = require("../HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Tool = require("../tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SignControl = function (_PaoYa$Component) {
    _inherits(SignControl, _PaoYa$Component);

    function SignControl() {
        _classCallCheck(this, SignControl);

        var _this = _possibleConstructorReturn(this, (SignControl.__proto__ || Object.getPrototypeOf(SignControl)).call(this));

        SignControl.ins = _this;
        return _this;
    }

    _createClass(SignControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            console.log(this.owner.params);
        }
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            var _this2 = this;

            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "eatTxt":
                    _Global.Global.dataPoints('签到激励广告');
                    _Tool2.default.showVideoAD(function () {
                        _this2.getAward();
                    });
                    break;
            }
        }
    }, {
        key: "getAward",
        value: function getAward() {
            var _this3 = this;

            PaoYa.Request.POST("martial_login_bonus_receive", { adv: 0 }, function (res) {
                PaoYa.DataCenter.user.loginBonusStatus = false;
                var obj = {
                    type: "sign",
                    detail: res
                };
                _this3.navigator.popup("common/Award", obj);
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            if (this.owner.params.isFromSw) {
                this.GET("martial_role_list", {}, function (res) {
                    _Swordsman2.default.ins.params.roleList = res.roleList;
                    // Swordsman.ins.params.roleList.splice(2, 1)
                    _Swordsman2.default.ins.showDetail = res.roleList[1];
                    _Swordsman2.default.ins.herolist.array = _Swordsman2.default.ins.params.roleList;
                });
            }
        }
    }]);

    return SignControl;
}(PaoYa.Component);

exports.default = SignControl;

},{"../../../gamescripts/SoundManager":8,"../HomeControl":38,"../figure/Swordsman":45,"../tool/Global":55,"../tool/Tool":56}],53:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponListControl = require("./WeaponListControl");

var _WeaponListControl2 = _interopRequireDefault(_WeaponListControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponList = function (_PaoYa$View) {
    _inherits(WeaponList, _PaoYa$View);

    function WeaponList() {
        _classCallCheck(this, WeaponList);

        return _possibleConstructorReturn(this, (WeaponList.__proto__ || Object.getPrototypeOf(WeaponList)).call(this));
    }

    _createClass(WeaponList, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this2.goldNum.width = null;

                PaoYa.DataCenter.user.gold = res.gold;
                PaoYa.DataCenter.user.diamond = res.diamond;
                var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);

                _this2.goldNum.text = goldnum;
                _this2.goldNum.font = "weaponNFontT";
                _this2.goldNum.scale(0.6, 0.6);
                _this2.goldNum.pos(365 + (149 - _this2.goldNum.width * 0.6) / 2, 25);
                _this2.diamondNum.text = diamondnum;
                _this2.diamondNum.font = "weaponNFontT";
                _this2.diamondNum.scale(0.6, 0.6);
                _this2.diamondNum.pos(600 + (149 - _this2.diamondNum.width * 0.6) / 2, 25);

                function addNumberUnit(num) {
                    switch (true) {
                        case num >= 10000 && num < 100000000:
                            var integ = num / 10000;
                            return Math.floor(integ * 100) / 100 + '万';
                            break;
                        case num >= 100000000:
                            var integ1 = num / 100000000;
                            return Math.floor(integ1 * 100) / 100 + '亿';
                            break;
                        default:
                            return num + '';
                            break;
                    }
                };
            });

            this.warehouseList.vScrollBarSkin = "";
            this.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);
            this.getWareBtnSkin("light");
            _WeaponListControl2.default.ins.showWareList(this.params.lightList);

            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     WeaponListControl.ins.navigator.pop()
            // })

            // this.light.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`light`)
            //     WeaponListControl.ins.showWareList(this.params.lightList)
            // })

            // this.middle.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`middle`)
            //     WeaponListControl.ins.showWareList(this.params.middleList)
            // })

            // this.large.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`large`)
            //     WeaponListControl.ins.showWareList(this.params.heavyList)
            // })
        }
    }, {
        key: "getWareBtnSkin",
        value: function getWareBtnSkin(name) {
            var _this3 = this;

            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3[element].skin = "remote/weaponhouse/14.png";
            });
            this[name].skin = "remote/weaponhouse/13.png";
        }
    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, index) {
            _WeaponListControl2.default.ins.wareWeaponUpdateItem(cell, index);
        }
    }]);

    return WeaponList;
}(PaoYa.View);

exports.default = WeaponList;

},{"../../../gamescripts/SoundManager":8,"./WeaponListControl":54}],54:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponListControl = function (_PaoYa$Component) {
    _inherits(WeaponListControl, _PaoYa$Component);

    function WeaponListControl() {
        _classCallCheck(this, WeaponListControl);

        var _this = _possibleConstructorReturn(this, (WeaponListControl.__proto__ || Object.getPrototypeOf(WeaponListControl)).call(this));

        WeaponListControl.ins = _this;
        return _this;
    }

    _createClass(WeaponListControl, [{
        key: "onAwake",
        value: function onAwake() {
            this.currentMyUserIdx = 0;
            this.currentMyUserWeapDetail = null;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "light":
                    _SoundManager2.default.ins.btn();
                    this.owner.getWareBtnSkin("light");
                    this.showWareList(this.owner.params.lightList);
                    break;
                case "middle":
                    _SoundManager2.default.ins.btn();
                    this.owner.getWareBtnSkin("middle");
                    this.showWareList(this.owner.params.middleList);
                    break;
                case "large":
                    _SoundManager2.default.ins.btn();
                    this.owner.getWareBtnSkin("large");
                    this.showWareList(this.owner.params.heavyList);
                    break;
            }
        }
    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            showList.forEach(function (element) {
                if (element.weaponStar < 4) {
                    arr.push(element);
                }
            });
            this.owner.warehouseList.array = arr;
        }

        //仓库武器渲染

    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, idx) {
            var _this2 = this;

            // console.log(cell, idx)
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                if (_this2.isWareChoiceWp) {
                    _this2.isWareChoiceWp.getChildByName("beChioce").visible = false;
                    _this2.isWareChoiceWp.skin = "local/common/frameBg.png";
                    _this2.isWareChoiceWp = cell;
                }
                cell.getChildByName("beChioce").visible = true;
                // console.log(cell.getChildByName(`beChioce`),123)
                cell.skin = "local/common/currutFrameBg.png";
                _this2.currentMyUserWeapDetail = cell._dataSource;
                _this2.renderCenterData();
            });
            this.singleWeapon(cell, idx);
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;
            //选定渲染

            if (idx == this.currentMyUserIdx) {
                this.currentMyUserWeapDetail = cell._dataSource;
                this.isWareChoiceWp = cell;
                cell.skin = "local/common/currutFrameBg.png";
                cell.getChildByName("beChioce").visible = true;
                this.renderCenterData();
            }

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }

        //渲染详情部分

    }, {
        key: "renderCenterData",
        value: function renderCenterData() {
            var _this3 = this;

            this.owner["skillImg_1"].visible = false;
            this.owner["skillImg_2"].visible = false;
            var detail = this.currentMyUserWeapDetail;
            this.owner.showWeapon.skin = "remote/small_weapons/s_" + detail.weaponId + ".png";
            // this.owner.currtWeaponLevel.text = `LV.${detail.weaponLevel}`
            // this.owner.currtWeaponLevel.font = `weaponNFontT`
            // this.owner.currtWeaponLevel.scale(0.7, 0.7)
            //选择重置
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3.owner[element].skin = "remote/weaponhouse/14.png";
            });
            //兵器展示
            var skinq = "";
            var skint = "";
            var wareList = [];
            switch (detail.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (detail.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    this.owner.large.skin = "remote/weaponhouse/13.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    this.owner.middle.skin = "remote/weaponhouse/13.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    this.owner.light.skin = "remote/weaponhouse/13.png";
                    break;
            }
            this.owner.showWrap.skin = skinq;
            this.owner.showMark.skin = skint;

            this.owner.wpinfo.text = detail.weaponIcon;
            //兵器属性
            this.owner.currutWeapon.text = detail.weaponName;
            this.owner.currutWeapon.font = "weaponDFont";
            this.owner.currutWeapon.scale(0.8, 0.8);

            this.owner.CDTime.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            this.owner.CDTime.font = "weaponNFontT";
            this.owner.CDTime.scale(0.7, 0.7);

            this.owner.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            this.owner.addattackNum.visible = detail.weaponUpAttack ? true : false;
            this.owner.addattackNum.text = "+" + detail.weaponUpAttack;
            this.owner.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            this.owner.addenduranceNum.visible = detail.weaponUpDurable ? true : false;
            this.owner.addenduranceNum.text = "+" + detail.weaponUpDurable;
            this.owner.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            this.owner.addconsumeNum.visible = detail.weaponDownConsume ? true : false;
            this.owner.addconsumeNum.text = "-" + detail.weaponDownConsume;
            this.owner.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";
            //兵器技能
            this.owner["skillName_1"].text = "";
            this.owner["skillGl_1"].text = "";
            this.owner["skillDetail_1"].text = "";
            this.owner["skillImg_1"].visible = false;
            this.owner["skillName_2"].text = "";
            this.owner["skillGl_2"].text = "";
            this.owner["skillDetail_2"].text = "";
            this.owner["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    _this3.owner["skillName_" + (index + 1)].color = "#4a4948";
                    _this3.owner["skillGl_" + (index + 1)].color = "#4a4948";
                    _this3.owner["skillDetail_" + (index + 1)].color = "#4a4948";
                    _this3.owner["skillName_" + (index + 1)].text = element.skillName;
                    _this3.owner["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    _this3.owner["skillDetail_" + (index + 1)].text = element.skillDesc;
                    _this3.owner["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        _this3.owner["skillName_" + (index + 1)].color = "#004418";
                        _this3.owner["skillGl_" + (index + 1)].color = "#004418";
                        _this3.owner["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }
        }
    }]);

    return WeaponListControl;
}(PaoYa.Component);

exports.default = WeaponListControl;

},{"../../../gamescripts/SoundManager":8}],55:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Global = undefined;

var _Config = require("../../../Config");

var _Config2 = _interopRequireDefault(_Config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Global = {
    baseUrl: "https://xgamejuedixiaomie.goxiaochengxu.cn/1005/",
    remoteUrl: '',
    skTemplate: {},
    shareNum: 0,
    shareNumSuc: 0,
    shareNumFail: 0,
    AdaptiveWidth: 0,
    gameHeight: null,
    isShowGrading: false,
    wpGuide: {
        userWeapons: "d001_1-1,z001_1-1,g001_1-1",
        lightList: [{
            "exp": 0,
            "num": 1,
            "skills": [{
                "skillCd": 0.0,
                "skillConfig": {
                    "weaponNum": 2
                },
                "skillDesc": "发出2件兵器",
                "skillId": 43,
                "skillLevel": 1,
                "skillName": "双刃",
                "skillProb": 18,
                "skillType": 1,
                "skillUnlock": 0,
                "status": 0
            }],
            "upgradeCost": 150,
            "weaponAttack": 20.0,
            "weaponCd": 2.0,
            "weaponConsume": 25.0,
            "weaponDownConsume": 0,
            "weaponDurable": 10,
            "weaponIcon": "一把极其普通的铜匕首，布满斑驳的铜锈，村口后山随手都可以捡到。",
            "weaponId": "d001_1",
            "weaponLevel": 1,
            "weaponName": "铜匕首",
            "weaponPrice": 1000,
            "weaponSalePrice": 200,
            "weaponSkills": "43",
            "weaponStar": 1,
            "weaponTopLevel": 5,
            "weaponType": 1,
            "weaponUpAttack": 0,
            "weaponUpDurable": 0
        }, {
            "exp": 0,
            "num": 1,
            "skills": [{
                "skillCd": 0.0,
                "skillConfig": {
                    "critHarm": 5,
                    "critProb": 1
                },
                "skillDesc": "暴击+1%，爆伤+5%",
                "skillId": 63,
                "skillLevel": 1,
                "skillName": "灵巧",
                "skillProb": 100,
                "skillType": 0,
                "skillUnlock": 0,
                "status": 0
            }],
            "upgradeCost": 0,
            "weaponAttack": 23.0,
            "weaponCd": 1.8,
            "weaponConsume": 16.0,
            "weaponDownConsume": 0,
            "weaponDurable": 10,
            "weaponIcon": "一把用黄金打造的匕首，想必原主人一定十分阔气。",
            "weaponId": "d003_1",
            "weaponLevel": 1,
            "weaponName": "黄金匕首",
            "weaponPrice": 0,
            "weaponSalePrice": 300,
            "weaponSkills": "63",
            "weaponStar": 1,
            "weaponTopLevel": 5,
            "weaponType": 1,
            "weaponUpAttack": 0,
            "weaponUpDurable": 0,
            "willBeUse": 1
        }],
        middleList: [{
            "exp": 0,
            "num": 1,
            "skills": [{
                "skillCd": 0.0,
                "skillConfig": {
                    "stealHp": 1
                },
                "skillDesc": "100%伤害转化为生命",
                "skillId": 53,
                "skillLevel": 1,
                "skillName": "嗜血",
                "skillProb": 18,
                "skillType": 1,
                "skillUnlock": 0,
                "status": 0
            }],
            "upgradeCost": 150,
            "weaponAttack": 38.0,
            "weaponCd": 3.0,
            "weaponConsume": 25.0,
            "weaponDownConsume": 0,
            "weaponDurable": 10,
            "weaponIcon": "一把极其普通的铁剑，布满斑驳的铁锈，习武之人的入门兵器。",
            "weaponId": "z001_1",
            "weaponLevel": 1,
            "weaponName": "铁剑",
            "weaponPrice": 1000,
            "weaponSalePrice": 200,
            "weaponSkills": "53",
            "weaponStar": 1,
            "weaponTopLevel": 5,
            "weaponType": 2,
            "weaponUpAttack": 0,
            "weaponUpDurable": 0
        }],
        heavyList: [{
            "exp": 0,
            "num": 1,
            "skills": [{
                "skillCd": 0.0,
                "skillConfig": {
                    "hurt": 1.5
                },
                "skillDesc": "造成1.5倍伤害",
                "skillId": 56,
                "skillLevel": 1,
                "skillName": "重击",
                "skillProb": 15,
                "skillType": 1,
                "skillUnlock": 0,
                "status": 0
            }],
            "upgradeCost": 150,
            "weaponAttack": 57.0,
            "weaponCd": 4.0,
            "weaponConsume": 39.0,
            "weaponDownConsume": 0,
            "weaponDurable": 10,
            "weaponIcon": "砍树常用的斧子，当然也可以用来砍人。",
            "weaponId": "g001_1",
            "weaponLevel": 1,
            "weaponName": "铁斧",
            "weaponPrice": 1000,
            "weaponSalePrice": 200,
            "weaponSkills": "56",
            "weaponStar": 1,
            "weaponTopLevel": 5,
            "weaponType": 3,
            "weaponUpAttack": 0,
            "weaponUpDurable": 0
        }],
        shareGrid: 0,
        weaponGridNum: 3,
        buyGrid: 0
    },
    skBank: {},
    getTemplate: function getTemplate(cb) {
        for (var key in this.skBank) {
            if (this.skTemplate[key]) {} else {
                skLoading.call(this, key);
            }
        }

        function skLoading(key) {
            var _this = this;

            var mFactory = new Laya.Templet();
            mFactory.on(Laya.Event.COMPLETE, this, function () {
                parseComplete.call(_this, mFactory, key);
            });
            mFactory.loadAni(this.skBank[key]);
        }

        function parseComplete(mFactory, key) {
            this.skTemplate[key] = mFactory;
            if (key == "getheroY") {
                cb && cb();
            }
        }
    },

    /**
     * 
     * @param {*} key String SK名
     * @param {*} cb 回调
     */
    appointSk: function appointSk(caller, key, cb) {
        var _this2 = this;

        if (this.skTemplate[key]) {
            cb && cb.call(caller, this.skTemplate[key]);
        } else {
            var _parseComplete = function _parseComplete(mFactory, key) {
                this.skTemplate[key] = mFactory;
                cb && cb.call(caller, this.skTemplate[key]);
            };

            var mFactory = new Laya.Templet();
            mFactory.on(Laya.Event.COMPLETE, this, function () {
                _parseComplete.call(_this2, mFactory, key);
            });
            mFactory.loadAni(this.skBank[key]);
        }
    },
    regFont: function regFont() {
        var weaponDFont = new Laya.BitmapFont();
        weaponDFont.loadFont('font/weapon/detailfont.fnt', Laya.Handler.create(this, function () {
            Laya.Text.registerBitmapFont('weaponDFont', weaponDFont);
        }));

        var weaponNFontT = new Laya.BitmapFont();
        weaponNFontT.loadFont('font/weapon/lvfont.fnt', Laya.Handler.create(this, function () {
            Laya.Text.registerBitmapFont('weaponNFontT', weaponNFontT);
        }));
    },
    dataPoints: function dataPoints(data, obj)
    //data汉字说明比如  点击数
    //obj  比如  { points: "39,40" }
    {
        if (_Config2.default.debug) {
            return;
        }
        if (obj) {
            PaoYa.Request.POST("game_point", obj);
        }
        // wx.aldSendEvent(data, obj)

        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldSendEvent(data);
    },


    //关卡开始
    gameStartStat: function gameStartStat(num) {
        if (_Config2.default.debug) {
            return;
        }
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onStart({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173"
        });
    },


    /**
     * 
     * @param {*} num  Number  关卡数  必传
     * @param {*} obj  Object               
     * 键 static 值1 "complete"胜利  值2"fail"失败  必传
     *      键zhstatic  值 "中文提示"  选传
     */
    //关卡结束
    gameEndStat: function gameEndStat(num, obj) {
        if (_Config2.default.debug) {
            return;
        }
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onEnd({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173",
            event: obj.static,
            params: {
                desc: obj.zhstatic
            }
        });
    },
    gameUsePropStat: function gameUsePropStat(num) {
        if (_Config2.default.debug) {
            return;
        }
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onRunning({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173",
            event: "tools",
            params: {
                itemName: "\u7535\u706F\u6CE1"
            }
        });
    }
};

exports.Global = Global;

},{"../../../Config":1}],56:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require('./Global');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tool = function () {
    function Tool() {
        _classCallCheck(this, Tool);
    }

    _createClass(Tool, null, [{
        key: 'numFormat',

        /**数字太大格式化成K */
        value: function numFormat(num) {
            if (num >= 10000) {
                num = Math.floor(num / 1000) + 'K';
            }
            return num;
        }

        /**增加用户金币 */

    }, {
        key: 'addGold',
        value: function addGold(num) {
            PaoYa.DataCenter.user.gold += num;
        }

        /**获取格式化后的用户金币 */

    }, {
        key: 'getGold',
        value: function getGold(num) {
            return this.numFormat(PaoYa.DataCenter.user.gold);
        }

        /**增加用户宝石 */

    }, {
        key: 'addDiamond',
        value: function addDiamond(num) {
            PaoYa.DataCenter.user.diamond += num;
        }

        /**设置用户宝石 */

    }, {
        key: 'setDiamond',
        value: function setDiamond(num) {
            PaoYa.DataCenter.user.diamond = num;
        }

        /**更新用户金币，体力，宝石，道具，积分 */

    }, {
        key: 'updataUserInfo',
        value: function updataUserInfo(data) {
            var user = PaoYa.DataCenter.user.user_info;
            user.member_gold = data.gold;
            user.member_power = data.power;
            user.member_diamond = data.diamond;
            user.member_prop = data.prop;
            user.member_integral = data.integral;
        }
    }, {
        key: 'showVideoAD',
        value: function showVideoAD(callBack, cancel, err, isAdventure, num) {
            if (Laya.Browser.onPC) {
                callBack && callBack();
                return;
            }

            // Global.dataPoints(`点击观看视频次数`, { points: "103" })
            var p = {
                onLoad: function onLoad() {
                    console.log('\u89C6\u9891\u5F39\u51FA');
                    // PaoYa.Request.POST(`manage_data`, { code: num })
                },
                onError: function onError() {
                    Tool.noADshare(callBack);
                    err && err();
                },
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        // Global.dataPoints(`广告看完次数`, { points: "105" })
                        callBack && callBack();
                    } else {
                        cancel && cancel();
                        // let alert = new AlertDialog({ title: '提示', message: '请看完广告才能复活哦' })
                        // alert.popup()
                    }
                }
            };
            PaoYa.RewardedVideoAd.show(p, isAdventure);
        }

        /**设置用户领钻石小红点值 */

    }, {
        key: 'setUserCanGetJewel',
        value: function setUserCanGetJewel(state) {
            PaoYa.DataCenter.user.can_receive = state;
        }
    }, {
        key: 'inviteFriend',
        value: function inviteFriend(e, num) {
            if (Laya.Browser.onPC) {
                return;
            }
            // PaoYa.Request.POST(`manage_data`, { code: num })

            var title = PaoYa.DataCenter.config.game.share_list.randomItem;
            PaoYa.ShareManager.shareTitle(title, {}, function () {});
        }
    }, {
        key: 'noADshare',
        value: function noADshare(suc) {
            if (Laya.Browser.onPC) {
                suc && suc();
                return;
            }

            // let probability = GameDataCenter.gameData.shareNum ? 100 : 70
            var startTime = new Date().getTime();
            var title = PaoYa.DataCenter.config.game.share_list.randomItem;
            PaoYa.ShareManager.shareTitle(title, {}, function () {

                if (_Global.Global.shareNumFail > 1 && _Global.Global.shareNum < 5) {
                    _Global.Global.shareNumFail = 0;
                    suc && suc();
                    _Global.Global.shareNum++;
                    return;
                }

                if (_Global.Global.shareNum < 1) {
                    _Global.Global.shareNumFail++;
                    py.showToast({
                        title: '分享失败',
                        icon: 'fail',
                        duration: 2000
                    });
                }

                if (_Global.Global.shareNum >= 1 && _Global.Global.shareNum <= 4) {
                    var shareNumD = Math.random() * 100 < 50 ? true : false;
                    if (new Date().getTime() - startTime > 2000 && shareNumD) {
                        _Global.Global.shareNumSuc++;
                        suc && suc();
                    } else {
                        _Global.Global.shareNumFail++;
                        py.showToast({
                            title: '分享失败',
                            icon: 'fail',
                            duration: 2000
                        });
                    }
                }

                if (_Global.Global.shareNum > 4) {
                    var _shareNumD = Math.random() * 100 < 10 ? true : false;
                    if (new Date().getTime() - startTime > 2000 && _shareNumD) {
                        _Global.Global.shareNumSuc++;
                        suc && suc();
                    } else {
                        _Global.Global.shareNumFail++;
                        py.showToast({
                            title: '分享失败',
                            icon: 'fail',
                            duration: 2000
                        });
                    }
                }
                _Global.Global.shareNum++;
            });
        }
    }, {
        key: 'wxShowFriendRank',
        value: function wxShowFriendRank(num) {
            var uerInfo = {
                "wxgame": {
                    "score": num,
                    // "ladder_id": e.ladder_id,
                    "update_time": Date.parse(new Date())
                    // "city": PaoYa.DataCenter.rawData.member_city,
                    // "ladder_name": e.ladder_name
                } };
            if (typeof wx == 'undefined') {
                return;
            } else {
                wx.setUserCloudStorage({
                    KVDataList: [{ key: 'score', value: JSON.stringify(uerInfo) }]
                });
            }
        }
    }, {
        key: 'showBanner',
        value: function showBanner() {
            if (typeof wx == 'undefined') {
                return;
            }
            var bannerAd = wx.createBannerAd({
                adUnitId: 'adunit-1dbbf544daf9456a',
                style: {
                    left: (wx.getSystemInfoSync().windowWidth - 300) / 2,
                    top: wx.getSystemInfoSync().screenHeight - 90,
                    width: 300
                }
            });

            bannerAd.onLoad(function () {
                // Global.dataPoints(`banner曝光量`, { points: "104" })
                console.log('banner 广告加载成功');
            });

            bannerAd.onError(function (err) {
                console.log(err);
            });

            bannerAd.onResize(function (res) {
                console.log(res.width, res.height);
                console.log(bannerAd.style.realWidth, bannerAd.style.realHeight);
                bannerAd.style.top = wx.getSystemInfoSync().screenHeight - bannerAd.style.realHeight;
            });

            // 在适合的场景显示 Banner 广告
            return bannerAd;
        }
        //obj ={ name: 游戏名字 , appId:appId}

    }, {
        key: 'goToNewGame',
        value: function goToNewGame(obj) {
            _Global.Global.dataPoints('\u6E38\u620F\u63A8\u8350\u70B9\u51FB_' + obj.name);
            var params = obj;
            // if (!params.appId) {
            //     console.error("必须指定appId");
            //     return;
            // }
            console.log("跳转游戏", obj);
            if (typeof wx == 'undefined') {
                return;
            }
            if (wx.navigateToMiniProgram) {
                wx.navigateToMiniProgram({
                    appId: params.appId,
                    path: params.path || "",
                    extraData: params.extraData || {},
                    envVersion: params.envVersion || "release",
                    success: function success() {
                        _Global.Global.dataPoints(obj.name + '\u6210\u529F\u8DF3\u8F6C');
                    },
                    fail: function fail(res) {}
                });
            }
        }
    }, {
        key: 'showGameNums',
        value: function showGameNums(obj) {
            _Global.Global.dataPoints('\u6E38\u620F\u63A8\u8350\u5C55\u793A_' + obj.name);
        }
    }, {
        key: 'hasVideoAD',
        get: function get() {
            return PaoYa.game.params.adUnitId ? true : false;
        }
    }]);

    return Tool;
}();

exports.default = Tool;

},{"./Global":55}],57:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponHouseControl = require("./WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponHouse = function (_PaoYa$View) {
    _inherits(WeaponHouse, _PaoYa$View);

    function WeaponHouse() {
        _classCallCheck(this, WeaponHouse);

        return _possibleConstructorReturn(this, (WeaponHouse.__proto__ || Object.getPrototypeOf(WeaponHouse)).call(this));
    }

    _createClass(WeaponHouse, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onAppear",
        value: function onAppear() {
            var _this2 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this2.changeHB(res);
            });
        }
    }, {
        key: "changeHB",
        value: function changeHB(res) {
            this.goldNum.width = null;

            if (res.gold || res.gold == 0) {
                PaoYa.DataCenter.user.gold = res.gold;
                var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                this.goldNum.text = goldnum;
                this.goldNum.font = "weaponNFontT";
                this.goldNum.scale(0.6, 0.6);
                this.goldNum.pos(365 + (149 - this.goldNum.width * 0.6) / 2, 25);
            }

            if (res.diamond || res.diamond == 0) {
                PaoYa.DataCenter.user.diamond = res.diamond;
                var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);

                this.diamondNum.text = diamondnum;
                this.diamondNum.font = "weaponNFontT";
                this.diamondNum.scale(0.6, 0.6);
                this.diamondNum.pos(600 + (149 - this.diamondNum.width * 0.6) / 2, 25);
            }

            function addNumberUnit(num) {
                switch (true) {
                    case num >= 10000 && num < 100000000:
                        var integ = num / 10000;
                        return Math.floor(integ * 100) / 100 + '万';
                        break;
                    case num >= 100000000:
                        var integ1 = num / 100000000;
                        return Math.floor(integ1 * 100) / 100 + '亿';
                        break;
                    default:
                        return num + '';
                        break;
                }
            };
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            // this.getComponent()
            if (_WeaponHouseControl2.default.ins.isGuide) {
                this.startGuide();
                PaoYa.Request.POST("martial_change_new_hand", { type: "weaponNew" });
            }

            // this.light.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`light`)
            //     this.lightNew.visible = false
            //     WeaponHouseControl.ins.showWareList(WeaponHouseControl.ins.lightList)
            // })

            // this.middle.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`middle`)
            //     this.middleNew.visible = false
            //     WeaponHouseControl.ins.showWareList(WeaponHouseControl.ins.middleList)
            // })

            // this.large.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`large`)
            //     this.largeNew.visible = false
            //     WeaponHouseControl.ins.showWareList(WeaponHouseControl.ins.heavyList)
            // })

            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     if (WeaponHouseControl.ins.isGuide) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     WeaponHouseControl.ins.navigator.pop()
            // })

            // this.equip.on(Laya.Event.CLICK, this, () => {
            //     if (WeaponHouseControl.ins.isGuide) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     WeaponHouseControl.ins.chargeWeapon()
            // })

            // this.upGrade.on(Laya.Event.CLICK, this, () => {
            //     if (WeaponHouseControl.ins.isGuide) {
            //         return
            //     }
            //     WeaponHouseControl.ins.upgradeWeapon()
            // })

            this.Wp_1.font = "weaponDFont";
            this.Wp_2.font = "weaponDFont";
            this.Wp_3.font = "weaponDFont";
            this.Wp_4.font = "weaponDFont";
            this.Wp_5.font = "weaponDFont";
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "getWareBtnSkin",
        value: function getWareBtnSkin(name) {
            var _this3 = this;

            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3[element].skin = "remote/weaponhouse/14.png";
            });
            this[name].skin = "remote/weaponhouse/13.png";
        }
    }, {
        key: "startGuide",
        value: function startGuide() {
            var _this4 = this;

            _Global.Global.dataPoints('进入兵器引导');
            var Sprite = Laya.Sprite;

            // 绘制底图
            var gameContainer = new Sprite();
            gameContainer.size(1634, 750);
            gameContainer.pos(-150, 0);
            gameContainer.mouseEnabled = true;
            this.addChild(gameContainer);

            // 引导所在容器
            var guideContainer = new Sprite();
            this.addChild(guideContainer);
            guideContainer.cacheAs = "bitmap";
            guideContainer.zOrder = 10;

            // 绘制遮罩区，含透明度，可见游戏背景
            var maskArea = new Sprite();
            guideContainer.addChild(maskArea);
            maskArea.alpha = 0.5;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.zOrder = 10;

            // 绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
            var interactionArea = new Sprite();
            guideContainer.addChild(interactionArea);
            // 设置叠加模式
            interactionArea.blendMode = "destination-out";

            // 设置点击区域
            var hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(-150 + _Global.Global.AdaptiveWidth, 0, 1634, 750, "#000");
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            this.equip.visible = true;
            this.equip.zOrder = 20;
            this.equipTips.x = this.equipTips.x;
            this.equipTips.visible = true;
            this.equipTips.zOrder = 20;
            //第一步装备
            this.equip.on(Laya.Event.CLICK, this, function () {
                _this4.equip.zOrder = 0;
                _this4.equipTips.visible = false;
                _SoundManager2.default.ins.btn();
                _WeaponHouseControl2.default.ins.chargeWeapon();
                _Global.Global.dataPoints('点击装备');
                _this4.upGrade.visible = true;
                _this4.upGrade.zOrder = 20;
                _this4.upGradeTips.x = _this4.upGradeTips.x;
                _this4.upGradeTips.visible = true;
                _this4.upGradeTips.zOrder = 20;
                //第二步升级
                _this4.upGrade.on(Laya.Event.CLICK, _this4, function () {
                    _this4.upGrade.zOrder = 0;
                    _this4.upGradeTips.visible = false;
                    _WeaponHouseControl2.default.ins.upgradeWeapon();
                    _Global.Global.dataPoints('点击升级');
                    _this4.benBack.visible = true;
                    _this4.benBack.zOrder = 20;
                    _this4.benBackTips.x = _this4.benBackTips.x;
                    _this4.benBackTips.visible = true;
                    _this4.benBackTips.zOrder = 20;
                    //第三步 返回
                    _this4.benBack.on(Laya.Event.CLICK, _this4, function () {
                        _Global.Global.dataPoints('点击返回');
                        Laya.stage.removeChild(guideContainer);
                        Laya.stage.removeChild(gameContainer);
                        _this4.benBack.zOrder = 0;
                        _this4.benBackTips.visible = false;
                        _WeaponHouseControl2.default.ins.isGuide = false;
                        _SoundManager2.default.ins.btn();
                        _WeaponHouseControl2.default.ins.navigator.pop();
                    });
                });
            });

            // gameContainer.on(Laya.Event.CLICK, this, () => {
            //     Laya.stage.removeChild(this.upGrade);
            //     Laya.stage.removeChild(this.upGradeTips);
            //     Laya.stage.removeChild(gameContainer);
            // })
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return WeaponHouse;
}(PaoYa.View);

exports.default = WeaponHouse;

},{"../../../gamescripts/SoundManager":8,"../tool/Global":55,"./WeaponHouseControl":58}],58:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponHouseControl = function (_PaoYa$Component) {
    _inherits(WeaponHouseControl, _PaoYa$Component);

    function WeaponHouseControl() {
        _classCallCheck(this, WeaponHouseControl);

        var _this = _possibleConstructorReturn(this, (WeaponHouseControl.__proto__ || Object.getPrototypeOf(WeaponHouseControl)).call(this));

        WeaponHouseControl.ins = _this;
        _this.myUserList = [];
        _this.isUsingWeapon = {};
        _this.currentMyUserIdx = 0;
        _this.currentMyUserWeapDetail = "";
        return _this;
    }

    _createClass(WeaponHouseControl, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            var onwer = this.owner;
            this.isGuide = onwer.params.isGuide;
            onwer.params = onwer.params.detail;
            this.params = onwer.params;
            //武器数据
            this.lightList = this.getNewListF(this.params.lightList, 1);
            this.heavyList = this.getNewListF(this.params.heavyList, 2);
            this.middleList = this.getNewListF(this.params.middleList, 3);
            this.allList = this.lightList.concat(this.heavyList, this.middleList);
            this.addWpList = [];
            //新武器处理
            this.params.newWeapon && this.chioceNewWp();
            // //我的武器数据
            var arr = this.params.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });
            this.getMyUserDetailList(0);
            onwer.userWeaponList.renderHandler = new Laya.Handler(this, this.userWeaponUpdateItem);
            onwer.userWeaponList.array = this.myUserDetailList;
            onwer.warehouseList.vScrollBarSkin = "";
            this.isWareChoiceWp = null;
            onwer.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);
        }
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            var owner = this.owner;
            switch (e.target.name) {
                case "light":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("light");
                    owner.lightNew.visible = false;
                    this.nowuseList = this.lightList;
                    owner.warehouseList.array = this.lightList;
                    // this.showWareList(this.lightList)
                    break;
                case "middle":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("middle");
                    owner.middleNew.visible = false;
                    // this.showWareList(this.middleList)
                    this.nowuseList = this.middleList;
                    owner.warehouseList.array = this.middleList;
                    break;
                case "large":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("large");
                    owner.largeNew.visible = false;
                    // this.showWareList(this.heavyList)
                    this.nowuseList = this.heavyList;
                    owner.warehouseList.array = this.heavyList;
                    break;
                case "benBack":
                    if (this.isGuide) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "equip":
                    if (this.isGuide) {
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    this.chargeWeapon();
                    break;
                case "upGrade":
                    if (this.isGuide) {
                        return;
                    }
                    this.upgradeWeapon();
                    break;
            }
        }

        //仓库武器渲染

    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, idx) {
            var _this3 = this;

            console.log(cell._dataSource.weaponName, cell._dataSource.isUseringWeapon);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                if (_this3.isWareChoiceWp) {
                    if (_this3.nowuseList) {
                        _this3.nowuseList.forEach(function (element) {
                            element.isUserWeapon = false;
                            element.isUseringWeapon = false;
                        });
                    }
                    _this3.isWareChoiceWp.getChildByName("beChioce").visible = false;
                    _this3.isWareChoiceWp.isUseringWeapon = false;
                    _this3.isWareChoiceWp.skin = "local/common/frameBg.png";
                    // this.isWareChoiceWp._dataSource.isShowing = false
                    _this3.isWareChoiceWp = cell;
                    _this3.isWareChoiceWp._dataSource.isShowing = true;
                } else {
                    _this3.isWareChoiceWp = cell;
                }
                cell.getChildByName("beChioce").visible = true;
                cell.skin = "local/common/currutFrameBg.png";
                cell._dataSource.isUseringWeapon = true;
                _this3.currentMyUserWeapDetail = cell._dataSource;
                _this3.renderCenterData();
                if (cell._dataSource.isNew) {
                    cell._dataSource.isNew = false;
                    cell.getChildByName("new").visible = false;
                    _this3.newWpList[cell._dataSource.idIdx].isOdd = true;
                    // let arr = newWpList
                }
            });
            this.singleWeapon(cell, idx);
        }
        //正在使用武器渲染

    }, {
        key: "userWeaponUpdateItem",
        value: function userWeaponUpdateItem(cell, idx) {
            var _this4 = this;

            //点击重新渲染
            cell.offAll();
            var owner = this.owner;
            if (!cell._dataSource.weaponId) {
                cell.getChildByName("bgwrap").visible = false;
                cell.getChildByName("mark").visible = false;
                cell.getChildByName("wp").visible = false;
                cell.getChildByName("lv").visible = false;
                cell.getChildByName("add").visible = false;
                cell.getChildByName("invite").visible = false;
                switch (cell._dataSource.type) {
                    case 3:
                        cell.getChildByName("add").visible = true;
                        this.addWpList.push(cell);
                        cell.on(Laya.Event.CLICK, this, function () {
                            _SoundManager2.default.ins.btn();
                            for (var i = 0; i < 5; i++) {
                                owner["wpBg_" + (i + 1)].skin = "remote/weaponhouse/25.png";
                            }
                            // let newIndx = this.currentMyUserIdx
                            _this4.currentMyUserIdx = idx;
                            cell.getChildByName("beChioce").visible = true;
                            owner["wpBg_" + (_this4.currentMyUserIdx + 1)].skin = "remote/weaponhouse/26.png";
                            // this.myUserList[this.currentMyUserIdx] = this.myUserList[newIndx]
                            _this4.getMyUserDetailList(_this4.currentMyUserIdx);
                            _this4.addWpList = [];
                            owner.userWeaponList.array = _this4.myUserDetailList;
                        });
                        break;
                    case 4:
                        cell.getChildByName("invite").visible = true;
                        cell.on(Laya.Event.CLICK, this, function () {
                            _SoundManager2.default.ins.btn();
                            _this4.navigator.popup("weapon/UnlockFour");
                        });
                        break;
                    case 5:
                        cell.getChildByName("invite").visible = true;
                        cell.on(Laya.Event.CLICK, this, function () {
                            _SoundManager2.default.ins.btn();
                            _this4.navigator.popup("weapon/UnlockFifth");
                        });
                        break;
                }
                return;
            }

            cell.getChildByName("bgwrap").visible = true;
            cell.getChildByName("mark").visible = true;
            cell.getChildByName("wp").visible = true;
            cell.getChildByName("lv").visible = true;
            cell.getChildByName("add").visible = false;
            cell.getChildByName("invite").visible = false;
            cell.getChildByName("beChioce").visible = false;

            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this4.addWpList.forEach(function (element) {
                    element.getChildByName("beChioce").visible = false;
                });
                for (var i = 0; i < 5; i++) {
                    owner["wpBg_" + (i + 1)].skin = "remote/weaponhouse/25.png";
                }
                _this4.currentMyUserIdx = idx;
                owner["wpBg_" + (_this4.currentMyUserIdx + 1)].skin = "remote/weaponhouse/26.png";
                _this4.getMyUserDetailList(_this4.currentMyUserIdx);
                _this4.addWpList = [];
                owner.userWeaponList.array = _this4.myUserDetailList;
            });

            this.singleWeapon(cell, idx, 1);
        }

        //新武器属性赋予

    }, {
        key: "chioceNewWp",
        value: function chioceNewWp() {
            var _this5 = this;

            var owner = this.owner;
            this.newWpList = [];
            owner.lightNew.visible = this.params.newWeapon.indexOf("d") != -1 ? true : false;
            owner.middleNew.visible = this.params.newWeapon.indexOf("z") != -1 ? true : false;
            owner.largeNew.visible = this.params.newWeapon.indexOf("g") != -1 ? true : false;
            if (this.params.newWeapon) {
                var newaparr = this.params.newWeapon.split(",");
                newaparr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this5.newWpList.push(obj);
                });
            }

            var al = this.allList.length;
            var ml = this.newWpList.length;
            getNewList: for (var j = 0; j < ml; j++) {
                for (var i = 0; i < al; i++) {
                    if (this.allList[i].weaponId == this.newWpList[j].name && this.allList[i].weaponLevel == this.newWpList[j].lv && !this.allList[i].isUserWeapon && !this.newWpList[j].isOdd) {
                        this.allList[i].isNew = true;
                        this.allList[i].idIdx = j;
                        continue getNewList;
                    }
                }
            }
        }

        //获取装备武器详情

    }, {
        key: "getMyUserDetailList",
        value: function getMyUserDetailList(number) {
            this.allList.forEach(function (element) {
                element.isUseringWeapon = false;
                element.isUserWeapon = false;
            });
            switch (this.params.weaponGridNum) {
                case 3:
                    this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 4 }, { type: 5 }];
                    break;
                case 4:
                    if (this.params.shareGrid > 0) {
                        this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 4 }];
                    } else {
                        this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 5 }];
                    }
                    break;
                case 5:
                    this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }];
                    break;
            }
            var al = this.allList.length;
            var ml = this.myUserList.length;
            var num = 0;
            getNowWare: for (var j = 0; j < ml; j++) {
                if (!this.myUserList[j]) {
                    return;
                }
                for (var i = 0; i < al; i++) {
                    if (this.allList[i].weaponId == this.myUserList[j].name && this.allList[i].weaponLevel == this.myUserList[j].lv && !this.allList[i].isUseringWeapon && !this.allList[i].isUserWeapon) {
                        if (num == number) {
                            this.allList[i].isUseringWeapon = true;
                        }
                        this.allList[i].isUserWeapon = true;

                        this.myUserDetailList[num] = JSON.parse(JSON.stringify(this.allList[i]));
                        num++;
                        continue getNowWare;
                    }
                }
            }
        }
    }, {
        key: "getNewListF",
        value: function getNewListF(list, num) {
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < element.num; i++) {
                    element.WpGrade = element.weaponStar * 100 + element.weaponLevel;
                    element.wpId = "" + num + index + i;
                    arr.push(JSON.parse(JSON.stringify(element)));
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUserWeapon && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }

            arr.sort(function (a, b) {
                return b.WpGrade - a.WpGrade;
            });

            return arr;
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx, isUser) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;
            if (!isUser) {
                if (this.isGuide) {
                    if (cell._dataSource.willBeUse) {
                        cell.getChildByName("beChioce").visible = true;
                        this.isWareChoiceWp = cell;
                        cell.skin = "local/common/currutFrameBg.png";
                        this.currentMyUserWeapDetail = cell._dataSource;
                        this.renderCenterData(isUser);
                    }
                } else {
                    cell.getChildByName("using").visible = false;
                    cell.getChildByName("new").visible = false;
                    if (cell._dataSource.isUserWeapon) {
                        cell.getChildByName("using").visible = true;
                    }

                    if (cell._dataSource.isNew) {
                        cell.getChildByName("new").visible = true;
                    }
                    if (cell._dataSource.isUseringWeapon) {
                        if (cell._dataSource.isUserWeapon) {
                            cell.getChildByName("using").visible = true;
                        }
                        cell.skin = "local/common/currutFrameBg.png";
                        cell.getChildByName("beChioce").visible = true;
                        this.isWareChoiceWp = cell;
                        this.currentMyUserWeapDetail = cell._dataSource;
                        this.renderCenterData(isUser);
                    }
                }
            } else {
                if (cell._dataSource.isUseringWeapon) {
                    cell.getChildByName("beChioce").visible = true;
                    this.isWareChoiceWp = cell;
                    this.currentMyUserWeapDetail = cell._dataSource;
                    this.renderCenterData(isUser);
                }
            }
            //选定渲染

            // if (!this.isGuide) {
            // } else {

            // }

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }

        //渲染详情部分

    }, {
        key: "renderCenterData",
        value: function renderCenterData(isUser) {
            var owner = this.owner;
            owner["skillImg_1"].visible = false;
            owner["skillImg_2"].visible = false;
            var detail = null;
            if (this.isWareChoiceWp) {
                detail = this.isWareChoiceWp._dataSource;
            } else {
                detail = this.currentMyUserWeapDetail;
            }

            owner.showWeapon.skin = "remote/small_weapons/s_" + detail.weaponId + ".png";
            // owner.currtWeaponLevel.text = `LV.${detail.weaponLevel}`
            // owner.currtWeaponLevel.font = `weaponNFontT`
            // owner.currtWeaponLevel.scale(0.7, 0.7)
            //选择重置
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                owner[element].skin = "remote/weaponhouse/14.png";
            });
            //兵器展示
            var skinq = "";
            var skint = "";
            var wareList = [];
            switch (detail.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }

            switch (detail.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    wareList = JSON.parse(JSON.stringify(this.heavyList));
                    owner.large.skin = "remote/weaponhouse/13.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    wareList = JSON.parse(JSON.stringify(this.middleList));
                    owner.middle.skin = "remote/weaponhouse/13.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    wareList = JSON.parse(JSON.stringify(this.lightList));
                    owner.light.skin = "remote/weaponhouse/13.png";
                    break;
            }
            owner.showWrap.skin = skinq;
            owner.showMark.skin = skint;
            //兵器属性
            owner.currutWeapon.text = detail.weaponName;
            owner.currutWeapon.font = "weaponDFont";
            owner.currutWeapon.scale(0.8, 0.8);

            owner.CDTime.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            owner.CDTime.font = "weaponNFontT";
            owner.CDTime.scale(0.7, 0.7);

            owner.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            owner.addattackNum.visible = detail.weaponUpAttack ? true : false;
            owner.addattackNum.text = "+" + detail.weaponUpAttack;
            owner.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            owner.addenduranceNum.visible = detail.weaponUpDurable ? true : false;
            owner.addenduranceNum.text = "+" + detail.weaponUpDurable;
            owner.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            owner.addconsumeNum.visible = detail.weaponDownConsume ? true : false;
            owner.addconsumeNum.text = "-" + detail.weaponDownConsume;
            owner.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";

            //兵器技能
            owner["skillName_1"].text = "";
            owner["skillGl_1"].text = "";
            owner["skillDetail_1"].text = "";
            owner["skillImg_1"].visible = false;
            owner["skillName_2"].text = "";
            owner["skillGl_2"].text = "";
            owner["skillDetail_2"].text = "";
            owner["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    owner["skillName_" + (index + 1)].color = "#4a4948";
                    owner["skillGl_" + (index + 1)].color = "#4a4948";
                    owner["skillDetail_" + (index + 1)].color = "#4a4948";
                    owner["skillName_" + (index + 1)].text = element.skillName;
                    owner["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    owner["skillDetail_" + (index + 1)].text = element.skillDesc;
                    owner["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        owner["skillName_" + (index + 1)].color = "#004418";
                        owner["skillGl_" + (index + 1)].color = "#004418";
                        owner["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }

            owner.needGoldNum.text = detail.upgradeCost;
            owner.needGoldNum.font = "weaponNFontT";
            owner.needGoldNum.scale(0.7, 0.7);

            owner.upGrade.disabled = detail.weaponLevel >= detail.weaponTopLevel ? true : false;
            owner.equip.skin = detail.isUserWeapon ? "remote/weaponhouse/20.png" : "remote/weaponhouse/10.png";

            //否是为已装备武器
            if (isUser) {
                this.showWareList(wareList);
            }
        }
    }, {
        key: "showWareList",
        value: function showWareList(wareList) {
            this.nowuseList = wareList;
            this.owner.warehouseList.array = wareList;
        }

        //升级武器

    }, {
        key: "upgradeWeapon",
        value: function upgradeWeapon() {
            var _this6 = this;

            var owner = this.owner;
            var numNew = 0;
            if (!this.isGuide) {
                if (this.isRequesting) {
                    return;
                }
                if (Number(owner.needGoldNum.text) > Number(PaoYa.DataCenter.user.gold)) {
                    this.navigator.popup("weapon/GoldLack");
                    return;
                }
            } else {
                numNew = 1;
            }

            var detail = this.isWareChoiceWp && this.isWareChoiceWp._dataSource ? this.isWareChoiceWp._dataSource : this.currentMyUserWeapDetail;
            var isusing = detail.isUserWeapon ? 1 : 0;
            this.isRequesting = true;
            Laya.timer.once(500, this, function () {
                _this6.isRequesting = false;
            });

            PaoYa.Request.POST("martial_update_weapon", { weaponId: detail.weaponId + "-" + detail.weaponLevel, newHand: numNew, default: isusing, index: this.currentMyUserIdx, time: new Date().getTime() }, function (res) {
                _SoundManager2.default.ins.upgrade();

                var obj = {
                    gold: PaoYa.DataCenter.user.gold - Number(owner.needGoldNum.text),
                    diamond: PaoYa.DataCenter.user.diamond
                };
                owner.changeHB(obj);

                var newDetail = null;
                owner.upeffects.visible = true;
                owner.upeffects.play(0, false);
                //修改原數組
                switch (detail.weaponType) {
                    case 3:
                        // this.heavyList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.heavyList.push(res.weapon)
                        newDetail = "heavyList";
                        break;
                    case 2:
                        // this.middleList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.middleList.push(res.weapon)
                        newDetail = "middleList";
                        break;
                    case 1:
                        // this.lightList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.lightList.push(res.weapon)
                        newDetail = "lightList";
                        break;
                }

                var al = _this6[newDetail].length;
                var isNew = true;
                res.weapon.num = 1;
                var oldNum = 1,
                    newNum = 1;
                _this6[newDetail].forEach(function (element) {
                    if (detail.wpId == element.wpId) {
                        for (var key in res.weapon) {
                            element[key] = res.weapon[key];
                        }
                        element.isUseringWeapon = true;
                        _this6.isWareChoiceWp._dataSource = element;
                    }
                });

                _this6.allList = [];
                _this6.allList = _this6.lightList.concat(_this6.heavyList, _this6.middleList);
                if (res.userWeapons) {
                    _this6.myUserList = [];
                    var arr = res.userWeapons.split(",");
                    arr.forEach(function (element) {
                        var obj = {
                            name: element.split("-")[0],
                            lv: element.split("-")[1]
                        };
                        _this6.myUserList.push(obj);
                    });
                    _this6.getMyUserDetailList(_this6.currentMyUserIdx);
                    _this6.addWpList = [];
                    owner.userWeaponList.array = _this6.myUserDetailList;
                } else {
                    if (_this6.isWareChoiceWp) {
                        _this6.singleWeapon(_this6.isWareChoiceWp, -1);
                    }
                    _this6.renderCenterData();
                }
            });
        }

        //更换武器

    }, {
        key: "chargeWeapon",
        value: function chargeWeapon() {
            var _this7 = this;

            if (this.isRequesting) {
                return;
            }
            var detail = this.currentMyUserWeapDetail;
            var oldDetail = this.myUserDetailList[this.currentMyUserIdx];
            if (detail.isUserWeapon) {
                return;
            }
            var wpType = 0;
            if (!this.myUserList[this.currentMyUserIdx]) {
                wpType = 1;
            }
            this.isRequesting = true;
            Laya.timer.once(500, this, function () {
                _this7.isRequesting = false;
            });
            PaoYa.Request.POST("martial_change_weapon", { oldWeaponId: oldDetail.weaponId + "-" + oldDetail.weaponLevel, newWeaponId: detail.weaponId + "-" + detail.weaponLevel, type: wpType, index: this.currentMyUserIdx }, function (res) {
                _this7.myUserList = [];
                _this7.isEqWp = true;
                var arr = res.userWeapons.split(",");
                // this.currentMyUserWeapDetail.isUsingWp = true
                arr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this7.myUserList.push(obj);
                });
                _this7.getMyUserDetailList(_this7.currentMyUserIdx);
                _this7.addWpList = [];
                _this7.owner.userWeaponList.array = _this7.myUserDetailList;
            });
        }
    }]);

    return WeaponHouseControl;
}(PaoYa.Component);

exports.default = WeaponHouseControl;

},{"../../../gamescripts/SoundManager":8}],59:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponStoreControl = require("./WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

var _Global = require("../tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponStore = function (_PaoYa$View) {
    _inherits(WeaponStore, _PaoYa$View);

    function WeaponStore() {
        _classCallCheck(this, WeaponStore);

        var _this = _possibleConstructorReturn(this, (WeaponStore.__proto__ || Object.getPrototypeOf(WeaponStore)).call(this));

        WeaponStore.ins = _this;
        return _this;
    }

    _createClass(WeaponStore, [{
        key: "onAppear",
        value: function onAppear() {
            var _this2 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this2.changeHB(res);
            });
        }
    }, {
        key: "changeHB",
        value: function changeHB(res) {
            this.goldNum.width = null;

            if (res.gold) {
                PaoYa.DataCenter.user.gold = res.gold;
                var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                this.goldNum.text = goldnum;
                this.goldNum.font = "weaponNFontT";
                this.goldNum.scale(0.6, 0.6);
                this.goldNum.pos(365 + (149 - this.goldNum.width * 0.6) / 2, 25);
            }
            if (res.diamond || res.diamond == 0) {
                PaoYa.DataCenter.user.diamond = res.diamond;
                var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);
                this.diamondNum.text = diamondnum;
                this.diamondNum.font = "weaponNFontT";
                this.diamondNum.scale(0.6, 0.6);
                this.diamondNum.pos(600 + (149 - this.diamondNum.width * 0.6) / 2, 25);
            }

            function addNumberUnit(num) {
                switch (true) {
                    case num >= 10000 && num < 100000000:
                        var integ = num / 10000;
                        return Math.floor(integ * 100) / 100 + '万';
                        break;
                    case num >= 100000000:
                        var integ1 = num / 100000000;
                        return Math.floor(integ1 * 100) / 100 + '亿';
                        break;
                    default:
                        return num + '';
                        break;
                }
            };
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            _Global.Global.dataPoints('进入兵器店页面');
            this.sellText.font = "weaponDFont";
            this.buyText.font = "weaponDFont";
            this.needDiamon.text = 20;
            this.needDiamon.font = "weaponNFontT";
            this.needDiamon.scale(0.5, 0.5);
            this.refreshTxt.font = "weaponDFont";
            this.refreshTxt.scale(0.7, 0.7);
            this.buyBtnTxt.font = "weaponDFont";
            this.buyBtnTxt.scale(0.7, 0.7);
            this.sellBtnTxt.font = "weaponDFont";
            this.sellBtnTxt.scale(0.7, 0.7);

            this.refreshTimeNum.font = "weaponDFont";
            this.refreshTimeNum.scale(0.4, 0.4);

            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     WeaponStoreControl.ins.navigator.pop()
            // })

            // this.sellBtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     WeaponStoreControl.ins.sellWp()
            // })

            // this.refreshBtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     if (WeaponStore.ins.isRefrshing) {
            //         true
            //     }
            //     let isHigh = false, highDeatil
            //     WeaponStoreControl.ins.buyList.forEach(element => {
            //         if (element.weaponStar == 3) {
            //             isHigh = true
            //             highDeatil = element
            //         }
            //     });
            //     if (isHigh) {
            //         let obj = {
            //             detail: highDeatil,
            //             type: `buy`
            //         }
            //         WeaponStoreControl.ins.navigator.popup("weapon/StoreSure", obj);
            //     } else {
            //         WeaponStoreControl.ins.refresF()
            //     }
            // })

            // this.sell.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     WeaponStoreControl.ins.wpdType = `sell`
            //     this.sell.skin = `remote/weaponstore/3.png`
            //     this.buy.skin = `remote/weaponstore/2.png`
            //     this.sellPage.visible = true
            //     this.buyPage.visible = false
            //     this.getWareBtnSkin(`light`)
            //     this.lightNew.visible = false
            //     WeaponStoreControl.ins.sellPresentIdx = 0
            //     WeaponStoreControl.ins.showWareList(WeaponStoreControl.ins.lightList)
            // })

            // this.buy.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     WeaponStoreControl.ins.wpdType = `buy`
            //     this.sell.skin = `remote/weaponstore/2.png`
            //     this.buy.skin = `remote/weaponstore/3.png`
            //     this.sellPage.visible = false
            //     this.buyPage.visible = true
            //     WeaponStoreControl.ins.buyPresentIdx = 0
            //     if (WeaponStoreControl.ins.buyList.length > 0) {
            //         this.weapon.visible = true
            //         this.sellBtn.visible = true
            //         this.buyBtn.visible = true
            //     } else {
            //         this.weapon.visible = false
            //         this.buyBtn.visible = false
            //         this.sellBtn.visible = false
            //     }
            //     this.buyList.array = WeaponStoreControl.ins.buyList
            // })

            // this.light.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`light`)
            //     this.lightNew.visible = false
            //     WeaponStoreControl.ins.showWareList(WeaponStoreControl.ins.lightList)
            // })

            // this.middle.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`middle`)
            //     this.middleNew.visible = false
            //     WeaponStoreControl.ins.showWareList(WeaponStoreControl.ins.middleList)
            // })

            // this.large.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     this.getWareBtnSkin(`large`)
            //     this.largeNew.visible = false
            //     WeaponStoreControl.ins.showWareList(WeaponStoreControl.ins.heavyList)
            // })

            // this.buyBtn.on(Laya.Event.CLICK, this, () => {
            //     SoundManager.ins.btn()
            //     let detail = WeaponStoreControl.ins.currentBuyWeapDetail
            //     if (!detail) {
            //         return
            //     }
            //     if (Number(detail.weaponPrice) > Number(this.goldNum.text)) {
            //         WeaponStoreControl.ins.navigator.popup("weapon/GoldLack");
            //         return
            //     } else {
            //         // PaoYa.DataCenter.user.gold -= Number(detail.weaponPrice)
            //         // this.goldNum.text = PaoYa.DataCenter.user.gold
            //         WeaponStoreControl.ins.buyWp()
            //     }
            // })
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {}
    }, {
        key: "getWareBtnSkin",
        value: function getWareBtnSkin(name) {
            var _this3 = this;

            _WeaponStoreControl2.default.ins.sellPresentIdx = 0;
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3[element].skin = "remote/weaponhouse/14.png";
            });
            this[name].skin = "remote/weaponhouse/13.png";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return WeaponStore;
}(PaoYa.View);

exports.default = WeaponStore;

},{"../tool/Global":55,"./WeaponStoreControl":60}],60:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _WeaponStore = require("./WeaponStore");

var _WeaponStore2 = _interopRequireDefault(_WeaponStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponStoreControl = function (_PaoYa$Component) {
    _inherits(WeaponStoreControl, _PaoYa$Component);

    function WeaponStoreControl() {
        _classCallCheck(this, WeaponStoreControl);

        var _this = _possibleConstructorReturn(this, (WeaponStoreControl.__proto__ || Object.getPrototypeOf(WeaponStoreControl)).call(this));

        WeaponStoreControl.ins = _this;
        return _this;
    }

    _createClass(WeaponStoreControl, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            //获取数据列表
            var owner = this.owner;
            this.params = owner.params;
            this.sellList = this.params.sellList;
            this.buyList = this.params.buyList.weaponList;
            this.sellList.newWeapon && this.chioceNewWp();
            //我的武器数据
            this.wpdType = "buy";
            this.myUserList = [];
            this.isUsingWeapon = {};
            this.currentMyUserIdx = 0;
            this.currentMyUserWeapDetail = "";
            var arr = this.sellList.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });
            owner.buyList.vScrollBarSkin = "";
            owner.warehouseList.vScrollBarSkin = "";
            owner.buyList.renderHandler = new Laya.Handler(this, this.buyWpUpdateItem);
            owner.warehouseList.renderHandler = new Laya.Handler(this, this.sellWpUpdateItem);
            this.getWareHouseList();
            this.buyPresentIdx = 0;
            this.sellPresentIdx = 0;
            if (this.buyList.length > 0) {
                owner.weapon.visible = true;
                owner.buyBtn.visible = true;
                owner.sellBtn.visible = true;
            } else {
                owner.weapon.visible = false;
                owner.buyBtn.visible = false;
                owner.sellBtn.visible = false;
            }
            owner.buyList.array = this.buyList;
            this.downTimeStartF(this.params.buyList.refreshTime);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            var owner = this.owner;
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "sellBtn":
                    _SoundManager2.default.ins.btn();
                    this.sellWp();
                    break;
                case "refreshBtn":
                    _SoundManager2.default.ins.btn();
                    if (_WeaponStore2.default.ins.isRefrshing) {
                        true;
                    }
                    var isHigh = false,
                        highDeatil = void 0;
                    this.buyList.forEach(function (element) {
                        if (element.weaponStar == 3) {
                            isHigh = true;
                            highDeatil = element;
                        }
                    });
                    if (isHigh) {
                        var obj = {
                            detail: highDeatil,
                            type: "buy"
                        };
                        this.navigator.popup("weapon/StoreSure", obj);
                    } else {
                        this.refresF();
                    }
                    break;
                case "sell":
                    _SoundManager2.default.ins.btn();
                    this.wpdType = "sell";
                    owner.sell.skin = "remote/weaponstore/3.png";
                    owner.buy.skin = "remote/weaponstore/2.png";
                    owner.sellPage.visible = true;
                    owner.buyPage.visible = false;
                    owner.getWareBtnSkin("light");
                    owner.lightNew.visible = false;
                    this.sellPresentIdx = 0;
                    this.showWareList(this.lightList);
                    break;
                case "buy":
                    _SoundManager2.default.ins.btn();
                    this.wpdType = "buy";
                    owner.sell.skin = "remote/weaponstore/2.png";
                    owner.buy.skin = "remote/weaponstore/3.png";
                    owner.sellPage.visible = false;
                    owner.buyPage.visible = true;
                    this.buyPresentIdx = 0;
                    if (this.buyList.length > 0) {
                        owner.weapon.visible = true;
                        owner.sellBtn.visible = true;
                        owner.buyBtn.visible = true;
                    } else {
                        owner.weapon.visible = false;
                        owner.buyBtn.visible = false;
                        owner.sellBtn.visible = false;
                    }
                    owner.buyList.array = this.buyList;
                    break;
                case "light":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("light");
                    owner.lightNew.visible = false;
                    this.showWareList(this.lightList);
                    break;
                case "middle":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("middle");
                    owner.middleNew.visible = false;
                    this.showWareList(this.middleList);
                    break;
                case "large":
                    _SoundManager2.default.ins.btn();
                    owner.getWareBtnSkin("large");
                    owner.largeNew.visible = false;
                    this.showWareList(this.heavyList);
                    break;
                case "buyBtn":
                    _SoundManager2.default.ins.btn();
                    var detail = this.currentBuyWeapDetail;
                    if (!detail) {
                        return;
                    }
                    if (Number(detail.weaponPrice) > PaoYa.DataCenter.user.gold) {
                        this.navigator.popup("weapon/GoldLack");
                        return;
                    } else {
                        // PaoYa.DataCenter.user.gold -= Number(detail.weaponPrice)
                        // owner.goldNum.text = PaoYa.DataCenter.user.gold
                        this.buyWp();
                    }
                    break;
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
        //获得仓库列表

    }, {
        key: "getWareHouseList",
        value: function getWareHouseList() {
            this.lightList = this.sellList.lightList;
            this.heavyList = this.sellList.heavyList;
            this.middleList = this.sellList.middleList;
            this.allList = this.lightList.concat(this.heavyList, this.middleList);
        }
        //渲染购买页

    }, {
        key: "buyWpUpdateItem",
        value: function buyWpUpdateItem(cell, idx) {
            var _this3 = this;

            this.singleWeapon(cell, idx);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this3.buyPresentIdx = idx;
                _this3.isBuyChoiceWp.skin = "local/common/frameBg.png";
                _this3.isBuyChoiceWp.getChildByName("beChioce").visible = false;

                cell.skin = "local/common/currutFrameBg.png";
                cell.getChildByName("beChioce").visible = true;
                _this3.currentBuyWeapDetail = cell._dataSource;
                _this3.isBuyChoiceWp = cell;
                _this3.renderCenterData(_this3.currentBuyWeapDetail);
            });
        }
        //渲染仓库页

    }, {
        key: "sellWpUpdateItem",
        value: function sellWpUpdateItem(cell, idx) {
            var _this4 = this;

            this.singleWeapon(cell, idx, 1);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this4.isSellWareChoiceWp.skin = "local/common/frameBg.png";
                _this4.isSellWareChoiceWp.getChildByName("beChioce").visible = false;

                cell.skin = "local/common/currutFrameBg.png";
                cell.getChildByName("beChioce").visible = true;
                _this4.currentSellWeapDetail = cell._dataSource;
                _this4.isSellWareChoiceWp = cell;
                _this4.renderCenterData(_this4.currentSellWeapDetail);
            });
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx, isSell) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;
            if (!isSell) {
                if (idx == this.buyPresentIdx) {
                    cell.skin = "local/common/currutFrameBg.png";
                    cell.getChildByName("beChioce").visible = true;
                    //当前详情
                    this.currentBuyWeapDetail = cell._dataSource;
                    //当前列表
                    this.isBuyChoiceWp = cell;
                    if (this.wpdType == "buy") {
                        this.renderCenterData(this.currentBuyWeapDetail);
                    }
                }
                cell.getChildByName("bg").getChildByName("txt").text = "" + cell._dataSource.weaponPrice;
                cell.getChildByName("bg").getChildByName("txt").font = "weaponNFontT";
                cell.getChildByName("bg").getChildByName("txt").scale(0.75, 0.75);
            } else {
                if (idx == this.sellPresentIdx) {
                    cell.skin = "local/common/currutFrameBg.png";
                    cell.getChildByName("beChioce").visible = true;
                    //当前详情
                    this.currentSellWeapDetail = cell._dataSource;
                    //当前列表
                    this.isSellWareChoiceWp = cell;
                    if (this.wpdType == "sell") {
                        this.renderCenterData(this.currentSellWeapDetail);
                    }
                }
            }

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }
        //渲染详情部分

    }, {
        key: "renderCenterData",
        value: function renderCenterData(data) {
            var owner = this.owner;
            owner["skillImg_1"].visible = false;
            owner["skillImg_2"].visible = false;
            var detail = data;
            owner.showWeapon.skin = "remote/small_weapons/s_" + detail.weaponId + ".png";
            // owner.currtWeaponLevel.text = `LV.${detail.weaponLevel}`
            // owner.currtWeaponLevel.font = `weaponNFontT`
            // owner.currtWeaponLevel.scale(0.7, 0.7)
            //选择重置
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                owner[element].skin = "remote/weaponhouse/14.png";
            });
            //兵器展示
            var skinq = "";
            var skint = "";
            switch (detail.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (detail.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    owner.large.skin = "remote/weaponhouse/13.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    owner.middle.skin = "remote/weaponhouse/13.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    owner.light.skin = "remote/weaponhouse/13.png";
                    break;
            }

            if (detail.weaponSalePrice) {
                owner.needGoldNum.text = detail.weaponSalePrice;
                owner.needGoldNum.font = "weaponNFontT";
                owner.needGoldNum.scale(0.8, 0.8);
            }

            owner.showWrap.skin = skinq;
            owner.showMark.skin = skint;
            //兵器属性
            owner.currutWeapon.text = detail.weaponName;
            owner.currutWeapon.font = "weaponDFont";
            owner.currutWeapon.scale(0.8, 0.8);

            owner.CDTime.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            owner.CDTime.font = "weaponNFontT";
            owner.CDTime.scale(0.7, 0.7);

            owner.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            owner.addattackNum.visible = detail.weaponUpAttack ? true : false;
            owner.addattackNum.text = "+" + detail.weaponUpAttack;
            owner.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            owner.addenduranceNum.visible = detail.weaponUpDurable ? true : false;
            owner.addenduranceNum.text = "+" + detail.weaponUpDurable;
            owner.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            owner.addconsumeNum.visible = detail.weaponDownConsume ? true : false;
            owner.addconsumeNum.text = "-" + detail.weaponDownConsume;
            owner.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";

            //兵器技能
            owner["skillName_1"].text = "";
            owner["skillGl_1"].text = "";
            owner["skillDetail_1"].text = "";
            owner["skillImg_1"].visible = false;
            owner["skillName_2"].text = "";
            owner["skillGl_2"].text = "";
            owner["skillDetail_2"].text = "";
            owner["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    owner["skillName_" + (index + 1)].color = "#4a4948";
                    owner["skillGl_" + (index + 1)].color = "#4a4948";
                    owner["skillDetail_" + (index + 1)].color = "#4a4948";
                    owner["skillName_" + (index + 1)].text = element.skillName;
                    owner["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    owner["skillDetail_" + (index + 1)].text = element.skillDesc;
                    owner["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        owner["skillName_" + (index + 1)].color = "#004418";
                        owner["skillGl_" + (index + 1)].color = "#004418";
                        owner["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }
        }
        //商城刷新倒计时

    }, {
        key: "downTimeStartF",
        value: function downTimeStartF(timeNum) {
            var nowtime = new Date().getTime();
            var Stime = timeNum - nowtime / 1000 | 0;
            this.getPowerTimeDown(Stime);
        }
    }, {
        key: "getPowerTimeDown",
        value: function getPowerTimeDown(Stime) {
            var _this5 = this;

            var owner = this.owner;
            if (this.isRefrshing) {
                owner.refreshTimeNum.visible = false;
                return;
            }
            var Ntime = Stime % 3600 | 0;
            var h = Stime / 3600 | 0;
            var m = Ntime / 60 | 0;
            var s = Ntime % 60 | 0;

            var hhh = h > 9 ? h : "0" + h;
            var mmm = m > 9 ? m : "0" + m;
            var sss = s > 9 ? s : "0" + s;
            owner.refreshTimeNum.text = hhh + ":" + mmm + ":" + sss;
            var NewT = Stime - 1;
            if (NewT < 1) {
                this.isReadyRefrensh = true;
                return;
            }
            Laya.timer.once(1000, this, function () {
                _this5.getPowerTimeDown(NewT);
            });
        }
    }, {
        key: "chioceNewWp",
        value: function chioceNewWp() {
            var _this6 = this;

            var owner = this.owner;
            this.newWpList = [];
            owner.lightNew.visible = this.params.newWeapon.indexOf("d") != -1 ? true : false;
            owner.middleNew.visible = this.params.newWeapon.indexOf("z") != -1 ? true : false;
            owner.largeNew.visible = this.params.newWeapon.indexOf("g") != -1 ? true : false;
            if (this.params.newWeapon) {
                var newaparr = this.params.newWeapon.split(",");
                newaparr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this6.newWpList.push(obj);
                });
            }
        }
        //仓库列表给处理

    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var _this7 = this;

            var owner = this.owner;
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            var unShowWeap = JSON.parse(JSON.stringify(this.myUserList));
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < unShowWeap.length; i++) {
                    if (element.weaponId == unShowWeap[i].name && element.weaponLevel == unShowWeap[i].lv) {
                        element.num -= 1;
                        element.isUsing = true;
                    }
                }
                //选出已装备武器
                var isChoice = false;
                for (var _i = 0; _i < element.num; _i++) {
                    var obj = JSON.parse(JSON.stringify(element));
                    obj.originalIndex = index;
                    obj.isUsingWp = false;
                    if (obj.weaponId == _this7.myUserList[_this7.currentMyUserIdx].name && obj.weaponLevel == _this7.myUserList[_this7.currentMyUserIdx].lv && !isChoice) {
                        obj.isUsingWp = true;
                        obj.isShowing = true;
                        isChoice = true;
                    }
                    obj.WpGrade = obj.weaponStar * 100 + obj.weaponLevel;
                    arr.push(obj);
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUsingWp && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }

            arr.sort(function (b, a) {
                return b.WpGrade - a.WpGrade;
            });
            this.isWareChoiceWp = null;
            if (arr.length > 0) {
                owner.weapon.visible = true;
                owner.buyBtn.visible = true;
                owner.sellBtn.visible = true;
            } else {
                owner.weapon.visible = false;
                owner.buyBtn.visible = false;
                owner.sellBtn.visible = false;
            }
            owner.warehouseList.array = arr;
        }
        //购买武器

    }, {
        key: "buyWp",
        value: function buyWp() {
            var _this8 = this;

            var owner = this.owner;
            var detail = this.currentBuyWeapDetail;
            PaoYa.Request.POST("martial_shop_buy", { weaponId: detail.weaponId }, function (res) {
                owner.changeHB(res);
                owner.showaniC.skin = _this8.isBuyChoiceWp.getChildByName("wp")._skin;
                owner.showaniType.skin = _this8.isBuyChoiceWp.getChildByName("mark")._skin;
                owner.showaniWrap.skin = _this8.isBuyChoiceWp.getChildByName("bgwrap")._skin;
                owner.showani.visible = true;
                owner.showani.x = 722 + _this8.isBuyChoiceWp.x + 71;
                owner.showani.y = _this8.isBuyChoiceWp.y + 116 + 71;
                owner.ware.visible = true;
                Laya.Tween.to(owner.showani, { x: 296, y: 652, scaleX: 0, scaleY: 0 }, 800, Laya.Ease.quintIn, Laya.Handler.create(_this8, function () {
                    owner.showani.visible = false;
                    owner.showani.scale(1, 1);
                    Laya.Tween.to(owner.ware, { alpha: 0 }, 400, Laya.Ease.quintIn, Laya.Handler.create(_this8, function () {
                        owner.ware.visible = false;
                        owner.ware.alpha = 1;
                    }));
                }));

                Laya.timer.once(100, _this8, function () {
                    _this8.buyList.splice(_this8.buyPresentIdx, 1);
                    _this8.buyPresentIdx = 0;
                    var newDetail = null;
                    switch (detail.weaponType) {
                        case 3:
                            newDetail = "heavyList";
                            break;
                        case 2:
                            newDetail = "middleList";
                            break;
                        case 1:
                            newDetail = "lightList";
                            break;
                    }
                    var isNew = true;
                    _this8[newDetail].forEach(function (element) {
                        if (element.weaponId == detail.weaponId && element.weaponLevel == detail.weaponLevel) {
                            element.num++;
                            isNew = false;
                        }
                    });
                    if (isNew) {
                        detail.num = 1;
                        _this8[newDetail].push(detail);
                    }
                    if (_this8.buyList.length > 0) {
                        owner.weapon.visible = true;
                        owner.buyBtn.visible = true;
                        owner.sellBtn.visible = true;
                    } else {
                        owner.weapon.visible = false;
                        owner.buyBtn.visible = false;
                        owner.sellBtn.visible = false;
                    }
                    owner.buyList.array = _this8.buyList;
                });
            }, function (val) {
                _this8.navigator.popup("weapon/UnlockTips", val);
            });
        }
        //出售武装

    }, {
        key: "sellWp",
        value: function sellWp(choice) {
            var owner = this.owner;
            var detail = this.currentSellWeapDetail;
            if (detail.weaponStar == 3 && !choice) {
                var obj = {
                    detail: this.currentSellWeapDetail,
                    type: "sell"
                };
                this.navigator.popup("weapon/StoreSure", obj);
                return;
            }
            PaoYa.Request.POST("martial_weapon_sale", { weaponId: detail.weaponId + "-" + detail.weaponLevel }, function (res) {
                // PaoYa.DataCenter.user.gold = res.gold
                // owner.goldNum.text = res.gold
                owner.changeHB(res);
            });

            var newDetail = null;
            switch (detail.weaponType) {
                case 3:
                    newDetail = "heavyList";
                    break;
                case 2:
                    newDetail = "middleList";
                    break;
                case 1:
                    newDetail = "lightList";
                    break;
            }
            var orderCarryOut = false;
            this[newDetail].forEach(function (element) {
                if (element.weaponId == detail.weaponId && element.weaponLevel == detail.weaponLevel && detail.num > 0 && !orderCarryOut) {
                    element.num--;
                    orderCarryOut = true;
                }
            });
            this.showWareList(this[newDetail]);
        }
        //刷新武器

    }, {
        key: "refresF",
        value: function refresF() {
            var _this9 = this;

            var num = null;
            var owner = this.owner;
            num = this.isReadyRefrensh ? 0 : 1;
            if (PaoYa.DataCenter.user.diamond < Number(owner.needDiamon.text)) {
                this.navigator.popup("weapon/DiamondLack", 1);
                return;
            }
            // PaoYa.DataCenter.user.diamond -= Number(owner.needDiamon.text)
            // owner.diamondNum.text = PaoYa.DataCenter.user.diamond
            var obj = {
                diamond: PaoYa.DataCenter.user.diamond -= Number(owner.needDiamon.text)
            };
            owner.changeHB(obj);
            this.isRefrshing = true;

            PaoYa.Request.POST("martial_shop_list", { refresh: num }, function (res) {
                Laya.timer.once(1000, _this9, function () {
                    _this9.isRefrshing = false;
                    owner.refreshTimeNum.visible = true;
                    _this9.downTimeStartF(res.refreshTime);
                });
                _this9.buyList = res.weaponList;
                _this9.buyPresentIdx = 0;
                if (_this9.buyList.length > 0) {
                    owner.weapon.visible = true;
                    owner.buyBtn.visible = true;
                    owner.sellBtn.visible = true;
                } else {
                    owner.weapon.visible = false;
                    owner.buyBtn.visible = false;
                    owner.sellBtn.visible = false;
                }
                owner.buyList.array = _this9.buyList;
            });
        }
    }]);

    return WeaponStoreControl;
}(PaoYa.Component);

exports.default = WeaponStoreControl;

},{"../../../gamescripts/SoundManager":8,"./WeaponStore":59}],61:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WheelControl = require("./WheelControl");

var _WheelControl2 = _interopRequireDefault(_WheelControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Wheel = function (_PaoYa$View) {
    _inherits(Wheel, _PaoYa$View);

    function Wheel() {
        _classCallCheck(this, Wheel);

        var _this = _possibleConstructorReturn(this, (Wheel.__proto__ || Object.getPrototypeOf(Wheel)).call(this));

        Wheel.ins = _this;
        return _this;
    }

    _createClass(Wheel, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.tip.font = "weaponNFontT";
            this.tip.scale(0.6, 0.6);

            this.num.text = PaoYa.DataCenter.user.wheelTimes;
            this.num.font = "recoverHP";
            this.num.pos(370, 508);
            this.num.scale(1.2, 1.2);

            if (PaoYa.DataCenter.user.wheelTimes == 0) {
                this.video.visible = true;
                this.startWheelTxt.font = "weaponDFont";
                this.startWheelTxt.scale(0.8, 0.8);
                this.startWheelTxt.pos(90, 10);
            } else {
                this.startWheelTxt.font = "weaponDFont";
                this.startWheelTxt.scale(0.8, 0.8);
                this.startWheelTxt.pos(60, 10);
            }

            // this.benBack.on(Laya.Event.CLICK, this, () => {
            //     if (this.isRunning) {
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     WheelControl.ins.navigator.pop()
            // })

            // this.addbtn.on(Laya.Event.CLICK, this, () => {
            //     if (this.isRunning) {
            //         return
            //     }
            //     if (PaoYa.DataCenter.user.diamond < 500) {
            //         SoundManager.ins.btn()
            //         WheelControl.ins.navigator.popup("weapon/DiamondLack");
            //         return
            //     }
            //     SoundManager.ins.btn()
            //     WheelControl.ins.addTimes()
            // })

            // this.startWheel.on(Laya.Event.CLICK, this, () => {
            //     if (this.isRunning) {
            //         return
            //     }
            //     WheelControl.ins.wheelTurn()
            // })

            PaoYa.DataCenter.user.config_list.hero.wheelList.forEach(function (element, index) {
                _this2.showList(_this2["award" + (index + 1)], element, index);
            });
        }
    }, {
        key: "lisenClick",
        value: function lisenClick(e) {
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    _WheelControl2.default.ins.navigator.pop();
                    break;
                case "addbtn":
                    if (this.isRunning) {
                        return;
                    }
                    if (PaoYa.DataCenter.user.diamond < 500) {
                        _SoundManager2.default.ins.btn();
                        _WheelControl2.default.ins.navigator.popup("weapon/DiamondLack");
                        return;
                    }
                    _SoundManager2.default.ins.btn();
                    _WheelControl2.default.ins.addTimes();
                    break;
                case "startWheel":
                    if (this.isRunning) {
                        return;
                    }
                    _WheelControl2.default.ins.wheelTurn();
                    break;
            }
        }
    }, {
        key: "onAppear",
        value: function onAppear() {
            this.changeDG();
        }
    }, {
        key: "changeDG",
        value: function changeDG() {
            var _this3 = this;

            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this3.goldNum.width = null;

                if (res.gold || res.gold == 0) {
                    PaoYa.DataCenter.user.gold = res.gold;
                    var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                    _this3.goldNum.text = goldnum;
                    _this3.goldNum.font = "weaponNFontT";
                    _this3.goldNum.scale(0.6, 0.6);
                    _this3.goldNum.pos(365 + (149 - _this3.goldNum.width * 0.6) / 2, 25);
                }

                if (res.diamond || res.diamond == 0) {
                    PaoYa.DataCenter.user.diamond = res.diamond;
                    var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);
                    _this3.diamondNum.text = diamondnum;
                    _this3.diamondNum.font = "weaponNFontT";
                    _this3.diamondNum.scale(0.6, 0.6);
                    _this3.diamondNum.pos(600 + (149 - _this3.diamondNum.width * 0.6) / 2, 25);
                }

                function addNumberUnit(num) {
                    switch (true) {
                        case num >= 10000 && num < 100000000:
                            var integ = num / 10000;
                            return Math.floor(integ * 100) / 100 + '万';
                            break;
                        case num >= 100000000:
                            var integ1 = num / 100000000;
                            return Math.floor(integ1 * 100) / 100 + '亿';
                            break;
                        default:
                            return num + '';
                            break;
                    }
                };
            });
        }
    }, {
        key: "showList",
        value: function showList(cell, data, index) {
            var role = cell.getChildByName("role");
            var wp = cell.getChildByName("wp");
            var godo = cell.getChildByName("godo");
            var awardImage = godo.getChildByName("icon");
            var num = godo.getChildByName("num");

            switch (data.propId) {
                case 1:
                    wp.visible = true;
                    wp.getChildByName("wp").skin = "local/common/wp.png";
                    wp.getChildByName("bgwrap").skin = "local/common/quality_3.png";
                    break;
                case 2:
                    role.visible = true;
                    break;
                case 3:
                    wp.visible = true;
                    break;
                case 8:
                    godo.visible = true;
                    awardImage.visible = true;
                    awardImage.skin = "local/common/icon.png";
                    num.visible = true;
                    num.text = data.propNum;
                    num.font = "weaponNFontT";
                    num.scale(0.65, 0.65);
                    // num.pos(28, 175)
                    break;
                case 9:
                    godo.visible = true;
                    awardImage.visible = true;
                    num.visible = true;
                    awardImage.skin = "local/common/diamond.png";
                    num.text = data.propNum;
                    num.font = "weaponNFontT";
                    num.scale(0.65, 0.65);
                    // num.pos(28, 175)
                    break;
            }
        }
    }]);

    return Wheel;
}(PaoYa.View);

exports.default = Wheel;

},{"../../../gamescripts/SoundManager":8,"./WheelControl":62}],62:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Tool = require("../tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _Global = require("../tool/Global");

var _HeroConfig = require("../../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _Cross = require("../../../gamescripts/prefab/Cross");

var _Cross2 = _interopRequireDefault(_Cross);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WheelControl = function (_PaoYa$Component) {
    _inherits(WheelControl, _PaoYa$Component);

    function WheelControl() {
        _classCallCheck(this, WheelControl);

        var _this = _possibleConstructorReturn(this, (WheelControl.__proto__ || Object.getPrototypeOf(WheelControl)).call(this));

        WheelControl.ins = _this;
        _this.showBannerAd({
            style: {
                width: 300,
                align: 'right' //广告位位置：middle ,left,right
            }
        });
        _this.notGetLegendWp = localStorage.getItem("wheelTime") ? Number(localStorage.getItem("wheelTime")) : 0;

        _this.awardArr = [{ id: 18, weight: 200 }, { id: 19, weight: 120 }, { id: 20, weight: 50 }, { id: 21, weight: 30 }, { id: 22, weight: 40 }, { id: 23, weight: 10 }, { id: 24, weight: 4 }, { id: 25, weight: 4 }];
        return _this;
    }

    _createClass(WheelControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            var crossPromise = new Promise(function (resolve, reject) {
                Laya.loader.create('gamescenes/prefab/Cross.json', Laya.Handler.create(_this2, function (json) {
                    // console.log(json);
                    if (json instanceof Laya.Prefab) {
                        resolve(json.json);
                    } else {
                        resolve(json);
                    }
                }));
            });
            crossPromise.then(function (json) {
                _this2.initCrossIcon(json);
            });
        }
    }, {
        key: "initCrossIcon",
        value: function initCrossIcon(json) {
            var crossInfo = PaoYa.Utils.selectRandom(_HeroConfig2.default.crossIcons, 1);

            var crossView = new Laya.Prefab();
            crossView.json = json;
            this.crossView = crossView;
            var view = Laya.Pool.getItemByCreateFun('CrossView', crossView.create, crossView);
            var crossViewComp = view.getComponent(_Cross2.default);
            crossViewComp.params = crossInfo[0];
            crossViewComp.params.ani = true;
            view.pos(1200, 220);
            view.scale(0.7, 0.7);
            this.owner.addChild(view);
        }
    }, {
        key: "onThrottleClick",
        value: function onThrottleClick(e) {
            if (!this.owner) {
                return;
            }
            var owner = this.owner;
            switch (e.target.name) {
                case "benBack":
                    _SoundManager2.default.ins.btn();
                    this.navigator.pop();
                    break;
                case "addbtn":
                    if (owner.isRunning) {
                        return;
                    }
                    // if (PaoYa.DataCenter.user.diamond < 500) {
                    //     SoundManager.ins.btn()
                    //     this.navigator.popup("weapon/DiamondLack");
                    //     return
                    // }
                    _SoundManager2.default.ins.btn();
                    this.addTimes();
                    break;
                case "startWheel":
                    if (owner.isRunning) {
                        return;
                    }
                    this.wheelTurn();
                    break;
            }
        }
    }, {
        key: "addTimes",
        value: function addTimes() {
            this.navigator.popup("common/BuyWheelTimes");
        }
    }, {
        key: "addTimesD",
        value: function addTimesD(num) {
            var owner = this.owner;
            if (PaoYa.DataCenter.user.diamond < Number(owner.num.text) && !num) {
                this.navigator.popup("common/BuyWheelTimes", 1);
                return;
            }

            this.POST("martial_wheel_times_buy", { adv: num }, function (res) {
                if (!res) {
                    return;
                }
                owner.video.visible = false;
                owner.startWheelTxt.font = "weaponDFont";
                owner.startWheelTxt.scale(0.8, 0.8);
                owner.startWheelTxt.pos(60, 10);

                PaoYa.DataCenter.user.wheelTimes = res;
                owner.num.text = res;
                owner.changeDG();
            });
        }
    }, {
        key: "wheelTurn",
        value: function wheelTurn() {
            var _this3 = this;

            var owner = this.owner;
            if (owner.num.text < 1) {
                _SoundManager2.default.ins.btn();
                // this.navigator.popup("common/BuyWheelTimes");
                _Global.Global.dataPoints('增加转盘次数激励广告');
                _Tool2.default.showVideoAD(function () {
                    _this3.addTimesD(1);
                });
                return;
            }
            var obj = this.getWheelAward();
            this.whellRun(obj);
            // this.POST("martial_wheel", {}, res => {
            //     //console.log(res)
            //     if (!res) {
            //         return
            //     }
            //     SoundManager.ins.round()
            //     this.owner.num.text = res.wheelTimes
            //     if (res.wheelTimes == 0) {
            //         this.owner.video.visible = true
            //         this.owner.startWheelTxt.font = `weaponDFont`
            //         this.owner.startWheelTxt.scale(0.8, 0.8)
            //         this.owner.startWheelTxt.pos(90, 10)
            //     }
            //     PaoYa.DataCenter.user.wheelTimes = res.wheelTimes
            //     let rat = 0
            //     PaoYa.DataCenter.user.config_list.hero.wheelList.forEach((element, index) => {
            //         if (element.id == res.wheel.id) {
            //             let num = Math.random() > 0.5 ? 1 : -1
            //             rat = index * 45 + 22.5 + 2160 + (Math.random() * 20 | 0) * num
            //         }
            //     });
            //     this.owner.isRunning = true
            //     Laya.Tween.to(this.owner.pointer, { rotation: rat }, 4000, Laya.Ease.circOut, Laya.Handler.create(this, () => {
            //         let obj = {
            //             type: `wheel`,
            //             detail: res
            //         }
            //         this.navigator.popup("common/Award", obj);

            //         Laya.timer.once(600, this, () => {
            //             this.owner.pointer.rotation = 0
            //             this.owner.isRunning = false
            //         })
            //     }))
            // })
        }
    }, {
        key: "getWheelAward",
        value: function getWheelAward() {
            var _this4 = this;

            var arrNum = 0;
            this.awardArr.forEach(function (element) {
                var weightNum = element.weight;
                if (element.id == 24 || element.id == 25) {
                    weightNum += 2 * _this4.notGetLegendWp;
                }
                arrNum += weightNum;
            });

            var randomNum = arrNum * Math.random();
            var countNum = 0;
            var isFisrt = true;
            var selectObj = null;
            this.awardArr.forEach(function (element) {
                var countWeightNum = element.weight;
                if (element.id == 24 || element.id == 25) {
                    countWeightNum += 2 * _this4.notGetLegendWp;
                }
                countNum += countWeightNum;
                if (isFisrt && randomNum - countNum < 0) {
                    selectObj = element;
                    isFisrt = false;
                    if (element.id == 24 || element.id == 25) {
                        localStorage.setItem("wheelTime", 0);
                    } else {
                        localStorage.setItem("wheelTime", _this4.notGetLegendWp + 1);
                    }
                    _this4.notGetLegendWp = Number(localStorage.getItem("wheelTime"));
                }
            });

            return selectObj;
        }
    }, {
        key: "whellRun",
        value: function whellRun(res) {
            var _this5 = this;

            var owner = this.owner;
            this.getWheelAwardHttp(res);
            var rat = 0;
            PaoYa.DataCenter.user.config_list.hero.wheelList.forEach(function (element, index) {
                if (element.id == res.id) {
                    var num = Math.random() > 0.5 ? 1 : -1;
                    rat = index * 45 + 22.5 + 2160 + (Math.random() * 20 | 0) * num;
                    res.wheel = element;
                    switch (element.propId) {
                        case 8:
                            res.gold;
                    }
                }
            });
            owner.isRunning = true;
            _SoundManager2.default.ins.round();
            Laya.Tween.to(owner.pointer, { rotation: rat }, 4000, Laya.Ease.circOut, Laya.Handler.create(this, function () {
                _this5.isRunFinish = true;
                if (_this5.awardDetail) {
                    _this5.dialogPopup(_this5.awardDetail);
                    _this5.awardDetail = null;
                }
            }));
        }
    }, {
        key: "getWheelAwardHttp",
        value: function getWheelAwardHttp(obj) {
            var _this6 = this;

            var owner = this.owner;
            PaoYa.Request.POST('martial_adv_receive', { exchangeId: obj.id, adv: 0 }, function (res) {
                owner.num.text = res.wheelTimes;
                if (res.wheelTimes == 0) {
                    owner.video.visible = true;
                    owner.startWheelTxt.font = "weaponDFont";
                    owner.startWheelTxt.scale(0.8, 0.8);
                    owner.startWheelTxt.pos(90, 10);
                }
                PaoYa.DataCenter.user.wheelTimes = res.wheelTimes;

                _this6.awardDetail = res;
                res.wheel = res.wheel ? res.wheel : obj;
                if (_this6.isRunFinish) {
                    _this6.isRunFinish = null;
                    _this6.dialogPopup(res);
                }
            });
        }
    }, {
        key: "dialogPopup",
        value: function dialogPopup(res) {
            var _this7 = this;

            var owner = this.owner;
            var obj = {
                type: "wheel",
                detail: res
            };
            this.navigator.popup("common/Award", obj, Laya.Handler.create(this, function () {
                _this7.awardDetail = null;
                _this7.isRunFinish = null;
                owner.pointer.rotation = 0;
                owner.isRunning = false;
            }));
        }
    }]);

    return WheelControl;
}(PaoYa.Component);

exports.default = WheelControl;

},{"../../../gamescripts/SoundManager":8,"../../../gamescripts/config/HeroConfig":10,"../../../gamescripts/prefab/Cross":24,"../tool/Global":55,"../tool/Tool":56}],63:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require("../../common/tool/Global");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuyWp = function (_PaoYa$Dialog) {
    _inherits(BuyWp, _PaoYa$Dialog);

    function BuyWp() {
        _classCallCheck(this, BuyWp);

        var _this = _possibleConstructorReturn(this, (BuyWp.__proto__ || Object.getPrototypeOf(BuyWp)).call(this));

        BuyWp.ins = _this;
        return _this;
    }

    _createClass(BuyWp, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.resultParams = JSON.parse(JSON.stringify(this.params));

            if (this.params.encounter) {
                this.params = this.params.encounter;
            }

            this.heroImage.skin = "remote/guide/hero_" + PaoYa.DataCenter.user.defaultRoleId + ".png";

            this.tips.font = "adventure";
            this.tips.x = 630;
            this.buyBtnText.font = "adventure";
            this.buyBtnText.pos(10, 10);

            this.closeBtnText.font = "adventure";
            this.closeBtnText.pos(25, 10);
            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                PaoYa.Request.POST("martial_encounter_cancel", {}, function (res) {
                    PaoYa.NotificationCenter.postNotification("adventCancel");
                    _this2.close();
                });
            });

            this.closeBtn2.on(Laya.Event.CLICK, this, function () {
                _this2.close();
            });

            this.buyBtn.on(Laya.Event.CLICK, this, function () {
                _this2.buyWp();
            });

            this.warehouseList.vScrollBarSkin = "";
            this.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);
            this.showlist = this.params.weaponList;
            this.cellList = [];
            this.warehouseList.array = this.showlist;

            // Laya.stage.on(Laya.Event.MOUSE_UP, this, () => {
            //     this.changeStatus()
            // })
        }
    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, idx) {
            var _this3 = this;

            this.cellList.push(cell);
            cell.getChildByName("beChioce").visible = false;
            if (cell._dataSource.isChioced) {
                cell.getChildByName("beChioce").visible = true;
            }
            cell.getChildByName("bg").getChildByName("txt").text = "" + cell._dataSource.weaponPrice;
            cell.getChildByName("bg").getChildByName("txt").font = "weaponNFontT";
            cell.getChildByName("bg").getChildByName("txt").scale(0.75, 0.75);
            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;

            cell.offAll();

            cell.on(Laya.Event.MOUSE_DOWN, this, function () {
                _this3.count = 0;
                _this3.pressIdx = idx;
                Laya.timer.loop(100, _this3, _this3.addTime);
            });

            cell.on(Laya.Event.MOUSE_UP, this, function () {
                if (_this3.count <= 5) {
                    if (_this3.showlist[idx].isChioced) {
                        _this3.showlist[idx].isChioced = false;
                    } else {
                        _this3.showlist[idx].isChioced = true;
                    }
                    _this3.cellList = [];
                    _this3.warehouseList.array = _this3.showlist;
                }
                _this3.changeStatus();
            });
        }
    }, {
        key: "addTime",
        value: function addTime() {
            if (this.count > 5) {
                Laya.timer.clear(this, this.addTime);
                this.renderDetail();
            } else {
                this.count++;
            }
        }
    }, {
        key: "changeStatus",
        value: function changeStatus() {
            if (this.wpInfo.visible) {
                this.wpInfo.visible = false;
            }
            this.pressIdx = -1;
            Laya.timer.clear(this, this.addTime);
        }
    }, {
        key: "buyWp",
        value: function buyWp() {
            var _this4 = this;

            var moveArr = [],
                wpString = null,
                num = 0;
            this.showlist.forEach(function (element, index) {
                if (element.isChioced) {
                    wpString = wpString ? wpString + "," + element.weaponId : "" + element.weaponId;
                    num += Number(element.weaponPrice);
                    var obj = {
                        idx: index,
                        detail: _this4.cellList[index]
                    };
                    moveArr.push(obj);
                }
            });

            if (moveArr.length == 0) {
                py.showToast({
                    title: '请先选择相应兵器'
                });
                return;
            }

            if (num > PaoYa.DataCenter.user.diamond) {
                py.showToast({
                    title: '钻石不足'
                });
                return;
            }

            PaoYa.Request.POST("martial_encounter_finish", { result: 1, complete: 1, weaponId: wpString }, function (res) {
                _this4.ware.visible = true;
                PaoYa.Request.GET('update_chips', {}, function (res) {
                    PaoYa.DataCenter.gold.value = res.gold;
                    PaoYa.DataCenter.diamond.value = res.diamond;
                });
                PaoYa.NotificationCenter.postNotification("adventComplete");
                moveArr.forEach(function (element) {
                    _this4["showani" + element.idx].x = 749.5 + 128 * element.idx;
                    _this4["showani" + element.idx].y = 391;
                    _this4["showani" + element.idx].visible = true;
                    _this4["bgwrap" + element.idx].skin = element.detail.getChildByName("bgwrap").skin;
                    _this4["mark" + element.idx].skin = element.detail.getChildByName("mark").skin;
                    _this4["wp" + element.idx].skin = element.detail.getChildByName("wp").skin;

                    Laya.Tween.to(_this4["showani" + element.idx], { x: 296, y: 652, scaleX: 0, scaleY: 0 }, 800, Laya.Ease.quintIn, Laya.Handler.create(_this4, function () {
                        _this4["showani" + element.idx].visible = false;
                        Laya.Tween.to(_this4.ware, { alpha: 0 }, 400, Laya.Ease.quintIn, Laya.Handler.create(_this4, function () {
                            _this4.ware.visible = false;
                            _this4.ware.alpha = 1;
                            _this4.close();
                        }));
                    }));
                });
            });
        }
    }, {
        key: "renderDetail",
        value: function renderDetail() {
            var _this5 = this;

            this.wpInfo.visible = true;

            this.wpInfo.x = 698 + 120 * this.pressIdx;

            var detail = this.showlist[this.pressIdx];

            this.currutWeapon.text = detail.weaponName;
            this.currutWeapon.font = "weaponDFont";
            this.currutWeapon.scale(0.5, 0.5);

            this.currtWeaponLevel.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            this.currtWeaponLevel.font = "weaponNFontT";
            this.currtWeaponLevel.scale(0.6, 0.6);

            this.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            this.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            this.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            this.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";

            //兵器技能
            this["skillName_1"].text = "";
            this["skillGl_1"].text = "";
            this["skillDetail_1"].text = "";
            this["skillImg_1"].visible = false;
            this["skillName_2"].text = "";
            this["skillGl_2"].text = "";
            this["skillDetail_2"].text = "";
            this["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    _this5["skillName_" + (index + 1)].color = "#4a4948";
                    _this5["skillGl_" + (index + 1)].color = "#4a4948";
                    _this5["skillDetail_" + (index + 1)].color = "#4a4948";
                    _this5["skillName_" + (index + 1)].text = element.skillName;
                    _this5["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    _this5["skillDetail_" + (index + 1)].text = element.skillDesc;
                    _this5["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        _this5["skillName_" + (index + 1)].color = "#004418";
                        _this5["skillGl_" + (index + 1)].color = "#004418";
                        _this5["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }
        }
    }, {
        key: "onClosed",
        value: function onClosed() {
            if (PaoYa.navigator.scenes.length > 1) {
                PaoYa.navigator.popup('/dialog/PassResultDialog', this.resultParams);
            }
        }
    }]);

    return BuyWp;
}(PaoYa.Dialog);

exports.default = BuyWp;

},{"../../common/tool/Global":55}],64:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require("../../common/tool/Global");

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChangeWp = function (_PaoYa$Dialog) {
    _inherits(ChangeWp, _PaoYa$Dialog);

    function ChangeWp() {
        _classCallCheck(this, ChangeWp);

        var _this = _possibleConstructorReturn(this, (ChangeWp.__proto__ || Object.getPrototypeOf(ChangeWp)).call(this));

        ChangeWp.ins = _this;
        return _this;
    }

    _createClass(ChangeWp, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.resultParams = JSON.parse(JSON.stringify(this.params));

            if (this.params.encounter) {
                this.params = this.params.encounter;
            }

            this.tips.font = "adventure";
            this.tips.x = 630;
            var name = "八卦斧";
            this.label2.text = "\u5E74\u8F7B\u4EBA\uFF0C\u8BF7\u95EE\u4F60\u6709\u6CA1\u6709\u4E00\u628A" + name + "\u3002\u5982\u679C\u4F60\u80FD\u628A\u5B83\u8BA9\u7ED9\u6211\u7684\u8BDD\uFF0C\u8C22\u67D0\u5B9A\u5F53\u91CD\u8C22";

            this.buyBtnText.font = "adventure";
            this.buyBtnText.pos(40, 10);

            this.closeBtnText.font = "adventure";
            this.closeBtnText.pos(60, 10);

            this.getWp.font = "adventure";

            this.infoDetail();

            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                PaoYa.Request.POST("martial_encounter_cancel", {}, function (res) {
                    PaoYa.NotificationCenter.postNotification("adventCancel");
                    _this2.close();
                });
            });

            this.closeBtn2.on(Laya.Event.CLICK, this, function () {
                _this2.close();
            });

            this.buyBtn.on(Laya.Event.CLICK, this, function () {
                if (_this2.params.weaponId) {
                    _this2.sellyWp();
                } else {
                    _Global.Global.dataPoints('奇遇b激励广告');
                    _Tool2.default.showVideoAD(function () {
                        _this2.params.weaponId = "video";
                        _this2.infoDetail();
                    }, null, null, 1);
                }
            });
        }
    }, {
        key: "infoDetail",
        value: function infoDetail() {
            var hhnum = this.params.weaponId ? 1 : 0;
            if (!hhnum) {
                this.buyBtnText.visible = false;
                this.tips2.visible = true;
                this.getWp.visible = true;
                this.get.visible = true;
            } else {
                this.buyBtnText.visible = true;
                this.tips2.visible = false;
                this.getWp.visible = false;
                this.get.visible = false;
            }
            this.num.font = "weaponNFontT";
            this.wpnum.text = hhnum + "/1";
            this.wpnum.font = "weaponNFontT";
            this.num.scale(0.7, 0.7);
            this.wpnum.scale(0.7, 0.7);
        }
    }, {
        key: "sellyWp",
        value: function sellyWp() {
            var _this3 = this;

            PaoYa.Request.POST("martial_encounter_finish", { result: 1, complete: 1, weaponId: this.params.weaponId }, function (res) {
                PaoYa.Request.GET('update_chips', {}, function (res) {
                    PaoYa.DataCenter.gold.value = res.gold;
                    PaoYa.DataCenter.diamond.value = res.diamond;
                });
                PaoYa.NotificationCenter.postNotification("adventComplete");
                _this3.close();
            });
        }
    }, {
        key: "onClosed",
        value: function onClosed() {
            if (PaoYa.navigator.scenes.length > 1) {
                PaoYa.navigator.popup('/dialog/PassResultDialog', this.resultParams);
            }
        }
    }]);

    return ChangeWp;
}(PaoYa.Dialog);

exports.default = ChangeWp;

},{"../../common/tool/Global":55,"../../common/tool/Tool":56}],65:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require("../../common/tool/Global");

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GetAward = function (_PaoYa$Dialog) {
    _inherits(GetAward, _PaoYa$Dialog);

    function GetAward() {
        _classCallCheck(this, GetAward);

        var _this = _possibleConstructorReturn(this, (GetAward.__proto__ || Object.getPrototypeOf(GetAward)).call(this));

        GetAward.ins = _this;
        return _this;
    }

    _createClass(GetAward, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.resultParams = JSON.parse(JSON.stringify(this.params));

            if (this.params.encounter) {
                this.params = this.params.encounter;
            }

            this.tips.font = "adventure";
            this.tips.x = 630;
            this.closeBtnText.font = "adventure";
            this.closeBtnText.scale(0.9, 0.9);
            this.closeBtnText.pos(10, 15);

            this.getWp.font = "adventure";

            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                PaoYa.Request.POST("martial_encounter_cancel", {}, function (res) {
                    if (PaoYa.navigator.scenes.length > 1) {
                        PaoYa.navigator.popup('/dialog/PassResultDialog', _this2.resultParams);
                    }
                    PaoYa.NotificationCenter.postNotification("adventCancel");
                    _this2.close();
                });
            });

            this.closeBtn2.on(Laya.Event.CLICK, this, function () {
                if (PaoYa.navigator.scenes.length > 1) {
                    PaoYa.navigator.popup('/dialog/PassResultDialog', _this2.resultParams);
                }
                _this2.close();
            });

            this.buyBtn.on(Laya.Event.CLICK, this, function () {
                _Global.Global.dataPoints('奇遇c激励广告');
                _Tool2.default.showVideoAD(function () {
                    PaoYa.Request.POST("martial_encounter_finish", { result: 1, complete: 1 }, function (res) {
                        PaoYa.Request.GET('update_chips', {}, function (res) {
                            PaoYa.DataCenter.gold.value = res.gold;
                            PaoYa.DataCenter.diamond.value = res.diamond;
                        });

                        _this2.close();
                        var obj = {
                            type: "sign",
                            detail: { gold: res.gold },
                            isAdventure: true,
                            resultParams: _this2.resultParams
                        };
                        PaoYa.navigator.popup("common/Award", obj);
                    });
                }, null, null, 1);
            });
        }
    }, {
        key: "onClosed",
        value: function onClosed() {}
    }]);

    return GetAward;
}(PaoYa.Dialog);

exports.default = GetAward;

},{"../../common/tool/Global":55,"../../common/tool/Tool":56}],66:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Sign = require("../../common/sign/Sign");

var _Sign2 = _interopRequireDefault(_Sign);

var _WheelControl = require("../../common/wheel/WheelControl");

var _WheelControl2 = _interopRequireDefault(_WheelControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Wheel = require("../../common/wheel/Wheel");

var _Wheel2 = _interopRequireDefault(_Wheel);

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _Global = require("../../common/tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Award = function (_PaoYa$Dialog) {
    _inherits(Award, _PaoYa$Dialog);

    function Award() {
        _classCallCheck(this, Award);

        return _possibleConstructorReturn(this, (Award.__proto__ || Object.getPrototypeOf(Award)).call(this));
        // this.showBannerAd({
        //     style:{
        //         width:300,
        //         align:'middle'  //广告位位置：middle ,left,right
        //     }
        // })
    }

    _createClass(Award, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.tips.font = "weaponDFont";
            this.tips.scale(0.7, 0.7);
            // this.tips.pos(45, 12)

            switch (this.params.type) {
                case "sign":
                    this.sign.visible = true;
                    this.btnClose.visible = true;

                    this.sure.font = "weaponDFont";
                    this.sure.scale(0.6, 0.6);
                    this.sure.pos(60, 13);

                    this.btnClose.on(Laya.Event.CLICK, this, function () {
                        _SoundManager2.default.ins.btn();
                        _this2.close();
                    });
                    break;
                case "wheel":
                    this.wheel.visible = true;
                    this.noThank.visible = true;
                    this.again.visible = true;

                    this.noThankTxt.font = "weaponDFont";
                    this.noThankTxt.scale(0.6, 0.6);
                    this.noThankTxt.pos(75, 15);

                    this.againTxt.font = "weaponDFont";
                    this.againTxt.scale(0.6, 0.6);
                    this.againTxt.pos(100, 15);

                    this.again.on(Laya.Event.CLICK, this, function () {
                        _SoundManager2.default.ins.btn();
                        _Global.Global.dataPoints('转盘倍数领取激励广告');
                        _Tool2.default.showVideoAD(function () {
                            PaoYa.Request.POST('martial_adv_receive', { exchangeId: _this2.params.detail.wheel.id, adv: 1 }, function () {
                                _Wheel2.default.ins.changeDG();
                                _this2.close();
                            });
                        });
                    });

                    this.noThank.on(Laya.Event.CLICK, this, function () {
                        _SoundManager2.default.ins.btn();
                        _this2.close();
                    });
                    break;
            }

            for (var key in this.params.detail) {
                switch (key) {
                    case "weaponId":
                        this.again.visible = false;
                        if (this.params.detail.weaponId.indexOf("g") != -1) {
                            this.mark.skin = "local/common/type_1.png";
                        }
                        if (this.params.detail.weaponId.indexOf("z") != -1) {
                            this.mark.skin = "local/common/type_2.png";
                        }
                        if (this.params.detail.weaponId.indexOf("d") != -1) {
                            this.mark.skin = "local/common/type_3.png";
                        }

                        var arr4 = this.params.detail.weaponId.split("-");
                        this.wpimage.skin = "remote/small_weapons/s_" + arr4[0] + ".png";
                        this.wp.visible = true;

                        break;
                    case "roleId":
                        this.icon.visible = true;
                        this.iconnum.skin = "local/common/hero_" + this.params.detail.roleId + ".png";
                        break;
                    case "gold":
                        _SoundManager2.default.ins.gold();
                        this.awardImage.visible = true;
                        this.num.visible = true;
                        this.awardImage.skin = "local/common/icon.png";
                        this.num.text = "\xD7" + this.params.detail.gold;
                        this.num.font = "weaponNFontT";
                        this.num.scale(0.65, 0.65);
                        switch (this.params.type) {
                            case "sign":
                                break;
                            case "wheel":
                                // PaoYa.DataCenter.user.gold += this.params.detail.gold
                                // WheelControl.ins.owner.goldNum.text = PaoYa.DataCenter.user.gold
                                break;
                        }
                        // this.num.pos(28, 175)
                        break;
                    case "diamond":
                        _SoundManager2.default.ins.gold();
                        this.awardImage.visible = true;
                        this.num.visible = true;
                        this.awardImage.skin = "local/common/diamond.png";
                        this.num.text = "\xD7" + this.params.detail.diamond;
                        this.num.font = "weaponNFontT";
                        this.num.scale(0.65, 0.65);
                        switch (this.params.type) {
                            case "sign":
                                break;
                            case "wheel":
                                // PaoYa.DataCenter.user.diamond += this.params.detail.diamond
                                // WheelControl.ins.owner.diamondNum.text = PaoYa.DataCenter.user.gold
                                break;
                        }
                        // this.num.pos(28, 175)
                        break;
                }
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "onClosed",
        value: function onClosed() {
            if (this.params.isAdventure) {
                PaoYa.NotificationCenter.postNotification("adventComplete");
                if (PaoYa.navigator.scenes.length > 1) {
                    PaoYa.navigator.popup('/dialog/PassResultDialog', this.params.resultParams);
                }
                return;
            }
            switch (this.params.type) {
                case "sign":
                    _Sign2.default.ins.params.status++;
                    _Sign2.default.ins.params.login_days++;
                    _Sign2.default.ins.initInfo();
                    break;
                case "wheel":
                    _Wheel2.default.ins.changeDG();
                    break;
            }
        }
    }]);

    return Award;
}(PaoYa.Dialog);

exports.default = Award;

},{"../../../gamescripts/SoundManager":8,"../../common/sign/Sign":51,"../../common/tool/Global":55,"../../common/tool/Tool":56,"../../common/wheel/Wheel":61,"../../common/wheel/WheelControl":62}],67:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WheelControl = require("../../common/wheel/WheelControl");

var _WheelControl2 = _interopRequireDefault(_WheelControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuyWheelTimes = function (_PaoYa$Dialog) {
    _inherits(BuyWheelTimes, _PaoYa$Dialog);

    function BuyWheelTimes() {
        _classCallCheck(this, BuyWheelTimes);

        return _possibleConstructorReturn(this, (BuyWheelTimes.__proto__ || Object.getPrototypeOf(BuyWheelTimes)).call(this));
    }

    _createClass(BuyWheelTimes, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.buybtnTxt.font = "weaponDFont";
            this.buybtnTxt.scale(0.8, 0.8);
            this.buybtnTxt.pos(55, 10);

            this.title.font = "figureDetail";
            this.title.scale(0.75, 0.75);
            this.title.x = (544 - this.title.width * 0.75) / 2;

            this.buy.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
                if (PaoYa.DataCenter.user.diamond >= 500) {
                    _WheelControl2.default.ins.addTimesD(0);
                } else {
                    PaoYa.navigator.popup("weapon/DiamondLack", 1);
                }
            });

            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });
        }
    }]);

    return BuyWheelTimes;
}(PaoYa.Dialog);

exports.default = BuyWheelTimes;

},{"../../../gamescripts/SoundManager":8,"../../common/wheel/WheelControl":62}],68:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Task = function (_PaoYa$Dialog) {
    _inherits(Task, _PaoYa$Dialog);

    function Task() {
        _classCallCheck(this, Task);

        return _possibleConstructorReturn(this, (Task.__proto__ || Object.getPrototypeOf(Task)).call(this));
    }

    _createClass(Task, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.btnClose.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _SoundManager2.default.ins.btn();
            });

            this.title.font = "weaponDFont";
            this.title.scale(0.6, 0.6);
            this.title.pos(480, 78);

            this.params.list.forEach(function (element, index) {
                element.ranking = index;
            });
            this.rankList.vScrollBarSkin = "";
            this.rankList.renderHandler = new Laya.Handler(this, this.rankListItem);
            this.rankList.array = this.params.list;
            console.log(this.params.list);
            this.myRank.dataSource = {};
            this.myRank.dataSource.member_avstar = this.params.member_avstar;
            this.myRank.dataSource.member_nick = this.params.member_nick;
            this.myRank.dataSource.ranking = this.params.ranking == -1 ? -1 : Number(this.params.ranking) - 1;
            this.myRank.dataSource.score = this.params.score;
            this.rankListItem(this.myRank, this.myRank.dataSource.ranking);
        }
    }, {
        key: "rankListItem",
        value: function rankListItem(cell, index) {
            console.log(cell.dataSource.ranking);
            var rankicon = cell.getChildByName("rankicon");
            var ranknum = cell.getChildByName("ranknum");
            var usericon = cell.getChildByName("usericon");
            var name = cell.getChildByName("name");
            var rankdetail = cell.getChildByName("rankdetail");
            var award1 = cell.getChildByName("award1");
            var award2 = cell.getChildByName("award2");

            name.text = PaoYa.Utils.formatName(cell.dataSource.member_nick);
            var num1 = cell.dataSource.score % 1000;
            var num2 = cell.dataSource.score / 1000 | 0;
            rankdetail.text = PaoYa.DataCenter.user.config_list.hero.ladderList[num2 - 1].ladderName + "\xD7" + num1;
            name.visible = true;
            rankdetail.visible = true;
            usericon.skin = cell.dataSource.member_avstar;
            usericon.visible = true;

            if (cell.dataSource.ranking < 3 && cell.dataSource.ranking != -1) {
                rankicon.skin = "remote/task/100" + (cell.dataSource.ranking + 1) + ".png";
                rankicon.visible = true;
                ranknum.visible = false;
            } else {
                rankicon.visible = false;
                if (cell.dataSource.ranking == -1) {
                    ranknum.text = "\u699C\u5916";
                    ranknum.scale(0.8, 0.8);
                    ranknum.x = 37;
                    ranknum.y = 27;
                    ranknum.visible = true;
                    ranknum.font = "weaponDFont";
                } else {
                    ranknum.text = cell.dataSource.ranking + 1;
                    ranknum.visible = true;
                    ranknum.font = "weaponDFont";
                }
            }
        }
    }]);

    return Task;
}(PaoYa.Dialog);

exports.default = Task;

},{"../../../gamescripts/SoundManager":8}],69:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Wheel = require("../../common/wheel/Wheel");

var _Wheel2 = _interopRequireDefault(_Wheel);

var _HomeControl = require("../../common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _Global = require("../../common/tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Task = function (_PaoYa$Dialog) {
    _inherits(Task, _PaoYa$Dialog);

    function Task() {
        _classCallCheck(this, Task);

        return _possibleConstructorReturn(this, (Task.__proto__ || Object.getPrototypeOf(Task)).call(this));
    }

    _createClass(Task, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            _Global.Global.dataPoints('进入任务页面');
            this.autoDestroyAtClosed = true;
            PaoYa.Request.GET('update_chips', {}, function (res) {
                _this2.goldNum.width = null;

                PaoYa.DataCenter.user.gold = res.gold;
                PaoYa.DataCenter.user.diamond = res.diamond;
                var goldnum = addNumberUnit(PaoYa.DataCenter.user.gold);
                var diamondnum = addNumberUnit(PaoYa.DataCenter.user.diamond);

                _this2.goldNum.text = goldnum;
                _this2.goldNum.font = "weaponNFontT";
                _this2.goldNum.scale(0.6, 0.6);
                _this2.goldNum.pos(365 + (149 - _this2.goldNum.width * 0.6) / 2, 25);
                _this2.diamondNum.text = diamondnum;
                _this2.diamondNum.font = "weaponNFontT";
                _this2.diamondNum.scale(0.6, 0.6);
                _this2.diamondNum.pos(600 + (149 - _this2.diamondNum.width * 0.6) / 2, 25);

                function addNumberUnit(num) {
                    switch (true) {
                        case num >= 10000 && num < 100000000:
                            var integ = num / 10000;
                            return Math.floor(integ * 100) / 100 + '万';
                            break;
                        case num >= 100000000:
                            var integ1 = num / 100000000;
                            return Math.floor(integ1 * 100) / 100 + '亿';
                            break;
                        default:
                            return num + '';
                            break;
                    }
                };
            });

            this.btnClose.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            this.title.font = "weaponDFont";
            this.title.scale(0.6, 0.6);
            this.title.pos(515, 78);

            this.taskList.vScrollBarSkin = "";
            this.taskList.renderHandler = new Laya.Handler(this, this.taskListItem);
            this.taskList.array = this.getNewList(this.params);
        }
    }, {
        key: "getNewList",
        value: function getNewList(arr) {
            var arr2 = [];
            arr.forEach(function (element) {
                if (element.status != 2) {
                    arr2.push(element);
                }
            });
            return arr2;
        }
    }, {
        key: "taskListItem",
        value: function taskListItem(cell, index) {
            var _this3 = this;

            console.log(cell.dataSource, index);
            var bg = cell.getChildByName("bg");
            var num = cell.getChildByName("num");
            var detail2 = cell.getChildByName("detail2");
            var detail = cell.getChildByName("detail");
            var img = cell.getChildByName("img");
            var diamondNum = cell.getChildByName("diamondNum");
            var btn = cell.getChildByName("btn");
            var noThankTxt = cell.getChildByName("noThankTxt");
            var sp = cell.getChildByName("sp");
            sp.visible = false;

            bg.visible = cell.dataSource.finish >= cell.dataSource.num;
            img.width = cell.dataSource.finish / cell.dataSource.num >= 1 ? 144 : cell.dataSource.finish / cell.dataSource.num * 144;
            diamondNum.text = cell.dataSource.diamond;
            diamondNum.font = "weaponDFont";
            diamondNum.scale(0.65, 0.65);
            diamondNum.pos(598, 24);

            btn.skin = cell.dataSource.finish / cell.dataSource.num >= 1 ? "local/common/btn_1.png" : "local/common/btn_2.png";

            btn.offAll();
            btn.disabled = false;
            if (cell.dataSource.status == 2) {
                noThankTxt.text = "\u5DF2\u9886\u53D6";
                noThankTxt.font = "weaponDFont";
                noThankTxt.scale(0.65, 0.65);
                noThankTxt.pos(751 + (172 - noThankTxt.width * 0.65) / 2, 15);
                btn.disabled = true;
            } else {
                if (cell.dataSource.finish / cell.dataSource.num >= 1) {
                    noThankTxt.text = "\u9886\u53D6";
                    noThankTxt.font = "weaponDFont";
                    noThankTxt.scale(0.65, 0.65);
                    noThankTxt.pos(751 + (172 - noThankTxt.width * 0.65) / 2 + 30, 15);
                    sp.visible = true;
                    btn.on(Laya.Event.CLICK, this, function () {
                        _Global.Global.dataPoints('任务奖励领取激励广告');
                        _Tool2.default.showVideoAD(function () {
                            PaoYa.Request.POST("martial_task_receive", { taskKey: cell.dataSource.task }, function (res) {
                                _SoundManager2.default.ins.gold();
                                PaoYa.DataCenter.user.diamond += cell.dataSource.diamond;
                                _this3.diamondNum.text = addNumberUnit(PaoYa.DataCenter.user.diamond);

                                function addNumberUnit(num) {
                                    switch (true) {
                                        case num >= 10000 && num < 100000000:
                                            var integ = num / 10000;
                                            return Math.floor(integ * 100) / 100 + '万';
                                            break;
                                        case num >= 100000000:
                                            var integ1 = num / 100000000;
                                            return Math.floor(integ1 * 100) / 100 + '亿';
                                            break;
                                        default:
                                            return num + '';
                                            break;
                                    }
                                };

                                var statuss = false;
                                _this3.params.forEach(function (element) {
                                    if (element.task == cell.dataSource.task) {
                                        for (var key in res) {
                                            element[key] = res[key];
                                        }
                                    }

                                    if (element.status == 1) {
                                        statuss = true;
                                    }
                                });
                                PaoYa.DataCenter.user.dailyTaskStatus = statuss;
                                _HomeControl2.default.ins.owner.taskDot.visible = PaoYa.DataCenter.user.dailyTaskStatus ? true : false;

                                _this3.taskList.array = _this3.getNewList(_this3.params);
                            });
                        });
                    });
                } else {
                    noThankTxt.text = "\u53BB\u5B8C\u6210";
                    noThankTxt.font = "weaponDFont";
                    noThankTxt.scale(0.65, 0.65);
                    noThankTxt.pos(751 + (172 - noThankTxt.width * 0.65) / 2, 15);
                    btn.on(Laya.Event.CLICK, this, function () {
                        _SoundManager2.default.ins.btn();
                        _this3.close();
                    });
                }
            }

            switch (cell.dataSource.task) {
                case "taskMonster":
                    detail.text = "\u51FB\u8D25\u4E86";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u4E2A\u654C\u4EBA";
                    detail2.x = num.width + num.x;
                    break;
                case "taskBoss":
                    detail.text = "\u51FB\u8D25";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u4E2ABOSS";
                    detail2.x = num.width + num.x;
                    break;
                case "taskWin":
                    detail.text = "\u5BF9\u5C40\u80DC\u5229";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u5C40";
                    detail2.x = num.width + num.x;
                    break;
                case "taskEncounter":
                    detail.text = "\u5B8C\u6210";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u6B21\u5947\u9047";
                    detail2.x = num.width + num.x;
                    break;
                case "taskUpWeapon":
                    detail.text = "\u5347\u7EA7";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u6B21\u5175\u5668";
                    detail2.x = num.width + num.x;
                    break;
                case "taskGetWeapon":
                    detail.text = "\u83B7\u5F97";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u4E2A\u5175\u5668";
                    detail2.x = num.width + num.x;
                    break;
                case "taskShare":
                    detail.text = "\u5206\u4EAB";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u6B21";
                    detail2.x = num.width + num.x;
                    break;
                case "taskRefresh":
                    detail.text = "\u5237\u65B0";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u6B21\u5546\u5E97";
                    detail2.x = num.width + num.x;
                    break;
                case "taskInvite":
                    detail.text = "\u9080\u8BF7";
                    num.text = cell.dataSource.finish;
                    num.x = detail.width + detail.x;
                    num.color = cell.dataSource.finish >= cell.dataSource.num ? "#000000" : '#d10000';
                    detail2.text = "/" + cell.dataSource.num + "\u4E2A\u597D\u53CB";
                    detail2.x = num.width + num.x;
                    break;
            }
        }
    }, {
        key: "onClosed",
        value: function onClosed() {
            PaoYa.Request.GET('update_chips', {}, function (res) {
                PaoYa.DataCenter.gold.value = res.gold;
                PaoYa.DataCenter.diamond.value = res.diamond;
            });
            if (_Wheel2.default && _Wheel2.default.ins) {
                _Wheel2.default.ins.changeDG();
            }
        }
    }]);

    return Task;
}(PaoYa.Dialog);

exports.default = Task;

},{"../../../gamescripts/SoundManager":8,"../../common/HomeControl":38,"../../common/tool/Global":55,"../../common/tool/Tool":56,"../../common/wheel/Wheel":61}],70:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Swordsman = require("../../common/figure/Swordsman");

var _Swordsman2 = _interopRequireDefault(_Swordsman);

var _SwordsmanControl = require("../../common/figure/SwordsmanControl");

var _SwordsmanControl2 = _interopRequireDefault(_SwordsmanControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuyHero = function (_PaoYa$Dialog) {
    _inherits(BuyHero, _PaoYa$Dialog);

    function BuyHero() {
        _classCallCheck(this, BuyHero);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (BuyHero.__proto__ || Object.getPrototypeOf(BuyHero)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(BuyHero, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _SoundManager2.default.ins.btn();
            });
            this.buybtnTxt.font = "weaponDFont";
            this.buybtnTxt.scale(0.8, 0.8);
            this.buybtnTxt.pos(55, 10);

            this.needNum.text = this.params.rolePrice;
            this.needNum.font = "figureDetail";
            this.needNum.scale(1.5, 1.5);
            this.needNum.pos(755, 167);

            this.roleImg.skin = "remote/figure/role_" + this.params.roleId + ".png";
            this.nameImg.skin = "remote/figure/name_" + this.params.roleId + ".png";

            this.buy.on(Laya.Event.CLICK, this, function () {
                if (PaoYa.DataCenter.user.diamond < _this2.params.rolePrice) {
                    _this2.close();
                    _SoundManager2.default.ins.btn();
                    _SwordsmanControl2.default.ins.openGetD();
                    return;
                }
                PaoYa.Request.POST("martial_role_buy", { roleId: _this2.params.roleId }, function (res) {
                    PaoYa.DataCenter.user.diamond -= Number(_this2.params.rolePrice);
                    _Swordsman2.default.ins.changeGold();
                    _SwordsmanControl2.default.ins.owner.params.roleList.forEach(function (element, index) {
                        if (element.roleId == res.role.roleId) {
                            // for (const key in element) {
                            element = res.role;
                            // }
                            _SwordsmanControl2.default.ins.owner.params.roleList[index] = element;
                            _SwordsmanControl2.default.ins.owner.showDetail = element;
                        }
                    });
                    // SwordsmanControl.ins.owner.params.roleList.splice(2, 1)
                    _SwordsmanControl2.default.ins.owner.herolist.array = _SwordsmanControl2.default.ins.owner.params.roleList;

                    _SwordsmanControl2.default.ins.owner.initInfo();
                    _this2.close();
                });
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return BuyHero;
}(PaoYa.Dialog);

exports.default = BuyHero;

},{"../../../gamescripts/SoundManager":8,"../../common/figure/Swordsman":45,"../../common/figure/SwordsmanControl":46}],71:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoldLack = function (_PaoYa$Dialog) {
    _inherits(GoldLack, _PaoYa$Dialog);

    function GoldLack() {
        _classCallCheck(this, GoldLack);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (GoldLack.__proto__ || Object.getPrototypeOf(GoldLack)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(GoldLack, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.btn.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _SoundManager2.default.ins.btn();
            });
            this.skillName.text = this.params.skillName;
            this.skillName.font = "figureDetail";
            this.skillName.scale(0.75, 0.75);
            this.skillName.x = (450 - this.skillName.width * 0.75) / 2;
            this.skillName.y = 130;

            this.skilldetail.text = "    " + this.params.skillDesc;
            this.skilldetail.letterSpacing = 4;

            this.sure.font = "weaponDFont";
            this.sure.scale(0.8, 0.8);
            this.sure.pos(55, 10);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return GoldLack;
}(PaoYa.Dialog);

exports.default = GoldLack;

},{"../../../gamescripts/SoundManager":8}],72:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkillDetail = function (_PaoYa$Dialog) {
    _inherits(SkillDetail, _PaoYa$Dialog);

    function SkillDetail() {
        _classCallCheck(this, SkillDetail);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (SkillDetail.__proto__ || Object.getPrototypeOf(SkillDetail)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(SkillDetail, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.maskBg.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });
            this.skillName.text = this.params.skillName;
            this.skillName.font = "figureDetail";
            this.skillName.scale(0.75, 0.75);
            this.skillName.x = (450 - this.skillName.width * 0.75) / 2;

            this.unlock.text = this.params.skillUnlock + "\u7EA7\u89E3\u9501";
            this.skilldetail.text = "    " + this.params.skillDesc;
            this.skilldetail.letterSpacing = 4;
            this.cd.text = "\u51B7\u5374\uFF1A" + this.params.skillCd;
            this.cost.text = "\u6D88\u8017\uFF1A" + this.params.skillConsume + "\u5185\u529B";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return SkillDetail;
}(PaoYa.Dialog);

exports.default = SkillDetail;

},{"../../../gamescripts/SoundManager":8}],73:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RefiningControl = require("../../common/refiner/RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Canlock = function (_PaoYa$Dialog) {
    _inherits(Canlock, _PaoYa$Dialog);

    function Canlock() {
        _classCallCheck(this, Canlock);

        return _possibleConstructorReturn(this, (Canlock.__proto__ || Object.getPrototypeOf(Canlock)).call(this));
    }

    _createClass(Canlock, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.title.font = "figureDetail";
            this.title.scale(0.8, 0.8);
            this.title.x = (543 - this.title.width) / 2;

            this.btn2Txt.font = "weaponDFont";
            this.btn2Txt.scale(0.7, 0.7);
            this.btn2Txt.pos(42, 15);

            this.btn2.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            var arr = this.params.refinerId.split(",");

            var ll = _RefiningControl2.default.ins.owner.params.refiner_list.length;
            var showList = [];
            for (var i = 0; i < arr.length; i++) {
                for (var j = 0; j < ll; j++) {
                    if (_RefiningControl2.default.ins.owner.params.refiner_list[j].id == arr[i]) {
                        showList.push(_RefiningControl2.default.ins.owner.params.refiner_list[j]);
                    }
                }
            }
            this.skillList.x = arr.length == 2 ? 75 : 152;
            switch (arr.length) {
                case 1:
                    this.skillList.x = 152;
                    break;
                case 2:
                    this.skillList.x = 75;
                    break;
                case 3:
                    this.skillList.x = 0;
                    break;
            }
            this.skillList.renderHandler = new Laya.Handler(this, this.skillRender);
            this.skillList.array = showList;
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "skillRender",
        value: function skillRender(cell, idx) {
            console.log(cell._dataSource);
            cell.skin = cell._dataSource.type ? "remote/refining/6.png" : "remote/refining/7.png";
            cell.getChildByName("refinerTxt").text = cell._dataSource.refinerName;
            cell.getChildByName("refinerTxt").font = "weaponDFont";
            cell.getChildByName("refinerTxt").scale(0.60, 0.60);
            cell.getChildByName("refinerTxt").pos(35, 12);

            cell.getChildByName("refinerLv").text = "LV." + this.params.refinerUnlock;
            cell.getChildByName("refinerLv").font = "weaponNFontT";
            cell.getChildByName("refinerLv").scale(0.5, 0.5);
            cell.getChildByName("refinerLv").pos(20, 93);
        }
    }]);

    return Canlock;
}(PaoYa.Dialog);

exports.default = Canlock;

},{"../../../gamescripts/SoundManager":8,"../../common/refiner/RefiningControl":50}],74:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HomeControl = require("../../common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DiamondLack = function (_PaoYa$Dialog) {
    _inherits(DiamondLack, _PaoYa$Dialog);

    function DiamondLack() {
        _classCallCheck(this, DiamondLack);

        return _possibleConstructorReturn(this, (DiamondLack.__proto__ || Object.getPrototypeOf(DiamondLack)).call(this));
    }

    _createClass(DiamondLack, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            // this.maskBg.on(Laya.Event.CLICK, this, () => {
            //     this.close()
            // })
            this.tipTxt.font = "weaponDFont";
            this.tipTxt.scale(0.7, 0.7);
            this.tipTxt.pos(45, 12);

            this.maskBg.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            this.btn.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
                _HomeControl2.default.ins.GET("martial_task_list", {}, function (res) {
                    //console.log(res)
                    if (!res) {
                        return;
                    }
                    PaoYa.navigator.popup("common/Task", res);
                });
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return DiamondLack;
}(PaoYa.Dialog);

exports.default = DiamondLack;

},{"../../../gamescripts/SoundManager":8,"../../common/HomeControl":38}],75:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoldLack = function (_PaoYa$Dialog) {
    _inherits(GoldLack, _PaoYa$Dialog);

    function GoldLack() {
        _classCallCheck(this, GoldLack);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (GoldLack.__proto__ || Object.getPrototypeOf(GoldLack)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(GoldLack, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.maskBg.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });
            this.tipTxt.font = "weaponDFont";
            this.tipTxt.scale(0.7, 0.7);
            this.tipTxt.pos(45, 12);

            this.btn.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _SoundManager2.default.ins.btn();
                PaoYa.navigator.push("Wheel");
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return GoldLack;
}(PaoYa.Dialog);

exports.default = GoldLack;

},{"../../../gamescripts/SoundManager":8}],76:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponStoreControl = require("../../common/weapon/WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

var _DevourControl = require("../../common/refiner/DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StoreSure = function (_PaoYa$Dialog) {
    _inherits(StoreSure, _PaoYa$Dialog);

    function StoreSure() {
        _classCallCheck(this, StoreSure);

        return _possibleConstructorReturn(this, (StoreSure.__proto__ || Object.getPrototypeOf(StoreSure)).call(this));
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
    }

    _createClass(StoreSure, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            // this.mask.on(Laya.Event.CLICK, this, this.close)
            this.btn1.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            this.btn4.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            this.btn2.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
                _WeaponStoreControl2.default.ins.refresF();
            });

            this.btn3.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
                _WeaponStoreControl2.default.ins.sellWp(1);
            });

            this.btn5.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
                _DevourControl2.default.ins.eatWp(1);
            });

            this.closeBtn.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });

            if (this.params.type == "buy") {
                this.title.skin = "remote/weaponstore/6.png";
                this.title.x = (543 - this.title.width) / 2;
                this.btn1.visible = true;
                this.btn2.visible = true;
                this.btn3.visible = false;
                this.btn4.visible = false;
                this.btn5.visible = false;
            } else {
                this.title.skin = "remote/weaponstore/7.png";
                this.title.x = (543 - this.title.width) / 2;
                this.btn1.visible = false;
                this.btn2.visible = false;
                if (this.params.type == "refining") {
                    this.btn4.text = "\u70B9\u9519\u4E86\uFF0C\u4E0D\u541E";
                    this.btn3.visible = false;
                    this.btn5.visible = true;
                } else {
                    this.btn4.text = "\u70B9\u9519\u4E86\uFF0C\u4E0D\u5356";
                    this.btn3.visible = true;
                    this.btn5.visible = false;
                }

                this.btn4.visible = true;
            }

            this.btn1Txt.font = "weaponDFont";
            this.btn1Txt.scale(0.45, 0.45);
            this.btn4Txt.font = "weaponDFont";
            this.btn4Txt.scale(0.45, 0.45);
            this.btn2Txt.font = "weaponDFont";
            this.btn2Txt.scale(0.45, 0.45);
            this.btn3Txt.font = "weaponDFont";
            this.btn3Txt.scale(0.45, 0.45);
            this.btn5Txt.font = "weaponDFont";
            this.btn5Txt.scale(0.45, 0.45);

            var showMarkUrl = null;
            switch (this.params.detail.weaponType) {
                case 3:
                    showMarkUrl = "local/common/type_1.png";
                    break;
                case 2:
                    showMarkUrl = "local/common/type_2.png";
                    break;
                case 1:
                    showMarkUrl = "local/common/type_3.png";
                    break;
            }
            this.showWeapon.skin = "remote/small_weapons/s_" + this.params.detail.weaponId + ".png";
            this.showMark.skin = showMarkUrl;
            this.currtWeaponLevel.text = "LV." + this.params.detail.weaponLevel;
            this.currtWeaponLevel.font = "weaponNFontT";
            this.currtWeaponLevel.scale(0.6, 0.6);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return StoreSure;
}(PaoYa.Dialog);

exports.default = StoreSure;

},{"../../../gamescripts/SoundManager":8,"../../common/refiner/DevourControl":48,"../../common/weapon/WeaponStoreControl":60}],77:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _Global = require("../../common/tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockFifth = function (_PaoYa$Dialog) {
    _inherits(UnlockFifth, _PaoYa$Dialog);

    function UnlockFifth() {
        _classCallCheck(this, UnlockFifth);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockFifth.__proto__ || Object.getPrototypeOf(UnlockFifth)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockFifth, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.maskBg.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });
            this.btn.on(Laya.Event.CLICK, this, function () {
                _Global.Global.dataPoints('五号兵器格分享');
                _SoundManager2.default.ins.btn();
                _Tool2.default.inviteFriend();
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockFifth;
}(PaoYa.Dialog);

exports.default = UnlockFifth;

},{"../../../gamescripts/SoundManager":8,"../../common/tool/Global":55,"../../common/tool/Tool":56}],78:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponHouseControl = require("../../common/weapon/WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

var _HomeControl = require("../../common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockFour = function (_PaoYa$Dialog) {
    _inherits(UnlockFour, _PaoYa$Dialog);

    function UnlockFour() {
        _classCallCheck(this, UnlockFour);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockFour.__proto__ || Object.getPrototypeOf(UnlockFour)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockFour, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.autoDestroyAtClosed = true;
            this.maskBg.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                _this2.close();
            });
            this.btn.on(Laya.Event.CLICK, this, function () {
                _SoundManager2.default.ins.btn();
                PaoYa.Request.POST("martial_buy_grid", {}, function (res) {
                    _WeaponHouseControl2.default.ins.owner.diamondNum.text = addNumberUnit(res.diamond);
                    _WeaponHouseControl2.default.ins.params.weaponGridNum += 1;
                    _WeaponHouseControl2.default.ins.getMyUserDetailList();
                    _WeaponHouseControl2.default.ins.owner.userWeaponList.array = _WeaponHouseControl2.default.ins.myUserDetailList;
                    _this2.close();

                    function addNumberUnit(num) {
                        switch (true) {
                            case num >= 10000 && num < 100000000:
                                var integ = num / 10000;
                                return Math.floor(integ * 100) / 100 + '万';
                                break;
                            case num >= 100000000:
                                var integ1 = num / 100000000;
                                return Math.floor(integ1 * 100) / 100 + '亿';
                                break;
                            default:
                                return num + '';
                                break;
                        }
                    };
                }, function () {
                    _this2.close();
                    _HomeControl2.default.ins.navigator.popup("weapon/DiamondLack");
                });
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockFour;
}(PaoYa.Dialog);

exports.default = UnlockFour;

},{"../../../gamescripts/SoundManager":8,"../../common/HomeControl":38,"../../common/weapon/WeaponHouseControl":58}],79:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SoundManager = require("../../../gamescripts/SoundManager");

var _SoundManager2 = _interopRequireDefault(_SoundManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockTips = function (_PaoYa$Dialog) {
    _inherits(UnlockTips, _PaoYa$Dialog);

    function UnlockTips() {
        _classCallCheck(this, UnlockTips);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockTips.__proto__ || Object.getPrototypeOf(UnlockTips)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockTips, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.tips.text = this.params;
            this.autoDestroyAtClosed = true;
            this.btn.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _SoundManager2.default.ins.btn();
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockTips;
}(PaoYa.Dialog);

exports.default = UnlockTips;

},{"../../../gamescripts/SoundManager":8}],80:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BeanBox = function (_PaoYa$Component) {
    _inherits(BeanBox, _PaoYa$Component);

    function BeanBox() {
        _classCallCheck(this, BeanBox);

        return _possibleConstructorReturn(this, (BeanBox.__proto__ || Object.getPrototypeOf(BeanBox)).apply(this, arguments));
    }

    _createClass(BeanBox, [{
        key: 'onAwake',

        /** @prop {name:boxType,tips:"1-金币，2-钻石",type:Option,option:"1,2",default:1}*/
        value: function onAwake() {
            this.boxType = this.boxType || '1';
            this.integBg = this.owner.getChildByName('beanBg');
            this.labelBg = this.owner.getChildByName('labelBgCircle');
            this.skinLeft = this.owner.getChildByName("imgLeft");
            this.label = this.owner.getChildByName("label");
            this.label.font = 'weaponNFontT';
            //    / this.label.pivot(75,25);
            this.label.scale(0.6, 0.6);
            this.changeBox();
        }
    }, {
        key: 'changeBox',
        value: function changeBox() {
            switch (this.boxType) {
                case '1':
                    PaoYa.DataCenter.gold.addObserver(this, this.handleGoldChange);
                    break;
                case '2':
                    this.skinLeft.skin = 'local/common/diamond.png';
                    this.skinLeft.y = -5;
                    this.skinLeft.size(60, 60);
                    PaoYa.DataCenter.diamond.addObserver(this, this.handleDiamondChange);
                    break;

            }
        }
    }, {
        key: 'onClick',
        value: function onClick() {
            switch (this.boxType) {
                case '1':
                    console.log('点击金币');
                    break;
                case '2':
                    console.log('点击砖石');
                    break;
            }
        }
    }, {
        key: 'handleDiamondChange',
        value: function handleDiamondChange(value) {
            addNumberUnit(value) == 'undefined' ? this.label.text = '' : this.label.text = addNumberUnit(value);
        }
    }, {
        key: 'handleGoldChange',
        value: function handleGoldChange(value) {
            addNumberUnit(value) == 'undefined' ? this.label.text = '' : this.label.text = addNumberUnit(value);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {
            PaoYa.DataCenter.diamond.removeObserver(this, this.handleIntegralChange);
            PaoYa.DataCenter.gold.removeObserver(this, this.handleGoldChange);
        }
    }]);

    return BeanBox;
}(PaoYa.Component);

exports.default = BeanBox;

function addNumberUnit(num) {
    switch (true) {
        case num >= 10000 && num < 100000000:
            var integ = num / 10000;
            return Math.floor(integ * 100) / 100 + '万';
            break;
        case num >= 100000000:
            var integ1 = num / 100000000;
            return Math.floor(integ1 * 100) / 100 + '亿';
            break;
        default:
            return num + '';
            break;
    }
};

},{}],81:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Tool = require("../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

var _Global = require("../common/tool/Global");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var White = function (_PaoYa$Component) {
    _inherits(White, _PaoYa$Component);

    function White() {
        _classCallCheck(this, White);

        var _this = _possibleConstructorReturn(this, (White.__proto__ || Object.getPrototypeOf(White)).call(this));

        White.ins = _this;
        _this.gameList = [{ name: "开心消方块", icon: "remote/icon/9.png", appId: "wx169e4a2b116bdab6", sizeNum: 8 }, { name: "采油小怪", icon: "remote/icon/8.png", appId: "wxee32187228632dc8", sizeNum: 7 }, { name: "熄灭火花", icon: "remote/icon/1.png", appId: "wxe01f9f77ddb96b19", sizeNum: 0 }, { name: "跳一跳", icon: "remote/icon/2.png", appId: "wx79a2296d151ac183", sizeNum: 1 }, { name: "建筑反应堆", icon: "remote/icon/3.png", appId: "wxb4ac0c02cd5bbd13", sizeNum: 2 }, { name: "木兰射箭", icon: "remote/icon/4.png", appId: "wx84dbcda70a6e5385", sizeNum: 3 }, { name: "决战地牢", icon: "remote/icon/5.png", appId: "wx325b44b8ed5ef472", sizeNum: 4 }, { name: "飞刀大师", icon: "remote/icon/6.png", appId: "wxbc263a31f4a052e7", sizeNum: 5 }, { name: "火力飙车", icon: "remote/icon/7.png", appId: "wxed5a853eb6f8c194", sizeNum: 6 }];

        _this.iconSpList = [];
        return _this;
    }

    _createClass(White, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.container = this.owner.getChildByName("container");
            this.owner.on(Laya.Event.MOUSE_DOWN, this, this.iconDown);
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.iconUp);
            this.owner.on(Laya.Event.MOUSE_MOVE, this, this.iconMove);
            this.gameList.forEach(function (element, idx) {
                _this2.createdImage(idx, element);
            });
            if (!this.isFirst) {
                this.isFirst = true;
                this.startTurn();
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            console.log("关闭");
            this.finishTurn();
        }
    }, {
        key: "startTurn",
        value: function startTurn() {
            Laya.timer.loop(2500, this, this.iconAutoMove);
        }
    }, {
        key: "finishTurn",
        value: function finishTurn() {
            Laya.timer.clear(this, this.iconAutoMove);
        }
    }, {
        key: "createdImage",
        value: function createdImage(number, obj) {
            _Tool2.default.showGameNums(obj);
            var num = number - 2;
            var icon = new Laya.Image();
            icon.size(150, 150);
            icon.skin = "" + obj.icon;
            icon.pos(num * 178 + 75, 30);
            this.container.addChild(icon);
            icon.idx = num;
            icon.name = obj.name;
            this.iconSpList.push(icon);

            var iconBg = new Laya.Image();
            // icon.anchorX = 0.5
            // icon.anchorY = 0.5
            iconBg.size(164, 164);
            iconBg.skin = "remote/icon/iconBg.png";
            iconBg.pos(-7, -7);
            iconBg.mouseEnabled = true;
            icon.addChild(iconBg);

            // this.shake(icon, 15, 0, 250)
            iconBg.on(Laya.Event.CLICK, this, function () {
                _Tool2.default.goToNewGame(obj);
            });
        }
    }, {
        key: "iconMove",
        value: function iconMove(e) {
            var _this3 = this;

            if (this.iconIsMoving) {
                this.isMoving = e.stageX;
                return;
            }
            if (!this.isMoving) {
                return;
            }
            var moveNum = 0;

            this.iconSpList.forEach(function (element, idex) {
                element.x = element.x + e.stageX - _this3.isMoving;
                if (element.x < -461) {
                    element.idx = 7;
                    element.x = 6 * 178 + 75;
                    moveNum = -1;
                }
                if (element.x > 1321) {
                    moveNum = 1;
                    element.idx = -3;
                    element.x = -2 * 178 + 75;
                }
                var num = null;
            });

            this.iconSpList.forEach(function (element) {
                element.idx = element.idx + moveNum;
            });

            this.isMoving = e.stageX;
            this.moveX = e.stageX;
        }
    }, {
        key: "iconDown",
        value: function iconDown(e) {
            this.finishTurn();
            this.dwonX = e.stageX;
            this.isMoving = e.stageX;
        }
    }, {
        key: "iconUp",
        value: function iconUp(e) {
            var _this4 = this;

            if (!this.moveX) {
                this.isMoving = null;
                return;
            }
            // let addNum = this.dwonX - this.moveX > 0 ? 1 : -1
            this.iconSpList.forEach(function (element) {
                // let num = null
                // num = Math.floor((element.x) / 178) + 1
                // element.idx = num
                console.log(element.x, element.idx);
                Laya.Tween.to(element, { x: element.idx * 178 + 75 }, 400, null, Laya.Handler.create(_this4, function () {
                    _this4.isMoving = null;
                    _this4.dwonX = null;
                    _this4.moveX = null;
                    _this4.startTurn();
                }));
            });
        }

        /**
         * 
         * @param {*} obj 对象
         * @param {*} num 角度 传15
         * @param {*} count 第几次  传0
         * @param {*} timeNum  时间 传：250
         */

    }, {
        key: "shake",
        value: function shake(obj, num, count, timeNum) {
            var _this5 = this;

            if (this.pageDis) {
                //页面销毁 设为ture
                return;
            }
            Laya.Tween.to(obj, { rotation: num }, timeNum, Laya.Ease.quadInOut, Laya.Handler.create(this, function () {
                switch (count) {
                    case 0:
                        _this5.shake(obj, -15, 1, 500);
                        break;
                    case 1:
                        _this5.shake(obj, 0, 2, 250);
                        break;
                    case 2:
                        Laya.timer.once(500, _this5, function () {
                            _this5.shake(obj, 15, 0, 250);
                        });
                        break;
                }
            }));
        }
    }, {
        key: "iconAutoMove",
        value: function iconAutoMove() {
            var _this6 = this;

            this.iconIsMoving = true;
            this.iconSpList.forEach(function (element) {
                var num = element.idx - 1;
                Laya.Tween.to(element, { x: num * 178 + 75 }, 1000, null, Laya.Handler.create(_this6, function () {
                    _this6.iconIsMoving = false;
                    if (num < -2) {
                        element.idx = 6;
                        element.x = 6 * 178 + 75;
                    } else {
                        element.idx = num;
                    }
                }));
            });
        }
    }]);

    return White;
}(PaoYa.Component);

exports.default = White;

},{"../common/tool/Global":55,"../common/tool/Tool":56}]},{},[3]);
