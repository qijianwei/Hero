var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var config = {
    debug: false,
    version: '1.0',
    release: 10
};
exports.default = config;

},{}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _BattleResultDialog = require("./gamescripts/dialog/BattleResultDialog");

var _BattleResultDialog2 = _interopRequireDefault(_BattleResultDialog);

var _PassResultDialog = require("./gamescripts/dialog/PassResultDialog");

var _PassResultDialog2 = _interopRequireDefault(_PassResultDialog);

var _WeaponBar = require("./gamescripts/prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _GameGuide = require("./gamescripts/GameGuide/GameGuide");

var _GameGuide2 = _interopRequireDefault(_GameGuide);

var _MPBar = require("./gamescripts/prefab/MPBar");

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require("./gamescripts/prefab/HPBar");

var _HPBar2 = _interopRequireDefault(_HPBar);

var _Dodge = require("./gamescripts/prefab/Dodge");

var _Dodge2 = _interopRequireDefault(_Dodge);

var _GameBanner = require("./gamescripts/prefab/GameBanner");

var _GameBanner2 = _interopRequireDefault(_GameBanner);

var _PlayerState = require("./gamescripts/prefab/PlayerState");

var _PlayerState2 = _interopRequireDefault(_PlayerState);

var _PlayerSkill = require("./gamescripts/prefab/PlayerSkill");

var _PlayerSkill2 = _interopRequireDefault(_PlayerSkill);

var _Skill = require("./gamescripts/prefab/Skill");

var _Skill2 = _interopRequireDefault(_Skill);

var _GameGuideControl = require("./gamescripts/gameGuide/GameGuideControl");

var _GameGuideControl2 = _interopRequireDefault(_GameGuideControl);

var _GameView = require("./gamescripts/GameView");

var _GameView2 = _interopRequireDefault(_GameView);

var _GameControl = require("./gamescripts/GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

var _Devour = require("./scripts/common/refiner/Devour");

var _Devour2 = _interopRequireDefault(_Devour);

var _DevourControl = require("./scripts/common/refiner/DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

var _Grading = require("./scripts/common/figure/Grading");

var _Grading2 = _interopRequireDefault(_Grading);

var _GradingControl = require("./scripts/common/figure/GradingControl");

var _GradingControl2 = _interopRequireDefault(_GradingControl);

var _LoadingView = require("./scripts/common/Loading/LoadingView");

var _LoadingView2 = _interopRequireDefault(_LoadingView);

var _LoadingControl = require("./scripts/common/Loading/LoadingControl");

var _LoadingControl2 = _interopRequireDefault(_LoadingControl);

var _MatchView = require("./scripts/common/Match/MatchView");

var _MatchView2 = _interopRequireDefault(_MatchView);

var _MatchControl = require("./scripts/common/Match/MatchControl");

var _MatchControl2 = _interopRequireDefault(_MatchControl);

var _Refining = require("./scripts/common/refiner/Refining");

var _Refining2 = _interopRequireDefault(_Refining);

var _RefiningControl = require("./scripts/common/refiner/RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

var _Swordsman = require("./scripts/common/figure/Swordsman");

var _Swordsman2 = _interopRequireDefault(_Swordsman);

var _SwordsmanControl = require("./scripts/common/figure/SwordsmanControl");

var _SwordsmanControl2 = _interopRequireDefault(_SwordsmanControl);

var _WeaponHouse = require("./scripts/common/weapon/WeaponHouse");

var _WeaponHouse2 = _interopRequireDefault(_WeaponHouse);

var _WeaponHouseControl = require("./scripts/common/weapon/WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

var _WeaponStore = require("./scripts/common/weapon/WeaponStore");

var _WeaponStore2 = _interopRequireDefault(_WeaponStore);

var _WeaponStoreControl = require("./scripts/common/weapon/WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

var _BuyHero = require("./scripts/dialog/figure/BuyHero");

var _BuyHero2 = _interopRequireDefault(_BuyHero);

var _GetNewSkill = require("./scripts/dialog/figure/GetNewSkill");

var _GetNewSkill2 = _interopRequireDefault(_GetNewSkill);

var _SkillDetail = require("./scripts/dialog/figure/SkillDetail");

var _SkillDetail2 = _interopRequireDefault(_SkillDetail);

var _Canlock = require("./scripts/dialog/refiner/Canlock");

var _Canlock2 = _interopRequireDefault(_Canlock);

var _DiamondLack = require("./scripts/dialog/weapon/DiamondLack");

var _DiamondLack2 = _interopRequireDefault(_DiamondLack);

var _GoldLack = require("./scripts/dialog/weapon/GoldLack");

var _GoldLack2 = _interopRequireDefault(_GoldLack);

var _StoreSure = require("./scripts/dialog/weapon/StoreSure");

var _StoreSure2 = _interopRequireDefault(_StoreSure);

var _UnlockFifth = require("./scripts/dialog/weapon/UnlockFifth");

var _UnlockFifth2 = _interopRequireDefault(_UnlockFifth);

var _UnlockFour = require("./scripts/dialog/weapon/UnlockFour");

var _UnlockFour2 = _interopRequireDefault(_UnlockFour);

var _UnlockTips = require("./scripts/dialog/weapon/UnlockTips");

var _UnlockTips2 = _interopRequireDefault(_UnlockTips);

var _BeanBox = require("./scripts/prefab/BeanBox");

var _BeanBox2 = _interopRequireDefault(_BeanBox);

var _HomeControl = require("./scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

var _SpeakMan = require("./gamescripts/gameGuide/SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

var _Player = require("./gamescripts/prefab/Player");

var _Player2 = _interopRequireDefault(_Player);

var _Weapon = require("./gamescripts/prefab/Weapon");

var _Weapon2 = _interopRequireDefault(_Weapon);

var _WeaponSkill = require("./gamescripts/prefab/WeaponSkill");

var _WeaponSkill2 = _interopRequireDefault(_WeaponSkill);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
				function GameConfig() {
								_classCallCheck(this, GameConfig);
				}

				_createClass(GameConfig, null, [{
								key: "init",
								value: function init() {
												//注册Script或者Runtime引用
												var reg = Laya.ClassUtils.regClass;
												reg("gamescripts/dialog/BattleResultDialog.js", _BattleResultDialog2.default);
												reg("gamescripts/dialog/PassResultDialog.js", _PassResultDialog2.default);
												reg("gamescripts/prefab/WeaponBar.js", _WeaponBar2.default);
												reg("gamescripts/GameGuide/GameGuide.js", _GameGuide2.default);
												reg("gamescripts/prefab/MPBar.js", _MPBar2.default);
												reg("gamescripts/prefab/HPBar.js", _HPBar2.default);
												reg("gamescripts/prefab/Dodge.js", _Dodge2.default);
												reg("gamescripts/prefab/GameBanner.js", _GameBanner2.default);
												reg("gamescripts/prefab/PlayerState.js", _PlayerState2.default);
												reg("gamescripts/prefab/PlayerSkill.js", _PlayerSkill2.default);
												reg("gamescripts/prefab/Skill.js", _Skill2.default);
												reg("gamescripts/gameGuide/GameGuideControl.js", _GameGuideControl2.default);
												reg("gamescripts/GameView.js", _GameView2.default);
												reg("gamescripts/GameControl.js", _GameControl2.default);
												reg("scripts/common/refiner/Devour.js", _Devour2.default);
												reg("scripts/common/refiner/DevourControl.js", _DevourControl2.default);
												reg("scripts/common/figure/Grading.js", _Grading2.default);
												reg("scripts/common/figure/GradingControl.js", _GradingControl2.default);
												reg("scripts/common/Loading/LoadingView.js", _LoadingView2.default);
												reg("scripts/common/Loading/LoadingControl.js", _LoadingControl2.default);
												reg("scripts/common/Match/MatchView.js", _MatchView2.default);
												reg("scripts/common/Match/MatchControl.js", _MatchControl2.default);
												reg("scripts/common/refiner/Refining.js", _Refining2.default);
												reg("scripts/common/refiner/RefiningControl.js", _RefiningControl2.default);
												reg("scripts/common/figure/Swordsman.js", _Swordsman2.default);
												reg("scripts/common/figure/SwordsmanControl.js", _SwordsmanControl2.default);
												reg("scripts/common/weapon/WeaponHouse.js", _WeaponHouse2.default);
												reg("scripts/common/weapon/WeaponHouseControl.js", _WeaponHouseControl2.default);
												reg("scripts/common/weapon/WeaponStore.js", _WeaponStore2.default);
												reg("scripts/common/weapon/WeaponStoreControl.js", _WeaponStoreControl2.default);
												reg("scripts/dialog/figure/BuyHero.js", _BuyHero2.default);
												reg("scripts/dialog/figure/GetNewSkill.js", _GetNewSkill2.default);
												reg("scripts/dialog/figure/SkillDetail.js", _SkillDetail2.default);
												reg("scripts/dialog/refiner/Canlock.js", _Canlock2.default);
												reg("scripts/dialog/weapon/DiamondLack.js", _DiamondLack2.default);
												reg("scripts/dialog/weapon/GoldLack.js", _GoldLack2.default);
												reg("scripts/dialog/weapon/StoreSure.js", _StoreSure2.default);
												reg("scripts/dialog/weapon/UnlockFifth.js", _UnlockFifth2.default);
												reg("scripts/dialog/weapon/UnlockFour.js", _UnlockFour2.default);
												reg("scripts/dialog/weapon/UnlockTips.js", _UnlockTips2.default);
												reg("scripts/prefab/BeanBox.js", _BeanBox2.default);
												reg("scripts/common/HomeControl.js", _HomeControl2.default);
												reg("gamescripts/gameGuide/SpeakMan.js", _SpeakMan2.default);
												reg("gamescripts/prefab/Player.js", _Player2.default);
												reg("gamescripts/prefab/Weapon.js", _Weapon2.default);
												reg("gamescripts/prefab/WeaponSkill.js", _WeaponSkill2.default);
								}
				}]);

				return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 1134;
GameConfig.height = 750;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "horizontal";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "gamescenes/GameView.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./gamescripts/GameControl":4,"./gamescripts/GameGuide/GameGuide":5,"./gamescripts/GameView":6,"./gamescripts/dialog/BattleResultDialog":9,"./gamescripts/dialog/PassResultDialog":10,"./gamescripts/gameGuide/GameGuideControl":11,"./gamescripts/gameGuide/SpeakMan":13,"./gamescripts/prefab/Dodge":14,"./gamescripts/prefab/GameBanner":15,"./gamescripts/prefab/HPBar":16,"./gamescripts/prefab/MPBar":17,"./gamescripts/prefab/Player":18,"./gamescripts/prefab/PlayerSkill":19,"./gamescripts/prefab/PlayerState":20,"./gamescripts/prefab/Skill":21,"./gamescripts/prefab/Weapon":22,"./gamescripts/prefab/WeaponBar":23,"./gamescripts/prefab/WeaponSkill":24,"./scripts/common/HomeControl":26,"./scripts/common/Loading/LoadingControl":27,"./scripts/common/Loading/LoadingView":28,"./scripts/common/Match/MatchControl":29,"./scripts/common/Match/MatchView":30,"./scripts/common/figure/Grading":31,"./scripts/common/figure/GradingControl":32,"./scripts/common/figure/Swordsman":33,"./scripts/common/figure/SwordsmanControl":34,"./scripts/common/refiner/Devour":35,"./scripts/common/refiner/DevourControl":36,"./scripts/common/refiner/Refining":37,"./scripts/common/refiner/RefiningControl":38,"./scripts/common/weapon/WeaponHouse":41,"./scripts/common/weapon/WeaponHouseControl":42,"./scripts/common/weapon/WeaponStore":43,"./scripts/common/weapon/WeaponStoreControl":44,"./scripts/dialog/figure/BuyHero":45,"./scripts/dialog/figure/GetNewSkill":46,"./scripts/dialog/figure/SkillDetail":47,"./scripts/dialog/refiner/Canlock":48,"./scripts/dialog/weapon/DiamondLack":49,"./scripts/dialog/weapon/GoldLack":50,"./scripts/dialog/weapon/StoreSure":51,"./scripts/dialog/weapon/UnlockFifth":52,"./scripts/dialog/weapon/UnlockFour":53,"./scripts/dialog/weapon/UnlockTips":54,"./scripts/prefab/BeanBox":55}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Main = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _Config = require("./Config");

var _Config2 = _interopRequireDefault(_Config);

var _GameMain2 = require("./scripts/common/GameMain");

var _GameMain3 = _interopRequireDefault(_GameMain2);

var _HeroConfig = require("./gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Main = exports.Main = function (_GameMain) {
	_inherits(Main, _GameMain);

	function Main() {
		_classCallCheck(this, Main);

		var params = {
			gameId: 1006,
			// baseURL: "https://wxapi.xingqiu123.com/ServiceCore/",
			baseURL: "https://juedi001test.goxiaochengxu.cn/ServiceCore/",
			//	baseURL:"https://juedi001test.goxiaochengxu.cn/ServiceCore/",
			zone: "cate",
			showStat: false,
			showDebugTool: true,
			userId: 11058, //151693, 109638
			offerId: "1450014295",
			version: _Config2.default.version,
			rankingType: PaoYa.RankingType.WIN,
			release: _Config2.default.release,
			//ignoreCmds: [],
			debug: true,
			ignoreCmds: ['defeated', 'message'],
			showBannerAdWhenDialogPopup: false,
			adUnitId: 'adunit-7860aaf8ed04aeb2',
			bannerUnitId: 'adunit-4bec7f17587df319', //bannerID
			portrait: "landscape",
			loadNetworkRes: true,
			is_config: 0
		};
		return _possibleConstructorReturn(this, (Main.__proto__ || Object.getPrototypeOf(Main)).call(this, params));
	}

	_createClass(Main, [{
		key: "setupConfig",
		value: function setupConfig() {
			var _PaoYa$Navigator$scen;

			//Laya.MouseManager.enabled=false;
			Laya.MouseManager.multiTouchEnabled = false; //关闭多点触控
			_get(Main.prototype.__proto__ || Object.getPrototypeOf(Main.prototype), "setupConfig", this).call(this);

			PaoYa.Navigator.scenesMap = (_PaoYa$Navigator$scen = {
				WeaponHouse: "scenes/common/WeaponHouse",
				WeaponStore: "scenes/common/WeaponStore",
				Swordsman: "scenes/common/Swordsman"
			}, _defineProperty(_PaoYa$Navigator$scen, "Swordsman", "scenes/common/Swordsman"), _defineProperty(_PaoYa$Navigator$scen, "MatchView", 'scenes/common/Match/MatchView'), _defineProperty(_PaoYa$Navigator$scen, "Grading", 'scenes/common/Grading'), _PaoYa$Navigator$scen);

			//分享地址
			PaoYa.ShareManager.imageURL = "https://res.xingqiu123.com/1028/share/share.jpg";
			PaoYa.DataCenter.GAMEPREPARE = null;

			if (typeof wx != 'undefined' || Laya.Render.isConchApp) {
				// console.log=function(){};
				wx.onMemoryWarning(function () {
					console.error('内存不足');
				});
			}
			/* 	
   	PaoYa.SoundManager.onHideHandler = function () {
   		Laya.SoundManager.stopAll();
   	}
   	PaoYa.SoundManager.onShowHandler = function () {
   		SoundManager.playMusic("mainBgm");
   	}
   	PaoYa.SoundManager.onAudioInterruptionBeginHandler = function () {
   		Laya.SoundManager.stopAll();
   	}
   	PaoYa.SoundManager.onAudioInterruptionEndHandler = function () {
   		Laya.SoundManager.playMusic(SoundManager.currentUrl, 0);
   	}
   	SoundManager.playMusic("mainBgm"); */
			_HeroConfig2.default.loadAllSpine();
			this.arrayFont = [{ fontUrl: "font/recMP.fnt", fontAni: "recoverMP" }, { fontUrl: "font/recHP.fnt", fontAni: "recoverHP" }, { fontUrl: "font/hurt.fnt", fontAni: "hurt" }, { fontUrl: "font/crit.fnt", fontAni: "crit" }, { fontUrl: "font/poision.fnt", fontAni: "poision" }, { fontUrl: "font/playerState.fnt", fontAni: "playerState" }, { fontUrl: "font/playerSkill.fnt", fontAni: "playerSkill" }, { fontUrl: "font/weapon/detailfont.fnt", fontAni: "weaponDFont" }, { fontUrl: "font/weapon/lvfont.fnt", fontAni: "weaponNFontT" }, { fontUrl: "font/figure/msz.fnt", fontAni: "figureDetail" }];
			this.loadFontFnt(0);
		}
	}, {
		key: "loadFontFnt",
		value: function loadFontFnt(index) {
			if (index < this.arrayFont.length) {
				var font = new Laya.BitmapFont();
				var itemFont = this.arrayFont[index];
				var _this = this;
				font.loadFont(PaoYa.DataCenter.RESURL + itemFont.fontUrl, Laya.Handler.create(_this, function () {
					Laya.Text.registerBitmapFont(itemFont.fontAni, font);
					index++;
					_this.loadFontFnt(index);
				}));
			}
		}
		/**此处返回游戏需要提前加载的资源，必须返回一个数组 */

	}, {
		key: "setupGameRes",
		value: function setupGameRes() {
			var list = ['res/atlas/remote/game.atlas', 'res/atlas/remote/weapons.atlas', 'spine/npc/npc_7.png', 'spine/npc/npc_7.sk', 'spine/hero/hero_1.png', 'spine/hero/hero_1.sk',
			/* 动效animation资源 */
			'res/atlas/remote/debuff_dizzy.atlas', 'res/atlas/remote/debuff_palsy.atlas', 'res/atlas/remote/debuff_poison.atlas', 'res/atlas/remote/injured.atlas', 'res/atlas/remote/recover_blood.atlas', 'res/atlas/remote/recover_power.atlas', 'res/atlas/remote/trigger_skill.atlas', 'res/atlas/remote/warn_arms.atlas', //cd发光效果

			'res/atlas/remote/collision.atlas', 'res/atlas/remote/debuff_dizzy.atlas', 'res/atlas/remote/hero_skill/hero1_skill2.atlas', 'res/atlas/remote/hero_skill/hero2_skill2.atlas', 'res/atlas/remote/recover_blood.atlas', 'res/atlas/remote/recover_power.atlas', 'res/atlas/remote/small_weapons.atlas', 'res/atlas/remote/trigger_skill.atlas', 'res/atlas/remote/weapon_effect/weapon_blood.atlas', 'res/atlas/remote/weapon_effect/weapon_blue.atlas', 'res/atlas/remote/weapon_effect/weapon_crits.atlas', 'res/atlas/remote/weapon_effect/weapon_freeze.atlas', 'res/atlas/remote/weapon_effect/weapon_palsy.atlas', 'res/atlas/remote/weapon_effect/weapon_poison.atlas', 'res/atlas/remote/weapon_effect/weapon_reduce.atlas', 'res/atlas/remote/weapon_effect/weapon_repeat.atlas', 'res/atlas/remote/weapon_effect/weapon_thump.atlas', 'res/atlas/remote/guide.atlas'];
			return list;
		}
	}, {
		key: "onShareAppMessage",
		value: function onShareAppMessage() {
			return {
				title: PaoYa.DataCenter.config.game.share_list.randomItem,
				imageUrl: PaoYa.DataCenter.CDNURL + PaoYa.DataCenter.config.game.share_img.randomItem,
				query: ""
			};
		}
	}]);

	return Main;
}(_GameMain3.default);
//激活启动类


new Main();
/* console.log=function(){};
console.warn=function(){};
console.error=function(){};   */

},{"./Config":1,"./GameConfig":2,"./gamescripts/config/HeroConfig":8,"./scripts/common/GameMain":25}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Weapon = require('./prefab/Weapon');

var _Weapon2 = _interopRequireDefault(_Weapon);

var _WeaponBar = require('./prefab/WeaponBar');

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _Player = require('./prefab/Player');

var _Player2 = _interopRequireDefault(_Player);

var _MPBar = require('./prefab/MPBar');

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require('./prefab/HPBar');

var _HPBar2 = _interopRequireDefault(_HPBar);

var _WeaponManager = require('./WeaponManager');

var _WeaponManager2 = _interopRequireDefault(_WeaponManager);

var _Skill = require('./prefab/Skill');

var _Skill2 = _interopRequireDefault(_Skill);

var _Dodge = require('./prefab/Dodge');

var _Dodge2 = _interopRequireDefault(_Dodge);

var _PlayerState = require('./prefab/PlayerState');

var _PlayerState2 = _interopRequireDefault(_PlayerState);

var _PlayerSkill = require('./prefab/PlayerSkill');

var _PlayerSkill2 = _interopRequireDefault(_PlayerSkill);

var _WeaponSkill = require('./prefab/WeaponSkill');

var _WeaponSkill2 = _interopRequireDefault(_WeaponSkill);

var _GameBanner = require('./prefab/GameBanner');

var _GameBanner2 = _interopRequireDefault(_GameBanner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameControl = function (_PaoYa$Component) {
    _inherits(GameControl, _PaoYa$Component);

    /** @prop {name:weapon,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:weaponBar,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:player,tips:"人物预制体对象",type:Prefab} */
    /** @prop {name:weaponSkill,tips:"兵器技能名称预制体对象",type:Prefab} */
    /** @prop {name:selfHP,tips:'自己的血条',type:Node}*/
    /** @prop {name:selfMP,tips:'自己的体力',type:Node}*/
    /** @prop {name:otherHP,tips:'对方的血条',type:Node}*/
    /** @prop {name:otherMP,tips:'对方的体力',type:Node}*/
    /** @prop {name:playerState,tips:'人物状态',type:Node}*/
    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/

    function GameControl() {
        _classCallCheck(this, GameControl);

        var _this = _possibleConstructorReturn(this, (GameControl.__proto__ || Object.getPrototypeOf(GameControl)).call(this));

        GameControl.instance = _this;
        Laya.MouseManager.multiTouchEnabled = false;
        _this.closeRobot = false;
        return _this;
    }

    _createClass(GameControl, [{
        key: 'onDisappear',
        value: function onDisappear() {
            Laya.MouseManager.enabled = true;
        }
    }, {
        key: 'onAwake',
        value: function onAwake() {
            Laya.Pool.clearBySign('weapon');
            Laya.Pool.clearBySign('player');
            Laya.MouseManager.enabled = true;

            this.params = this.owner.params;
            //暂定
            this.gameType = this.params.gameType;

            this.restart(); //重置相关信息

            this.dodgeComp = this.owner.dodge.getComponent(_Dodge2.default);
            this.dodgeOwner = this.dodgeComp.owner;
            this.playerStateComp = this.playerState.getComponent(_PlayerState2.default);

            this.selfSkillText = this.owner.selfSkillText;
            this.otherSkillText = this.owner.otherSkillText;
            this.selfSkillTextComp = this.selfSkillText.getComponent(_PlayerSkill2.default);
            this.otherSkillTextComp = this.otherSkillText.getComponent(_PlayerSkill2.default);
            this.weaponsBarArr = []; //存放兵器操作Bar;提供全局暂停和恢复CD功能；还有置灰功能
            this.initWeaponsBar();
        }
    }, {
        key: 'onEnable',
        value: function onEnable() {
            this.onNotification(_WeaponBar2.default.CLICK, this, this.weaponBarClickHandler);
            this.onNotification(_Skill2.default.CLICK, this, this.skillClickHandler);
            this.gameState = 'start';
            this.fillPlayerInfo();
            this.initSkill();
        }
        //游戏重新开始

    }, {
        key: 'restart',
        value: function restart() {
            this.gameState = 'start';
            this.selfMultiMP = 1; //兵器造成的内力消耗倍数
            this.otherMultiMP = 1; //兵器造成的内力消耗倍数
            this.selfWeapons = [];
            this.otherWeapons = [];
            this.selfPlayer && this.selfPlayer.node && this.selfPlayer.node.removeSelf();
            this.otherPlayer && this.otherPlayer.node && this.otherPlayer.node.removeSelf();
            this.weaponList = this.params.weaponList;
            this.robotWeaponList = JSON.parse(JSON.stringify(this.params.robotWeaponList));
            this.weaponManager = null;
            this.weaponManager = new _WeaponManager2.default(this.robotWeaponList);
            this.role = JSON.parse(JSON.stringify(this.params.role));
            this.robotRole = JSON.parse(JSON.stringify(this.params.robotRole));
            this.dealParams(this.weaponList);
            this.dealParams(this.robotWeaponList);

            if (this.gameType == "pass") {
                this.initGameBanner();
            } else {
                this.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                    gameType: this.gameType
                });
            }
            this.resetPlayerInfo();
            //要加机器人定时器
            if (!this.closeRobot) {
                Laya.timer.once(3000, this, this.firstWeaponSelect);
            }
        }
    }, {
        key: 'fillPlayerInfo',
        value: function fillPlayerInfo() {
            this.initPlayer(true);
            this.initPlayer(false);
        }
    }, {
        key: 'resetPlayerInfo',
        value: function resetPlayerInfo() {
            this.owner.setInfo({
                name: this.role.roleName,
                icon: 'local/common/' + this.role.roleDress + '.png'
            }, true);
            this.owner.setInfo({
                name: this.robotRole.roleName,
                icon: 'local/common/' + this.robotRole.roleDress + '.png'
            }, false);
        }
    }, {
        key: 'initGameBanner',
        value: function initGameBanner() {
            this.monsterNum = this.params.monsterList.length;
            this.killNum = 0;
            this.battleIndex = 1;
            this.curNum = this.params.stageId;
            this.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                gameType: 'pass',
                curNum: this.curNum,
                battleIndex: this.battleIndex,
                monsterNum: this.monsterNum
            });
        }
    }, {
        key: 'drawParabola',
        value: function drawParabola() {
            var space = 5;
            var pathArr = [];
            this.startPos = {
                x: 180,
                y: 450
            };
            this.endPos = {
                x: 1150,
                y: 450
            };
            pathArr.push(["moveTo", 0, 0]);

            // X轴Y轴的偏移总量
            this.driftX = this.endPos.x - this.startPos.x;
            this.driftY = this.endPos.y - this.startPos.y;
            this.b = (this.driftY - this.curvature * this.driftX * this.driftX) / this.driftX;
            for (var i = 5; i <= this.driftX; i += space) {
                var x = i;
                var y = Math.floor(this.curvature * x * x + this.b * x);
                pathArr.push(["lineTo", x, y]);
            }
            pathArr.push(["closePath"]);
            // this.owner.spDraw.graphics.clear();
            this.owner.spDraw.graphics.drawPath(this.startPos.x, this.startPos.y, pathArr, null, {
                strokeStyle: "#ff0000",
                lineWidth: 2,
                lineCap: "round"
            });
            //this.owner.spDraw.graphics.drawPath(340,450,)
        }
    }, {
        key: 'dealParams',
        value: function dealParams(weaponList) {
            for (var i = 0; i < weaponList.length; i++) {
                var weapon = weaponList[i];
                var weaponSkills = weapon['skills'];
                for (var j = 0; j < weaponSkills.length; j++) {
                    if (weaponSkills[j].skillType == 1) {
                        weapon.activeSkill = JSON.parse(JSON.stringify(weaponSkills[j]));
                    }
                }
            }
        }

        //测试内力够不够

    }, {
        key: 'onUpdate',
        value: function onUpdate() {
            if (!this.weaponsBarArr.length || !this.selfPlayer) {
                return;
            }
            if (this.selfPlayer.comp.dodge) {

                return;
            }
            var curMP = this.selfPlayer.comp.MPComp.curMP;
            var originMP = this.selfPlayer.comp.MPComp.originMP;
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                if (weaponBarComp.weaponConsume > curMP) {
                    if (!weaponBarComp.freezeing) {
                        weaponBarComp.owner.gray = true;
                    }
                } else {
                    weaponBarComp.owner.gray = false;
                }
            });

            if (curMP < originMP * 0.2) {
                if (!this.dodgeComp.freezeing) {
                    this.dodgeOwner.gray = true;
                }
            } else {
                this.dodgeOwner.gray = false;
            }
            if (!this.skillOwner1.disabled) {
                if (curMP < this.selfSkills[0].skillConsume * originMP) {
                    if (!this.skillScr1.freezeing) {
                        this.skillOwner1.gray = true;
                    }
                } else {
                    this.skillOwner1.gray = false;
                }
            }
            if (!this.skillOwner2.disabled) {
                if (curMP < this.selfSkills[2].skillConsume * originMP) {
                    if (!this.skillScr1.freezeing) {
                        this.skillOwner2.gray = true;
                    }
                } else {
                    this.skillOwner2.gray = false;
                }
            }
        }
        //初始化双方兵器库

    }, {
        key: 'initWeaponsBar',
        value: function initWeaponsBar() {
            var owner = this.owner,
                boxWeapon = owner.boxWeapon;

            for (var i = 0, len = this.weaponList.length; i < len; i++) {
                //暂时
                // if()
                var weaponBar = this.weaponBar.create.call(this.weaponBar);
                var weaponBarComp = weaponBar.getComponent(_WeaponBar2.default);
                weaponBarComp.params = this.weaponList[i];
                weaponBarComp.isSelf = true;
                weaponBarComp.index = i;
                this.weaponsBarArr.push(weaponBarComp);
                boxWeapon.addChild(weaponBar);
            }
            //初始化机器人的兵器
            this.weaponManager = new _WeaponManager2.default(this.robotWeaponList);
        }
    }, {
        key: 'initPlayer',
        value: function initPlayer(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var role = isSelf ? 'role' : 'robotRole';
            var player = Laya.Pool.getItemByCreateFun('player', this.player.create, this.player);

            //let player=this.player.create();
            var spCollide = this.owner[name + 'Collide'];
            var spX = spCollide.x,
                spY = spCollide.y,
                spW = spCollide.width,
                spH = spCollide.height;

            //let playerScr=player.getComponent(Player)
            var component = player.getComponent(_Player2.default);
            component.isSelf = isSelf;
            component.attr = this[role];
            if (isSelf) {
                this.selfSkills = this[role].skills;
            }
            component.activeSkills = [];
            //把人物主动技能挑选出来
            for (var i = 0, len = this[role].skills.length; i < len; i++) {
                if (this[role].skills[i].skillType == 1) {
                    component.activeSkills.push(this[role].skills[i]);
                }
            }
            console.error('人物技能');
            console.error(component.activeSkills);

            //component.attr.skillWeapon.params={};
            if (component.attr.skillWeapon) {
                component.attr.skillWeapon.activeSkill = component.attr.skillWeapon.skills[0];
            }
            // console.error(component.attr.skillWeapon)
            component.MPComp = this[name + 'MP'].getComponent(_MPBar2.default);
            component.HPComp = this[name + 'HP'].getComponent(_HPBar2.default);
            component.MPComp.initBar(this[role].roleMp);
            component.HPComp.initBar(this[role].roleHp);
            component.isSelf = isSelf;
            if (isSelf) {
                player.pos(220, 560);
                player.scaleX = 1;
            } else {
                player.pos(1120, 560);
                player.scaleX = -1;
            }
            component.collidePoint = [{
                x: spX,
                y: spY
            }, {
                x: spX + spW,
                y: spY
            }, {
                x: spX + spW,
                y: spY + spH
            }, {
                x: spX,
                y: spY + spH
            }];

            this.owner.addChild(player);
            this[name + 'Player'] = {
                node: player,
                comp: component
            };
        }
        /* 人物技能 */

    }, {
        key: 'initSkill',
        value: function initSkill() {
            var owner = this.owner;
            var activeSkills = this.selfPlayer.comp.activeSkills;
            for (var i = 1; i < 3; i++) {
                this['skillScr' + i] = owner['skill' + i].getComponent(_Skill2.default);
                this['skillScr' + i].params = activeSkills[i - 1];
                this['skillScr' + i].init(activeSkills[i - 1]);
                this['skillOwner' + i] = this['skillScr' + i].owner;
            }
        }
    }, {
        key: 'skillClickHandler',
        value: function skillClickHandler(name) {
            if (name == "skill1") {
                /*    this.allPause();
                   return; */
                this.skillWithWeapon(true);
            } else if (name == "skill2") {
                /*  this.allResume();
                 return; */
                this.skillWithoutWeapon(true);
            }
        }
    }, {
        key: 'skillWithWeapon',
        value: function skillWithWeapon(isSelf) {
            var _this2 = this;

            var name = isSelf ? 'self' : 'other';
            var roleComp = this[name + 'Player'].comp,
                skillWeapon = JSON.parse(JSON.stringify(roleComp.attr.skillWeapon));
            var skillInfo = this[name + 'Player'].comp.activeSkills[0];
            var originMP = roleComp.MPComp.originMP;
            var consumeMP = skillInfo.skillConsume * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                console.warn(name + 'Player' + "__体力不足");
                if (isSelf) {
                    this.showTips("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.skillScr1.startT();
            }
            this.showSkillText(isSelf, skillInfo.skillName);
            skillWeapon.isSelf = isSelf;
            this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);
            skillWeapon.skillEffect = true;
            switch (skillWeapon.activeSkill.skillId) {
                case 88:
                    var addCritProb = skillWeapon.activeSkill.skillConfig.critProb;
                    this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb + addCritProb;
                    break;
                //雪女剑法
                case 89:
                    break;
                //铸铁剑法
                case 90:
                    break;
            }
            //先展示技能，再展示攻击，再发射兵器
            this[name + 'Player'].comp.showSkill1();
            this[name + 'Player'].comp.skillCallback = function () {
                _this2.weaponLaunch(skillWeapon);
            };
        }
    }, {
        key: 'skillWithoutWeapon',
        value: function skillWithoutWeapon(isSelf) {
            var _this3 = this;

            var name = isSelf ? 'self' : 'other';
            var skillInfo = this[name + 'Player'].comp.activeSkills[1];
            var originMP = this[name + 'Player'].comp.MPComp.originMP;
            var consumeMP = skillInfo.skillConsume * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                console.warn(name + 'Player' + "__体力不足");
                if (isSelf) {
                    this.showTips("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.skillScr2.startT();
            }
            this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);
            this[name + 'Player'].comp.showSkill2(); //人物技能2展示
            this.showSkillText(isSelf, skillInfo.skillName);
            switch (skillInfo.skillId) {
                case 33:
                    this.allWeaponsUnfreeze(name, skillInfo);
                    break;
                case 36:
                    var t = skillInfo.skillConfig.time,
                        perMP = skillInfo.skillConfig.recoverMp,
                        originHP = this[name + 'Player'].comp.HPComp.originHP,
                        resumeHP = skillInfo.skillConfig.recoverHp;
                    this[name + 'Player'].comp.changePerMp(t * 1000, perMP);
                    this[name + 'Player'].comp.HPComp.changeHP(originHP * resumeHP);
                    Laya.timer.once(t * 1000, this, function () {
                        _this3[name + 'Player'].comp.removeSkill2();
                    });
                    break;
                case 39:
                    /* this[name+'Player'].comp.changePerMp(); */
                    this[name + 'MultiMP'] = skillInfo.skillConfig.consumeMp;
                    console.error('内力消耗倍数:', skillInfo.skillConfig.consumeMp);
                    Laya.timer.once(skillInfo.skillConfig.time * 1000, this, function () {
                        console.error('内力消耗倍数恢复:');
                        _this3[name + 'MultiMP'] = 1;
                        _this3[name + 'Player'].comp.removeSkill2();
                    });
                    break;
                case 45:
                    break;
            }
        }
    }, {
        key: 'allWeaponsUnfreeze',
        value: function allWeaponsUnfreeze(name, skillInfo) {
            var _this4 = this;

            var time = skillInfo.skillConfig.time * 1000;
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.endCD(); //探讨要不要
                weaponBarComp.setCdTime(0);
            });

            Laya.timer.once(time, this, function () {
                _this4.weaponsBarArr.forEach(function (weaponBarComp) {
                    weaponBarComp.setCdTime(weaponBarComp.originCdTime);
                });
                _this4[name + 'Player'].comp.removeSkill2();
            });
        }
        //所有兵器选择框和技能框置灰

    }, {
        key: 'allBtnsLock',
        value: function allBtnsLock() {
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.owner.gray = true;
            });
            this.dodgeOwner.gray = true;
            this.skillOwner1.gray = true;
            this.skillOwner2.gray = true;
        }
        //所有兵器选择框和技能框置灰

    }, {
        key: 'allBtnsUnlock',
        value: function allBtnsUnlock() {
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.owner.gray = false;
            });
            this.dodgeOwner.gray = false;
            this.skillOwner1.gray = false;
            this.skillOwner2.gray = false;
        }
        //所有暂停，除了出技能的人

    }, {
        key: 'allPause',
        value: function allPause(isSelf) {
            this.selfWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.pause();
            });
            if (isSelf) {
                this.otherPlayer.comp.skeleton.paused();
                this.otherPlayer.node.zOrder = 100;
                this.selfPlayer.node.zOrder = 101;
                this.selfSkillText.zOrder = 103;
            } else {
                this.selfPlayer.comp.skeleton.paused();
                this.otherPlayer.node.zOrder = 101;
                this.selfPlayer.node.zOrder = 100;
            }

            Laya.timer.clear(this, this.startSelect);
            this.selfPlayer.comp.MPComp.pause();
            this.otherPlayer.comp.MPComp.pause();
            this.skillScr1.pause();
            this.skillScr2.pause();
            this.dodgeComp.pause();
        }
    }, {
        key: 'allResume',
        value: function allResume(isSelf) {
            this.selfWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.weaponsBarArr.forEach(function (weaponBarComp) {
                weaponBarComp.resume();
            });
            if (isSelf) {
                this.otherPlayer.comp.skeleton.resume();
                this.selfSkillText.zOrder = 1;
            } else {
                this.selfPlayer.comp.skeleton.resume();
            }
            /* Laya.timer.once(1000, this, this.startSelect); */
            this.firstWeaponSelect();
            this.selfPlayer.comp.MPComp.resume();
            this.otherPlayer.comp.MPComp.resume();
            this.skillScr1.resume();
            this.skillScr2.resume();
            this.dodgeComp.resume();
        }
    }, {
        key: 'firstWeaponSelect',
        value: function firstWeaponSelect() {
            this.sWeapon = this.weaponManager.seletedWeapon();
            Laya.timer.once(1000, this, this.startSelect);
        }
    }, {
        key: 'startSelect',
        value: function startSelect() {
            //如果选中的已经发射了，才可以重新选
            if (this.seletedLaunch) {
                this.sWeapon = this.weaponManager.seletedWeapon();
            }
            var curMp = this.otherPlayer.comp.MPComp.curMP;
            if (curMp >= this.sWeapon.params.weaponConsume) {
                this.seletedLaunch = true;
                if (this.otherPlayer.comp.canAction) {
                    this.sWeapon.isSelf = false;
                    this.sWeapon.selectedHandler();
                    this.weaponBarClickHandler(this.sWeapon);
                } else {
                    console.error("无法动弹");
                }
                Laya.timer.once(5000, this, this.startSelect);
            } else {
                this.seletedLaunch = false;
                Laya.timer.once(500, this, this.startSelect);
            }
        }
    }, {
        key: 'showTips',
        value: function showTips(value) {
            this.playerStateComp.setStateText(value);
        }
    }, {
        key: 'showSkillText',
        value: function showSkillText(isSelf, value) {
            var name = isSelf ? 'self' : 'other';
            this[name + 'SkillTextComp'].setSkillText(value);
        }
        //兵器点击后我方表现

    }, {
        key: 'weaponBarClickHandler',
        value: function weaponBarClickHandler(targetComp) {
            var _this5 = this;

            //体力不够
            var name = targetComp.isSelf ? 'self' : 'other';
            var consumeMP = targetComp.weaponConsume;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {

                if (targetComp.isSelf) {
                    console.warn(name + 'Player' + "__体力不足");
                    this.playerStateComp.setStateText("内力不足");
                }
                return;
            }

            //人物表现
            if (this.isSelf) {
                console.error('用户发射武器........');
            }

            this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb;

            var params = JSON.parse(JSON.stringify(targetComp.params)); //深拷贝,便于修改
            params.skillEffect = false;
            params.isSelf = targetComp.isSelf;
            //判断是否触发兵器技能
            //前提是有主动技能
            if (targetComp.params.activeSkill) {
                var skill = targetComp.params.activeSkill;
                var skillType = skill.skillType,
                    status = skill.status,
                    skillId = skill.skillId,
                    prob = skill.skillProb;

                if (skillType == 1 && status == 1) {
                    var random = Math.floor(Math.random() * 100 + 1);
                    if (random <= prob) {
                        /* 区分哪些是影响自身表现的，哪些是影响对手伤害的 */
                        params.skillEffect = true;
                        this[name + 'Player'].comp.attackEffect(params.skillEffect); //兵器技能是否触发
                        this[name + 'Player'].comp.attackCallback = function () {
                            _this5.weaponWithSkills(params, skillId);
                            _this5[name + 'Player'].comp.MPComp.changeMP(-consumeMP * _this5[name + 'MultiMP']);
                            if (skillId == 58) {
                                targetComp.startT(200); //快速冷却     
                            } else {
                                //正常开始技能冷却
                                targetComp.startT();
                            }
                        };
                        return;
                    } else {
                        console.warn('不好意思,没有触发技能');
                    }
                }
            }
            this[name + 'Player'].comp.attackEffect(false);
            this[name + 'Player'].comp.attackCallback = function () {
                _this5.weaponLaunch(params);
                targetComp.startT();
                _this5[name + 'Player'].comp.MPComp.changeMP(-consumeMP * _this5[name + 'MultiMP']);
            };
            //正常开始技能冷却
        }
    }, {
        key: 'weaponLaunch',
        value: function weaponLaunch(params, deltaT) {
            var _this6 = this;

            var name = params.isSelf ? 'self' : 'other';
            var weapon = Laya.Pool.getItemByCreateFun("weapon", this.weapon.create, this.weapon);
            var weaponComp = weapon.getComponent(_Weapon2.default);
            weaponComp.weaponType = params.weaponType;
            weapon.params = params;
            /*    console.log(weapon);
               console.log(weaponComp)
               */
            weaponComp.isSelf = params.isSelf;
            if (params.isSelf) {
                weapon.pos(280, 450);
            } else {
                weapon.pos(1050, 450);
            }

            //暂定
            if (deltaT) {
                Laya.timer.once(deltaT, this, function () {
                    _this6.owner.addChild(weapon);
                    _this6[name + 'Weapons'].push(weaponComp);
                });
            } else {
                this.owner.addChild(weapon);
                this[name + 'Weapons'].push(weaponComp);
            }
        }

        //带着技能发射

    }, {
        key: 'weaponWithSkills',
        value: function weaponWithSkills(params, skillId) {
            var skillConfig = params.activeSkill.skillConfig;
            var skillName = params.activeSkill.skillName;
            var hurt = skillConfig.hurt;
            var durable = skillConfig.durable;
            params.skillEffect = true; //代表技能是触发的
            var weaponSkillBox = Laya.Pool.getItemByCreateFun('weaponSkillBox', this.weaponSkill.create, this.weaponSkill);
            weaponSkillBox.params = {
                skillName: skillName,
                isSelf: params.isSelf
            };
            if (params.isSelf) {
                weaponSkillBox.pos(-164, 189);
            } else {
                weaponSkillBox.pos(1498, 189);
            }
            this.owner.addChild(weaponSkillBox);
            switch (skillId) {
                case 43:
                case 44:
                    var weaponNum = skillConfig.weaponNum;

                    console.error("修改后的值:", params.weaponAttack);
                    this.weaponLaunch(params);
                    for (var i = 0; i < weaponNum - 1; i++) {
                        this.weaponLaunch(params, 350);
                    }
                    break;
                //造成几倍伤害 兵器前方加气流
                case 47:
                case 48:
                    // params.weaponAttack = params.weaponAttack * hurt;
                    this.weaponLaunch(params);
                    break;
                //向上中路各发出1件兵器 几率12%
                case 51:
                    params.weaponType = 2;
                    this.weaponLaunch(params);
                    params.weaponType = 3;
                    this.weaponLaunch(params);
                    break;
                // 向上中下路各发出1件兵器 几率8%
                case 52:
                    params.weaponType = 1;
                    this.weaponLaunch(params);
                    params.weaponType = 2;
                    this.weaponLaunch(params);
                    params.weaponType = 3;
                    this.weaponLaunch(params);
                    break;
                //100%伤害转化为生命 几率18%
                case 45:
                case 46:
                case 49:
                case 50:
                case 53:
                case 54:
                case 55:
                case 59:
                    this.weaponLaunch(params);
                    break;
                case 60:
                    params.weaponType = 4;
                    this.weaponLaunch(params);
                    break;
                //造成几倍伤害 兵器上加刀刃特效
                case 56:
                case 57:
                case 61:
                    // params.weaponAttack = params.weaponAttack * hurt;
                    this.weaponLaunch(params);
                    break;
                //兵器耐久提升100%
                case 62:
                    params.weaponDurable = params.weaponDurable * durable;
                    this.weaponLaunch(params);
                    break;

            }
        }
    }, {
        key: 'removeWeapon',
        value: function removeWeapon(target) {
            var targetWeapons = target.isSelf ? this.selfWeapons : this.otherWeapons;
            for (var i = 0, len = targetWeapons.length; i < len; i++) {
                if (targetWeapons[i] == target) {
                    targetWeapons.splice(i, 1);
                    //console.log("删除自己")
                    break;
                }
            }
            console.log('删除后数组' + target.isSelf, targetWeapons);
        }
        //闪避技能 可能双方都要用

    }, {
        key: 'dodgeSkillShow',
        value: function dodgeSkillShow(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var originMP = this[name + 'Player'].comp.MPComp.originMP;
            var consumeMP = 0 * originMP;
            if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {
                if (isSelf) {
                    this.playerStateComp.setStateText("内力不足");
                }
                return;
            }
            if (isSelf) {
                this.dodgeComp.startT();
            }
            this.showSkillText(isSelf, "闪避");
            this[name + "Player"].comp.MPComp.changeMP(-consumeMP);
            console.error('闪避技能使用');
            this[name + 'Player'].comp.dodgeEffect();
        }
        // 全局碰撞检测

    }, {
        key: 'collisionDetection',
        value: function collisionDetection() {}
    }, {
        key: 'deathHandler',
        value: function deathHandler(loserIsSelf) {
            switch (this.gameType) {
                case 'pass':
                    this.dealPass(loserIsSelf);
                    break;
                case 'battle':
                    this.dealBattle(loserIsSelf);
                    break;
            }
        }
    }, {
        key: 'dealPass',
        value: function dealPass(loserIsSelf) {
            if (loserIsSelf) {
                this.passOver(loserIsSelf);
            } else {
                this.killNum += 1;
                if (this.killNum == this.monsterNum) {
                    this.passOver(loserIsSelf);
                } else {
                    this.replacePlayer();
                }
            }
        }
    }, {
        key: 'dealBattle',
        value: function dealBattle(loserIsSelf) {
            var _this7 = this;

            this.gameOver(loserIsSelf);
            var win = loserIsSelf ? 0 : 1;
            Laya.timer.callLater(this, function () {
                _this7.POST('martial_match_end', {
                    win: win
                }, function (res) {
                    Laya.MouseManager.enabled = true;
                    res.result = loserIsSelf ? -1 : 1;
                    res.roleId = _this7.params.roleId, res.robotRoleId = _this7.params.robotRoleId;
                    res.nickName = _this7.params.nickName;
                    res.robotNickName = _this7.params.robotNickName;
                    _this7.navigator.popup('/dialog/BattleResultDialog', res);
                });
            });
        }
        //换角色

    }, {
        key: 'replacePlayer',
        value: function replacePlayer() {
            Laya.timer.clear(this, this.startSelect);
            this.robotRole = JSON.parse(JSON.stringify(this.params.monsterList[this.killNum].robotRole));
            this.robotWeaponList = JSON.parse(JSON.stringify(this.params.monsterList[this.killNum].robotWeaponList));
            this.resetPlayerInfo(); //主要是重置对方的名字信息
            this.initPlayer(false);
            this.battleIndex = this.killNum + 1;
            this.boxGameBanner.getComponent(_GameBanner2.default).changeStyle({
                gameType: 'pass',
                curNum: this.curNum,
                battleIndex: this.battleIndex,
                monsterNum: this.monsterNum
            });
            console.error('换角色');
            this.weaponManager = null;
            this.weaponManager = new _WeaponManager2.default(this.robotWeaponList);
            this.firstWeaponSelect();
        }
        //关卡结束

    }, {
        key: 'passOver',
        value: function passOver(loserIsSelf) {
            var _this8 = this;

            this.gameState = 'over';
            Laya.MouseManager.enabled = false;
            if (!loserIsSelf) {
                this.selfPlayer.comp.skeleton.play('win', true);
            } else {
                this.otherPlayer.comp.skeleton.play('win', true);
            }
            Laya.timer.clearAll(this);
            console.error('闯关');

            this.selfPlayer.comp.MPComp.stopIncrease();
            this.otherPlayer.comp.MPComp.stopIncrease();

            //删除界面上兵器
            this.selfWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
            Laya.timer.once(2000, this, function () {
                _this8.POST('martial_game_end', {
                    killNum: _this8.killNum
                }, function (res) {
                    Laya.MouseManager.enabled = true;
                    res.result = loserIsSelf ? -1 : 1;
                    _this8.navigator.popup('/dialog/PassResultDialog', res);
                });
            });
        }
    }, {
        key: 'gameOver',
        value: function gameOver(loserIsSelf) {
            this.gameState = 'over';
            Laya.MouseManager.enabled = false;
            if (!loserIsSelf) {
                this.selfPlayer.comp.skeleton.play('win', true);
            } else {
                this.otherPlayer.comp.skeleton.play('win', true);
            }
            Laya.timer.clearAll(this);
            console.error('游戏结束');

            this.selfPlayer.comp.MPComp.stopIncrease();
            this.otherPlayer.comp.MPComp.stopIncrease();
            //删除界面上兵器
            this.selfWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.endMove();
            });
            this.boxGameBanner.getComponent(_GameBanner2.default);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {
            console.error('destroy111');
            this.selfWeapons = null;
            this.otherWeapons = null;
            Laya.timer.clearAll(this);
            Laya.MouseManager.enabled = true;
        }
    }]);

    return GameControl;
}(PaoYa.Component);

exports.default = GameControl;

},{"./WeaponManager":7,"./prefab/Dodge":14,"./prefab/GameBanner":15,"./prefab/HPBar":16,"./prefab/MPBar":17,"./prefab/Player":18,"./prefab/PlayerSkill":19,"./prefab/PlayerState":20,"./prefab/Skill":21,"./prefab/Weapon":22,"./prefab/WeaponBar":23,"./prefab/WeaponSkill":24}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _GameView2 = require("../GameView");

var _GameView3 = _interopRequireDefault(_GameView2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameGuide = function (_GameView) {
    _inherits(GameGuide, _GameView);

    function GameGuide() {
        _classCallCheck(this, GameGuide);

        return _possibleConstructorReturn(this, (GameGuide.__proto__ || Object.getPrototypeOf(GameGuide)).call(this));
    }

    return GameGuide;
}(_GameView3.default);

exports.default = GameGuide;

},{"../GameView":6}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _MPBar = require("./prefab/MPBar");

var _MPBar2 = _interopRequireDefault(_MPBar);

var _HPBar = require("./prefab/HPBar");

var _HPBar2 = _interopRequireDefault(_HPBar);

var _GameBanner = require("./prefab/GameBanner");

var _GameBanner2 = _interopRequireDefault(_GameBanner);

var _HeroConfig = require("./config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameView = function (_PaoYa$View) {
    _inherits(GameView, _PaoYa$View);

    function GameView() {
        _classCallCheck(this, GameView);

        return _possibleConstructorReturn(this, (GameView.__proto__ || Object.getPrototypeOf(GameView)).call(this));
    }

    _createClass(GameView, [{
        key: "onAwake",
        value: function onAwake() {
            this.selfMPBarScr = this.boxSelfInfo.getChildByName('boxMPBar').getComponent(_MPBar2.default);
            this.selfHPBarScr = this.boxSelfInfo.getChildByName('boxHPBar').getComponent(_HPBar2.default);

            this.otherMPBarScr = this.boxOtherInfo.getChildByName('boxMPBar').getComponent(_MPBar2.default);
            this.otherHPBarScr = this.boxOtherInfo.getChildByName('boxHPBar').getComponent(_HPBar2.default);

            /*  this.gameBannerScr=this.boxGameBanner.getComponent(GameBanner);
             this.gameBannerScr.changeStyle({gameStyle:'battle'}); */
            var scene = _HeroConfig2.default.getSkeleton('scene1');
            this.scenePoint.addChild(scene);
            scene.play('stand', true);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "initView",
        value: function initView() {}
    }, {
        key: "setInfo",
        value: function setInfo(data, isSelf) {
            var boxInfo = isSelf ? this.boxSelfInfo : this.boxOtherInfo;
            var imgIcon = boxInfo.getChildByName('imgIcon');
            var lblName = boxInfo.getChildByName("lblName");
            imgIcon.skin = data.icon;
            lblName.text = data.name;
        }
    }, {
        key: "setHPbar",
        value: function setHPbar(value, isSelf) {
            var HPBarScr = isSelf ? this.selfHPBarScr : this.otherHPBarScr;
        }
    }, {
        key: "setMPBar",
        value: function setMPBar(value, isSelf) {
            var MPBarScr = isSelf ? this.selfMPBarScr : this.otherMPBarScr;
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            //场景动画怎么处置
        }
    }]);

    return GameView;
}(PaoYa.View);

exports.default = GameView;

},{"./config/HeroConfig":8,"./prefab/GameBanner":15,"./prefab/HPBar":16,"./prefab/MPBar":17}],7:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponManager = function (_Laya$Script) {
  _inherits(WeaponManager, _Laya$Script);

  function WeaponManager(robotWeaponList) {
    _classCallCheck(this, WeaponManager);

    var _this = _possibleConstructorReturn(this, (WeaponManager.__proto__ || Object.getPrototypeOf(WeaponManager)).call(this));

    _this.weaponList = [];
    for (var i = 0, len = robotWeaponList.length; i < len; i++) {
      var weapon = new PrivateWeapon(robotWeaponList[i]);
      _this.weaponList.push(weapon);
    }
    return _this;
  }

  _createClass(WeaponManager, [{
    key: 'seletedWeapon',
    value: function seletedWeapon(index) {
      if (index != undefined) {
        return this.weaponList[index];
      };
      var weapons = [];
      for (var i = 0, len = this.weaponList.length; i < len; i++) {
        if (!this.weaponList[i].freezeing) {
          console.warn("可用兵器id:", this.weaponList[i].params.weaponName);
          weapons.push(this.weaponList[i]);
        }
      }
      var random = Math.floor(Math.random() * weapons.length);
      console.error('选中兵器:......:', weapons[random].params.weaponName);
      return weapons[random];
    }
  }]);

  return WeaponManager;
}(Laya.Script);

exports.default = WeaponManager;

var PrivateWeapon = function () {
  function PrivateWeapon(weaponParams) {
    _classCallCheck(this, PrivateWeapon);

    this.params = deepMerge(weaponParams);
    this.freezeing = false;
    this.isSelf = false;
    this.weaponConsume = this.params.weaponConsume;
  }

  _createClass(PrivateWeapon, [{
    key: 'selectedHandler',
    value: function selectedHandler() {
      if (this.freezeing) {
        console.error('机器人兵器冷却中，不可使用');
        return false;
      }
      this.freezeing = true;

      /*  return this.config; */
    }
  }, {
    key: 'startT',
    value: function startT() {
      console.error('机器人兵器进行冷却');
      Laya.timer.once(this.params.weaponCd * 1000, this, this.changeStatus);
    }
  }, {
    key: 'changeStatus',
    value: function changeStatus() {
      this.freezeing = false;
    }
  }]);

  return PrivateWeapon;
}();

function deepMerge() {
  var result = Object.create(null);

  for (var _len = arguments.length, objs = Array(_len), _key = 0; _key < _len; _key++) {
    objs[_key] = arguments[_key];
  }

  objs.forEach(function (obj) {
    if (obj) {
      Object.keys(obj).forEach(function (key) {
        var val = obj[key];
        if (isPlainObject(val)) {
          if (isPlainObject(result[key])) {
            result[key] = deepMerge(result[key], val);
          } else {
            result[key] = deepMerge(val);
          }
        } else {
          result[key] = val;
        }
      });
    }
  });
  return result;
}
function isPlainObject(val) {
  return Object.prototype.toString.call(val) === '[object Object]';
}

},{}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var HeroConfig = {
  ladderArr: ["", "无名小卒", '初出茅庐', '后起之秀', '江湖少侠', '武林高手', '名震江湖', '独步武林', '一代宗师', '独孤求败'],
  roleName: '',
  roleIcon: '',
  roleHp: 100, //HP:hit point 生命值,roleUp为0,game over
  roleMp: 100, //MP:magic point 内力，体力  内力恢复公式：每30帧内力恢复量=roleUp/390*30。
  /*  */
  roleStrength: 2, //arm strength ,臂力值决定兵器基础伤害值。兵器基础伤害=兵器攻击力*（roleStrength-对方根骨）/roleStrength
  roleBone: 2, //根骨  .值越大收到兵器攻击受到的伤害越小
  roleCritProb: 20, //暴击几率 ,
  roleCritHarm: 100, //暴伤百分比，兵器造成伤害=兵器基础伤害*roleCritHarm
  roleSkills: [{
    skillConfig: {},
    skillDesc: ""
  }, {}],
  spineMap: {
    freeze: {
      path: "spine/freeze/freeze.sk",
      name: ['continue', 'freeze'],
      ready_go: 1,
      templet: null
    },
    hero_1: {
      path: 'spine/hero/hero_1.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_2: {
      path: 'spine/hero/hero_2.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_3: {
      path: 'spine/hero/hero_1.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    hero_4: {
      path: 'spine/hero/hero_1.sk',
      name: ['dodge1', 'dodge2', 'dodge3', 'stand', "attack", "injured", "dizzy", "freeze"],
      templet: null
    },
    npc_1: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_2: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_3: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_4: {
      path: "spine/npc/npc_4.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_5: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_6: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    npc_7: {
      path: "spine/npc/npc_7.sk",
      name: ['bomb'],
      bomb: 0,
      templet: null
    },
    scene1: {
      path: "spine/scene/scene1.sk",
      templet: null
    }
  },
  /* 提供给外部获取动画的接口，输入动画名字即可 */
  getSkeleton: function getSkeleton(spineName) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    var skeleton;
    if (this.spineMap[spineName].templet) {
      skeleton = this.spineMap[spineName].templet.buildArmature(index);
    } else {
      skeleton = new Laya.Skeleton();
      skeleton.load(this.spineMap[spineName].path);
    }
    return skeleton;
  },
  loadAllSpine: function loadAllSpine() {
    this.loadIndex = 0;
    var spines = Object.keys(this.spineMap);
    this.preload(spines);
  },
  preload: function preload(spines) {
    var _this = this;
    var spine = this.spineMap[spines[this.loadIndex]];
    this.loadSpine(spine.path, function (templet) {
      spine.templet = templet;
      if (_this.loadIndex == spines.length - 1) {
        return;
      } else {
        _this.loadIndex++;
        _this.preload(spines);
      }
    }, function () {
      if (_this.loadIndex == spines.length - 1) {
        return;
      } else {
        _this.loadIndex++;
        _this.preload(spines);
      }
    });
  },
  loadSpine: function loadSpine(url, completion, error) {
    var templet = new Laya.Templet();
    templet.on(Laya.Event.COMPLETE, this, function () {
      completion && completion(templet);
    });
    templet.on(Laya.Event.ERROR, this, function () {
      console.error("E: Load spine, skin:" + url);
      error && error();
    });
    templet.loadAni(url);
  }
  //英雄携带的兵器
  //每个英雄对应的技能，和技能对应的动画效果
};exports.default = HeroConfig;

},{}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BattleResultDialog = function (_PaoYa$Dialog) {
    _inherits(BattleResultDialog, _PaoYa$Dialog);

    function BattleResultDialog() {
        _classCallCheck(this, BattleResultDialog);

        return _possibleConstructorReturn(this, (BattleResultDialog.__proto__ || Object.getPrototypeOf(BattleResultDialog)).call(this));
    }

    _createClass(BattleResultDialog, [{
        key: "onAwake",
        value: function onAwake() {
            console.log(this.params);
            var result = this.params.result;
            this.result = result;
            if (result == -1) {
                this.spPanel.text = "remote/pass_result/imgLose.png";
            } else {
                this.spPanel.text = "remote/pass_result/imgWin.png";
            }
            this.lblPrize.text = this.params.diamond;
            this.spBtn.on(Laya.Event.CLICK, this, this.matchHandler);
            this.btnBack.on(Laya.Event.CLICK, this, this.backHandler);
            this.btnHeroHouse.on(Laya.Event.CLICK, this, this.goHeroHouse);
            this.fillInfo(this.params); //补全双方信息
        }
    }, {
        key: "fillInfo",
        value: function fillInfo(params) {
            this.selfName.text = params.nickName;
            this.otherName.text = params.robotNickName;
            this.selfAvstar.texture = "local/common/hero_" + params.roleId + ".png";
            this.otherAvstar.texture = "local/common/hero_" + params.robotRoleId + ".png";
        }
        //

    }, {
        key: "goHeroHouse",
        value: function goHeroHouse() {
            console.log("进入英雄库");
            this.close();
            PaoYa.navigator.popToRootScene();
            PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).goHerosHouse();
        }
        //重新匹配

    }, {
        key: "matchHandler",
        value: function matchHandler() {
            console.log('重新匹配');
            this.close();
            PaoYa.navigator.popToScene("Grading");
            PaoYa.Request.POST("hero_match_game_start", { roleId: this.params.roleId }, function (res) {
                res.gameType = "battle";
                PaoYa.navigator.push('MatchView', res);
            });
        }
    }, {
        key: "backHandler",
        value: function backHandler() {
            this.close();
            PaoYa.navigator.popToRootScene();
        }
    }]);

    return BattleResultDialog;
}(PaoYa.Dialog);

exports.default = BattleResultDialog;

},{"../../scripts/common/HomeControl":26}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponBar = require("../prefab/WeaponBar");

var _WeaponBar2 = _interopRequireDefault(_WeaponBar);

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PassResultDialog = function (_PaoYa$Dialog) {
    _inherits(PassResultDialog, _PaoYa$Dialog);

    function PassResultDialog() {
        _classCallCheck(this, PassResultDialog);

        return _possibleConstructorReturn(this, (PassResultDialog.__proto__ || Object.getPrototypeOf(PassResultDialog)).call(this));
    }

    _createClass(PassResultDialog, [{
        key: "onAwake",
        value: function onAwake() {
            console.log(this.params);
            var result = this.params.result;
            this.result = result;
            if (result == -1) {
                this.spIcon.texture = "remote/pass_result/lose.png";
                this.spBtn.texture = "remote/pass_result/btnAgain.png";
                this.boxWeapons.visible = false;
                this.spPanel.texture = "remote/pass_result/losePanel.png";
                this.boxPrize.y = 460;
            } else {
                this.spIcon.texture = "remote/pass_result/win.png";
                this.spBtn.texture = "remote/pass_result/btnNext.png";
                this.boxWeapons.visible = true;
                this.spPanel.texture = "remote/pass_result/winPanel.png";
                this.boxPrize.y = 379;
                var weaponBarsArr = this.boxWeapons._children;
                var weaponList = this.params.weaponList;
                var len = weaponList.length;
                for (var i = 0; i < len; i++) {
                    weaponBarsArr[i].visible = true;
                    var weaponBarsComp = weaponBarsArr[i].getComponent(_WeaponBar2.default);
                    weaponBarsComp.params = weaponList[i];
                    weaponBarsComp.initView();
                    weaponBarsArr[i].off(Laya.Event.CLICK, weaponBarsComp);
                }
            }
            this.lblPrize.text = this.params.gold;
            this.spBtn.on(Laya.Event.CLICK, this, this.clickHandler);
            this.btnBack.on(Laya.Event.CLICK, this, this.backHandler);
        }
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            var _this2 = this;

            if (this.result == -1) {
                //console.log("再试一次")
                this.close();
                _GameControl2.default.instance.fillPlayerInfo();
                _GameControl2.default.instance.restart();
            } else {
                console.log("继续闯关");
                PaoYa.Request.POST("hero_game_start", { stageId: 1 }, function (res) {

                    res.gameType = "pass";
                    PaoYa.navigator.replace("GameView", res);
                    _this2.close();
                });
            }
        }
    }, {
        key: "backHandler",
        value: function backHandler() {
            this.close();
            PaoYa.navigator.popToRootScene();
        }
    }]);

    return PassResultDialog;
}(PaoYa.Dialog);

exports.default = PassResultDialog;

},{"../GameControl":4,"../prefab/WeaponBar":23}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _GameControl2 = require("../GameControl");

var _GameControl3 = _interopRequireDefault(_GameControl2);

var _SpeakMan = require("./SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

var _HomeControl = require("../../scripts/common/HomeControl");

var _HomeControl2 = _interopRequireDefault(_HomeControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var guideSteps = [{ x: 100, y: 617, w: 150, h: 110, tip: "res/guide/help6.png", fingerX: 200, fingerY: 250 }, { x: 883, y: 620, radius: 100, tip: "res/guide/help4.png", tipx: 730, tipy: 380 }, { x: 1128, y: 583, radius: 110, tip: "res/guide/help3.png", tipx: 900, tipy: 300 }],
    guideContainer = void 0,
    maskArea = void 0,
    interactionArea = void 0,
    hitArea = void 0,
    selfSpeakMan = void 0,
    otherSpeakMan = void 0,
    selfSpeakManComp = void 0,
    otherSpeakManComp = void 0,
    nextLabel = void 0,
    guideStep = 0;

var GameGuideControl = function (_GameControl) {
    _inherits(GameGuideControl, _GameControl);

    /** @prop {name:weapon,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:weaponBar,tips:"武器预制体对象",type:Prefab}*/
    /** @prop {name:player,tips:"人物预制体对象",type:Prefab} */
    /** @prop {name:weaponSkill,tips:"兵器技能名称预制体对象",type:Prefab} */
    /** @prop {name:selfHP,tips:'自己的血条',type:Node}*/
    /** @prop {name:selfMP,tips:'自己的体力',type:Node}*/
    /** @prop {name:otherHP,tips:'对方的血条',type:Node}*/
    /** @prop {name:otherMP,tips:'对方的体力',type:Node}*/
    /** @prop {name:playerState,tips:'人物状态',type:Node}*/
    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/
    /** @prop {name:selfSpeakMan,tips:"我方解说预制体对象",type:Prefab}*/
    /** @prop {name:otherSpeakMan,tips:"对方解说预制体对象",type:Prefab}*/
    /** @prop {name:spriteBg,tips:"游戏底图",type:node}*/
    /** @prop {name:aniFinger,tips:"手指动画",type:node}*/
    function GameGuideControl() {
        _classCallCheck(this, GameGuideControl);

        var _this = _possibleConstructorReturn(this, (GameGuideControl.__proto__ || Object.getPrototypeOf(GameGuideControl)).call(this));

        _this.closeRobot = true;
        return _this;
    }
    /*    onAwake(){
          super();
      }  */


    _createClass(GameGuideControl, [{
        key: "onClick",
        value: function onClick(e) {
            switch (e.target.name) {
                case 'next':
                    e.stopPropagation();
                    console.log('跳过');
                    break;
                case 'mask':
                    console.log('全局');
                    break;
            }
        }
    }, {
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            _get(GameGuideControl.prototype.__proto__ || Object.getPrototypeOf(GameGuideControl.prototype), "onAwake", this).call(this);
            this.aniFinger.zOrder = 1200;
            this.owner.on(Laya.Event.CLICK, this, function (e) {
                guideStep += 1;
                switch (guideStep) {
                    case 1:
                    case 2:
                    case 3:
                    case 5:
                    /*   case 6: */
                    case 7:
                    case 8:
                    case 9:
                    case 11:
                    case 12:
                        _this2['step' + guideStep]();
                        break;
                }
            });
        }
    }, {
        key: "arrowAni",
        value: function arrowAni() {
            this.target.visible = true;
            this.timeLine.play(0, true);
        }
    }, {
        key: "stopArrowAni",
        value: function stopArrowAni() {
            this.timeLine.pause();
        }
    }, {
        key: "resumeArrowAni",
        value: function resumeArrowAni() {
            this.target.visible = true;
            this.timeLine.resume();
        }
    }, {
        key: "step1",
        value: function step1() {
            selfSpeakMan.visible = false;
            otherSpeakMan.visible = true;
            otherSpeakManComp.showWord('小兄弟谦虚了，出招把。');
        }
    }, {
        key: "step2",
        value: function step2() {
            selfSpeakMan.visible = true;
            otherSpeakMan.visible = false;
            selfSpeakManComp.showWord('那我就不客气了！');
        }
    }, {
        key: "step3",
        value: function step3() {
            selfSpeakMan.visible = false;
            nextLabel.visible = false;
            interactionArea.graphics.clear();
            interactionArea.graphics.drawRect(100, 617, 110, 110, '#000');
            hitArea.unHit.clear();
            hitArea.unHit.drawRect(100, 617, 110, 110, '#000');
            this.aniFinger.visible = true;
            this.aniFinger.pos(150, 667);
            this.aniFinger.play(0, true);
        }
    }, {
        key: "step4",
        value: function step4() {
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            maskArea.visible = false;
            interactionArea.graphics.clear();
        }
    }, {
        key: "step5",
        value: function step5() {
            var _this3 = this;

            nextLabel.visible = false;
            maskArea.visible = false;
            otherSpeakMan.visible = false;
            this.sWeapon = this.weaponManager.seletedWeapon(0);
            this.sWeapon.isSelf = false;

            this.weaponBarClickHandler(this.sWeapon);
            Laya.timer.once(500, this, function () {
                _this3.setPause();
                /*  Laya.timer.scale=0; */
                _this3.aniFinger.visible = true;
                _this3.aniFinger.pos(310, 672);
                _this3.aniFinger.play(0, true);
                maskArea.visible = true;
                //  nextLabel.visible=true;
                interactionArea.graphics.clear();
                interactionArea.graphics.drawRect(260, 617, 110, 110, '#000');
                hitArea.unHit.clear();
                hitArea.unHit.drawRect(260, 617, 110, 110, '#000');
            });
        }

        //遮罩消失后,全局不能点击

    }, {
        key: "step6",
        value: function step6() {
            var _this4 = this;

            this.aniFinger.visible = false;
            this.aniFinger.stop();
            maskArea.visible = false;
            nextLabel.visible = false;
            this.setResume();
            /*  Laya.timer.scale=1;  */
            interactionArea.graphics.clear();
            //这个定时器不靠谱
            Laya.timer.once(550, this, function () {
                _this4.setPause();
                // Laya.timer.scale=0;
                maskArea.visible = true;
                nextLabel.visible = true;
                _this4.addTips();
            });
        }
    }, {
        key: "step7",
        value: function step7() {
            var _this5 = this;

            this.target.visible = false;
            this.imgTip.visible = false;
            this.imgTip.skin = "remote/guide/8.png";
            this.imgTip.y = 300;
            Laya.timer.callLater(this, function () {
                _this5.imgTip.visible = true;
                _this5.resumeArrowAni();
            });
        }
    }, {
        key: "step8",
        value: function step8() {
            this.target.visible = false;
            this.imgTip.visible = false;
            this.stopArrowAni();
            maskArea.visible = false;
            nextLabel.visible = false;
            this.setResume();
            Laya.timer.scale = 1;
            Laya.timer.once(100, this, function () {
                maskArea.visible = true;
                nextLabel.visible = true;
                otherSpeakMan.visible = true;
                otherSpeakManComp.showWord('没想到你的武功那么厉害，看来我要动真格了。');
            });
        }
    }, {
        key: "step9",
        value: function step9() {
            var _this6 = this;

            //扔出一把武器
            maskArea.visible = false;
            nextLabel.visible = false;
            this.sWeapon = this.weaponManager.seletedWeapon(1);
            this.sWeapon.isSelf = false;
            otherSpeakMan.visible = false;
            this.weaponBarClickHandler(this.sWeapon);
            Laya.timer.once(1200, this, function () {
                _this6.setPause();
                maskArea.visible = true;
                _this6.dodgeOwner.zOrder = 1010;
                _this6.aniFinger.visible = true;
                _this6.aniFinger.pos(1240, 660);
                _this6.aniFinger.play(0, true);
                hitArea.unHit.clear();
                hitArea.unHit.drawRect(1160, 580, 160, 160, '#000');
                _this6.dodgeOwner.once(Laya.Event.CLICK, _this6, function (e) {
                    e.stopPropagation();
                    guideStep += 1;
                    _this6.setResume();
                    _this6.step10();
                });
            });
        }
        //呼，还好闪得快，不然够我喝一壶。

    }, {
        key: "step10",
        value: function step10() {
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            this.dodgeOwner.zOrder = 10;
            maskArea.visible = false;
            console.log('hha,点击1000');
            Laya.timer.once(500, this, function () {
                maskArea.visible = true;
                nextLabel.visible = true;
                selfSpeakMan.visible = true;
                selfSpeakManComp.showWord("\u547C\uFF0C\u8FD8\u597D\u95EA\u5F97\u5FEB\uFF0C\u4E0D\u7136\u591F\u6211\u559D\u4E00\u58F6\u3002");
            });
        }
    }, {
        key: "step11",
        value: function step11() {
            selfSpeakManComp.showWord("\u5509\uFF1F\u4E54\u5927\u4FA0\u53BB\u54EA\u513F\u4E86\uFF1F");
            this.otherPlayer.node.removeSelf();
            //对手消失，跳转主界面
        }
    }, {
        key: "step12",
        value: function step12() {
            this.navigator.popToRootScene();
            PaoYa.navigator.visibleScene.getComponent(_HomeControl2.default).setGuide();
        }
    }, {
        key: "setPause",
        value: function setPause() {
            this.selfWeapons.forEach(function (weapon) {
                weapon.pause();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.pause();
            });
        }
    }, {
        key: "setResume",
        value: function setResume() {
            this.selfWeapons.forEach(function (weapon) {
                weapon.resume();
            });
            this.otherWeapons.forEach(function (weapon) {
                weapon.resume();
            });
        }
    }, {
        key: "addTips",
        value: function addTips() {
            var imgTip = new Laya.Image();
            imgTip.skin = "remote/guide/imgRoute.png";
            imgTip.y = 100;
            imgTip.centerX = 0;
            imgTip.zOrder = 1200;
            this.imgTip = imgTip;
            this.owner.addChild(imgTip);
            this.arrowAni();
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this7 = this;

            _get(GameGuideControl.prototype.__proto__ || Object.getPrototypeOf(GameGuideControl.prototype), "onEnable", this).call(this);
            this.spriteBg.on(Laya.Event.CLICK, this, function (e) {
                guideStep += 1;
                switch (guideStep) {
                    case 4:
                        e.stopPropagation();
                        _this7.step4();
                        break;
                    case 6:
                        e.stopPropagation();
                        _this7.step6();
                        break;
                }

                console.log("\u63A5\u6536\u5230\u70B9\u51FB");
            });
            //this.own
            this.onNotification('collide', this, function () {
                if (_this7._first) {
                    return;
                }
                Laya.timer.once(500, _this7, function () {
                    _this7._first = true;
                    maskArea.visible = true;
                    nextLabel.visible = true;
                    otherSpeakMan.visible = true;
                    otherSpeakManComp.showWord('小兄弟身手不错。嚯，接我这一招试试！');
                    // this.offNotificationListener('collide');
                });
            });
            //引导所在容器
            guideContainer = new Laya.Sprite();
            guideContainer.zOrder = 1000;
            this.owner.addChild(guideContainer);
            guideContainer.cacheAs = 'bitmap';

            // 绘制遮罩区，含透明度，
            maskArea = new Laya.Sprite();
            maskArea.alpha = 0.5;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.pos(-150, 0);
            maskArea.mouseEnabled = true;
            //maskArea.zOrder=1000;
            guideContainer.addChild(maskArea);

            //绘制可点击区域
            interactionArea = new Laya.Sprite();
            interactionArea.blendMode = 'destination-out';
            // interactionArea.zOrder=1001;
            guideContainer.addChild(interactionArea);

            //可点击区域
            hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(0, 0, 1634, 750, '#000');
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            //添加箭头
            var target = new Laya.Sprite();
            target.pos(885, 565);
            target.texture = "remote/guide/arrow.png";
            target.visible = false;
            this.target = target;
            this.curY = target.y;
            var timeLine = new Laya.TimeLine();
            this.timeLine = timeLine;
            var originY = this.curY;
            this.timeLine.to(this.target, {
                y: originY + 20
            }, 400, null, 0).to(this.target, {
                y: originY
            }, 400, null, 1);
            guideContainer.addChild(target);

            nextLabel = new Laya.Label();
            nextLabel.text = '跳过';
            nextLabel.font = 'figureDetail';
            nextLabel.pos(1100, 30);
            nextLabel.name = 'next';
            nextLabel.mouseEnabled = true;
            nextLabel.zOrder = 1300;
            console.log(nextLabel.width);
            guideContainer.addChild(nextLabel);

            nextLabel.on(Laya.Event.CLICK, this, this.nextTick);

            selfSpeakMan = this.selfSpeakMan.create.call(this.selfSpeakMan);
            selfSpeakManComp = selfSpeakMan.getComponent(_SpeakMan2.default);
            selfSpeakManComp.showWord('没想到对手竟然是乔大侠，失敬失敬。');
            selfSpeakMan.y = 225;
            selfSpeakMan.zOrder = 1003;
            this.owner.addChild(selfSpeakMan);

            otherSpeakMan = this.otherSpeakMan.create.call(this.otherSpeakMan);
            otherSpeakManComp = otherSpeakMan.getComponent(_SpeakMan2.default);
            otherSpeakMan.pos(50, 255);
            otherSpeakMan.zOrder = 1003;
            this.owner.addChild(otherSpeakMan);
            otherSpeakMan.visible = false;
        }
    }, {
        key: "nextTick",
        value: function nextTick(e) {
            e.stopPropagation();
            guideStep += 1;
            this['step' + guideStep]();
        }
    }]);

    return GameGuideControl;
}(_GameControl3.default);

exports.default = GameGuideControl;

},{"../../scripts/common/HomeControl":26,"../GameControl":4,"./SpeakMan":13}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = {
	"role": {
		"addAllRate": 1.0,
		"addMpRate": 0.0,
		"addStrengthRate": 0.0,
		"addWeaponSkillProb": 10,
		"downWeaponCd": 10,
		"downWeaponConsume": 0,
		"hitRecoveMp": 0,
		"notCrit": 0,
		"notDizzy": 0,
		"notFrozen": 0,
		"notPalsy": 0,
		"notPoison": 1,
		"reboundRate": 0,
		"recoverHp": 0,
		"recoverMp": 1.0,
		"refiners": [{
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_09",
			"refinerBasics": {
				"show": 3,
				"weaponType": 1,
				"hurt": 1.03
			},
			"refinerDesc": "提升轻型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "轻型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "轻燕",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_10",
			"refinerBasics": {
				"show": 3,
				"weaponType": 2,
				"hurt": 1.03
			},
			"refinerDesc": "提升中型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "中型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "锋刃",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_11",
			"refinerBasics": {
				"show": 3,
				"weaponType": 3,
				"hurt": 1.03
			},
			"refinerDesc": "提升重型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "重型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "沉石",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}],
		"roleBone": 126,
		"roleCritHarm": 180,
		"roleCritProb": 19,
		"roleDesc": "飞刀",
		"roleDress": "hero_1",
		"roleHp": 1110,
		"roleIcon": "xxx",
		"roleId": 1,
		"roleLevel": 20,
		"roleMp": 259,
		"roleName": "阿强",
		"rolePrice": 0,
		"roleSkills": "31,32,33",
		"roleStar": 2,
		"roleStatus": 0,
		"roleStrength": 377,
		"roleTopLevel": 20,
		"roleType": 0,
		"roleUpBone": 5,
		"roleUpHp": 42,
		"roleUpMp": 10,
		"roleUpStrength": 15,
		"skillWeapon": {
			"exp": 0,
			"num": 0,
			"skills": [{
				"skillCd": 0.0,
				"skillConfig": {
					"critProb": 20
				},
				"skillDesc": "发出1把火焰飞刀，造成臂力*0.18倍伤害。技能暴击+20%。",
				"skillId": 88,
				"skillLevel": 1,
				"skillName": "酒灼刀",
				"skillProb": 100,
				"skillType": 1,
				"skillUnlock": 0,
				"status": 0
			}],
			"weaponAttack": 67.0,
			"weaponCd": 0.0,
			"weaponConsume": 0.2,
			"weaponDurable": 20,
			"weaponIcon": "3",
			"weaponId": "x001_4",
			"weaponName": "火焰飞刀",
			"weaponPrice": 0,
			"weaponSalePrice": 0,
			"weaponSkills": "88",
			"weaponStar": 4,
			"weaponTopLevel": 15,
			"weaponType": 1
		},
		"skills": [{
			"skillCd": 20.0,
			"skillConfig": {
				"weaponId": "x001_4",
				"critProb": 20
			},
			"skillConsume": 0.0,
			"skillDesc": "发出1把火焰飞刀，造成臂力*0.18倍伤害。技能暴击+20%。",
			"skillId": 31,
			"skillLevel": 1,
			"skillName": "酒灼刀",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 5,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"critHarm": 20,
				"hurt": 0.2
			},
			"skillConsume": 0.0,
			"skillDesc": "所有轻型兵器伤害+20%。暴击伤害+20%。",
			"skillId": 32,
			"skillLevel": 1,
			"skillName": "江湖老油条",
			"skillProb": 12,
			"skillType": 0,
			"skillUnlock": 10,
			"status": 1
		}, {
			"skillCd": 60.0,
			"skillConfig": {
				"weaponCd": 0,
				"time": 10
			},
			"skillConsume": 0.0,
			"skillDesc": "所有兵器无冷却时间，持续10秒。",
			"skillId": 33,
			"skillLevel": 1,
			"skillName": "夺命连环三仙剑",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 15,
			"status": 1
		}],
		"upgradeCost": 0
	},
	"weaponList": [{
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"hurt": 5
			},
			"skillDesc": "造成5倍伤害",
			"skillId": 48,
			"skillLevel": 1,
			"skillName": "诛心",
			"skillProb": 18,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 0
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"critHarm": 20,
				"critProb": 5
			},
			"skillDesc": "暴击+5%，暴伤+20% ",
			"skillId": 65,
			"skillLevel": 1,
			"skillName": "灵猴",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 190.0,
		"weaponCd": 2.0,
		"weaponConsume": 91.0,
		"weaponDownConsume": 27,
		"weaponDurable": 22,
		"weaponIcon": "xxxxx",
		"weaponId": "d015_3",
		"weaponLevel": 15,
		"weaponName": "小李飞刀",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "48,65",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"recoverDown": "5-0.4"
			},
			"skillDesc": "使对手内力恢复速度-60%，持续5秒",
			"skillId": 55,
			"skillLevel": 1,
			"skillName": "气绝",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downConsume": 10
			},
			"skillDesc": "所有兵器内力消耗-10%",
			"skillId": 80,
			"skillLevel": 1,
			"skillName": "轮回",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 242.0,
		"weaponCd": 3.0,
		"weaponConsume": 72.0,
		"weaponDownConsume": 36,
		"weaponDurable": 25,
		"weaponIcon": "xxxx",
		"weaponId": "z015_3",
		"weaponLevel": 15,
		"weaponName": "倚天",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "55,80",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 2,
		"weaponUpAttack": 97,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"cd": 0
			},
			"skillDesc": "兵器立即冷却",
			"skillId": 58,
			"skillLevel": 1,
			"skillName": "顿悟",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"allWeaponSkillProb": 10
			},
			"skillDesc": "所有兵器技能触发几率提升10%",
			"skillId": 87,
			"skillLevel": 1,
			"skillName": "剑圣",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 456.0,
		"weaponCd": 4.0,
		"weaponConsume": 126.0,
		"weaponDownConsume": 50,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "g015_3",
		"weaponLevel": 15,
		"weaponName": "紫金降魔杵",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "58,87",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 3,
		"weaponUpAttack": 256,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"poison": "6-210"
			},
			"skillDesc": "使对手中剧毒，6秒损失210点生命",
			"skillId": 46,
			"skillLevel": 1,
			"skillName": "奇毒",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"notPoison": 1
			},
			"skillDesc": "免疫中毒",
			"skillId": 83,
			"skillLevel": 1,
			"skillName": "药师",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 185.0,
		"weaponCd": 2.0,
		"weaponConsume": 81.0,
		"weaponDownConsume": 27,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "d014_3",
		"weaponLevel": 15,
		"weaponName": "绝命",
		"weaponPrice": 25000,
		"weaponSalePrice": 5000,
		"weaponSkills": "46,83",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"weaponNum": 3
			},
			"skillDesc": "发出3件兵器",
			"skillId": 44,
			"skillLevel": 1,
			"skillName": "影刃",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downCd": 10
			},
			"skillDesc": "所有兵器冷却时间-10%",
			"skillId": 82,
			"skillLevel": 1,
			"skillName": "剑豪",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 180.0,
		"weaponCd": 2.0,
		"weaponConsume": 86.0,
		"weaponDownConsume": 27,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "d013_3",
		"weaponLevel": 15,
		"weaponName": "七星",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "44,82",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 1,
		"weaponUpAttack": 70,
		"weaponUpDurable": 10
	}],
	"robotWeaponList": [{
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"recoverDown": "5-0.4"
			},
			"skillDesc": "使对手内力恢复速度-60%，持续5秒",
			"skillId": 55,
			"skillLevel": 1,
			"skillName": "气绝",
			"skillProb": 22,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"downConsume": 10
			},
			"skillDesc": "所有兵器内力消耗-10%",
			"skillId": 80,
			"skillLevel": 1,
			"skillName": "轮回",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 242.0,
		"weaponCd": 2.9,
		"weaponConsume": 72.0,
		"weaponDownConsume": 36,
		"weaponDurable": 25,
		"weaponIcon": "xxxx",
		"weaponId": "z015_3",
		"weaponLevel": 15,
		"weaponName": "倚天",
		"weaponPrice": 20000,
		"weaponSalePrice": 4000,
		"weaponSkills": "55,80",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 2,
		"weaponUpAttack": 97,
		"weaponUpDurable": 10
	}, {
		"exp": 0,
		"num": 0,
		"skills": [{
			"skillCd": 0.0,
			"skillConfig": {
				"cd": 0
			},
			"skillDesc": "兵器立即冷却",
			"skillId": 58,
			"skillLevel": 1,
			"skillName": "顿悟",
			"skillProb": 25,
			"skillType": 1,
			"skillUnlock": 0,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"allWeaponSkillProb": 10
			},
			"skillDesc": "所有兵器技能触发几率提升10%",
			"skillId": 87,
			"skillLevel": 1,
			"skillName": "剑圣",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 0,
			"status": 1
		}],
		"upgradeCost": 0,
		"weaponAttack": 456.0,
		"weaponCd": 4.0,
		"weaponConsume": 126.0,
		"weaponDownConsume": 50,
		"weaponDurable": 25,
		"weaponIcon": "xxxxx",
		"weaponId": "g015_3",
		"weaponLevel": 15,
		"weaponName": "紫金降魔杵",
		"weaponPrice": 30000,
		"weaponSalePrice": 6000,
		"weaponSkills": "58,87",
		"weaponStar": 3,
		"weaponTopLevel": 15,
		"weaponType": 3,
		"weaponUpAttack": 256,
		"weaponUpDurable": 10
	}],
	"robotRole": {
		"addAllRate": 1.0,
		"addMpRate": 0.0,
		"addStrengthRate": 0.0,
		"addWeaponSkillProb": 10,
		"downWeaponCd": 0,
		"downWeaponConsume": 0,
		"hitRecoveMp": 0,
		"notCrit": 1,
		"notDizzy": 0,
		"notFrozen": 0,
		"notPalsy": 0,
		"notPoison": 0,
		"reboundRate": 20,
		"recoverHp": 0,
		"recoverMp": 1.0,
		"refiners": [{
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_09",
			"refinerBasics": {
				"show": 3,
				"weaponType": 1,
				"hurt": 1.03
			},
			"refinerDesc": "提升轻型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "轻型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "轻燕",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_10",
			"refinerBasics": {
				"show": 3,
				"weaponType": 2,
				"hurt": 1.03
			},
			"refinerDesc": "提升中型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "中型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "锋刃",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}, {
			"currentExp": 0,
			"currentFullExp": 0,
			"id": "refiner_11",
			"refinerBasics": {
				"show": 3,
				"weaponType": 3,
				"hurt": 1.03
			},
			"refinerDesc": "提升重型兵器伤害。",
			"refinerEachUp": 0.03,
			"refinerEffect": "重型兵器伤害增加d%",
			"refinerLevel": 1,
			"refinerName": "沉石",
			"refinerType": 1,
			"refinerUnlock": 0,
			"status": 0,
			"type": 1
		}],
		"roleBone": 176,
		"roleCritHarm": 180,
		"roleCritProb": 4,
		"roleDesc": "反击",
		"roleDress": "hero_4",
		"roleHp": 1660,
		"roleIcon": "xxx",
		"roleId": 4,
		"roleLevel": 20,
		"roleMp": 238,
		"roleName": "乔帮主",
		"rolePrice": 0,
		"roleSkills": "40,41,42",
		"roleStar": 4,
		"roleStatus": 0,
		"roleStrength": 574,
		"roleTopLevel": 20,
		"roleType": 0,
		"roleUpBone": 7,
		"roleUpHp": 64,
		"roleUpMp": 9,
		"roleUpStrength": 23,
		"skills": [{
			"skillCd": 24.0,
			"skillConfig": {
				"hurt": 0.2,
				"dragon": 1
			},
			"skillConsume": 0.0,
			"skillDesc": "打出1条小金龙，造成臂力*0.2倍伤害。",
			"skillId": 40,
			"skillLevel": 1,
			"skillName": "苍龙再现",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 5,
			"status": 1
		}, {
			"skillCd": 0.0,
			"skillConfig": {
				"reboundRate": 20,
				"notCrit": 1
			},
			"skillConsume": 0.0,
			"skillDesc": "20%反弹对手的兵器。不会受到暴击。",
			"skillId": 41,
			"skillLevel": 1,
			"skillName": "游龙入水",
			"skillProb": 100,
			"skillType": 0,
			"skillUnlock": 10,
			"status": 1
		}, {
			"skillCd": 75.0,
			"skillConfig": {
				"dizziness": 3,
				"dragon": 2,
				"hurt": 0.42
			},
			"skillConsume": 0.0,
			"skillDesc": "打出2条金龙，造成臂力*0.42倍伤害，命中后使对手晕眩3秒。",
			"skillId": 42,
			"skillLevel": 1,
			"skillName": "亢龙有悔",
			"skillProb": 100,
			"skillType": 1,
			"skillUnlock": 15,
			"status": 1
		}],
		"upgradeCost": 0
	}
};

},{}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SpeakMan = function (_PaoYa$Component) {
    _inherits(SpeakMan, _PaoYa$Component);

    /** @prop {name:lblSpeakName,tips:'人物名字',type:Node}*/
    /** @prop {name:lblIntroduct,tips:'介绍文字',type:Node}*/
    /** @prop {name:imgArrow,tips:'箭头图片',type:Node}*/
    /** @prop {name:imgRole,tips:'人物形象图片',type:Node}*/
    function SpeakMan() {
        _classCallCheck(this, SpeakMan);

        return _possibleConstructorReturn(this, (SpeakMan.__proto__ || Object.getPrototypeOf(SpeakMan)).call(this));
    }

    _createClass(SpeakMan, [{
        key: "onAwake",
        value: function onAwake() {
            this.lblSpeakName.font = "figureDetail";
            this.target = this.imgArrow;
            this.curY = this.target.y;
            var timeLine = new Laya.TimeLine();
            this.timeLine = timeLine;
            this.lblSpeakName.scale(0.8, 0.8);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "modify",
        value: function modify(value) {
            this.lblSpeakName.text = value;
            this.imgRole.visible = false;
        }
    }, {
        key: "showWord",
        value: function showWord(value) {
            this.str = value;
            var len = this.str.length;
            this.index = 0;
            this.lblIntroduct.text = '';
            Laya.timer.loop(60, this, this.wordAni, [len]);
        }
    }, {
        key: "wordAni",
        value: function wordAni(len) {
            this.lblIntroduct.text += this.str.substring(this.index, this.index + 1);
            this.index += 1;
            if (this.index == len) {
                Laya.timer.clear(this, this.wordAni);
                this.arrowAni();
            }
        }
    }, {
        key: "arrowAni",
        value: function arrowAni() {
            this.imgArrow.visible = true;
            var originY = this.curY;
            this.timeLine.to(this.target, {
                y: originY + 20
            }, 400, null, 0).to(this.target, {
                y: originY
            }, 400, null, 1);
            this.timeLine.play(0, true);
        }
    }, {
        key: "stopTimeLine",
        value: function stopTimeLine() {
            this.timeLine.pause();
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            console.log("\u9500\u6BC1\u5BF9\u8BDD");
            this.timeLine.destroy();
            this.timeLine = null;
        }
    }]);

    return SpeakMan;
}(PaoYa.Component);

exports.default = SpeakMan;

},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dodge = function (_PaoYa$Component) {
    _inherits(Dodge, _PaoYa$Component);

    /* @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    function Dodge() {
        _classCallCheck(this, Dodge);

        return _possibleConstructorReturn(this, (Dodge.__proto__ || Object.getPrototypeOf(Dodge)).call(this));
    }

    _createClass(Dodge, [{
        key: "onAwake",
        value: function onAwake() {
            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.spShadow.visible = false;
            this.maskArea = new Laya.Sprite();
            this.maskArea.texture = "remote/game/dodge.png";
            owner.addChild(this.maskArea);

            this.spMask = new Laya.Sprite();
            this.maskArea.mask = this.spMask;

            this.cdTime = 20000;
            this.freezeing = false;
            this.maxAngle = 270;
            this.startAngle = -90;
            this.endAngle = -90;
            owner.on(Laya.Event.CLICK, this, this.clickHandler);
        }
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            _GameControl2.default.instance.dodgeSkillShow(true);
        }
    }, {
        key: "startT",
        value: function startT(time) {

            this.spShadow.visible = true;
            this.maskArea.visible = true;
            this.freezeing = true;

            this.beiginTime = new Date().getTime();

            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
            //Laya.timer.loop(this.frameCd, this, this.startCd);
            var cdT = time == undefined ? this.cdTime : time;
            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
    }]);

    return Dodge;
}(PaoYa.Component);

exports.default = Dodge;

},{"../GameControl":4}],15:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameBanner = function (_PaoYa$Component) {
    _inherits(GameBanner, _PaoYa$Component);

    /** @prop {name:lblGameType,tips:'比赛类型',type:Node}*/
    /** @prop {name:lblTime,tips:'时间label或者闯关数字',type:Node}*/
    function GameBanner() {
        _classCallCheck(this, GameBanner);

        return _possibleConstructorReturn(this, (GameBanner.__proto__ || Object.getPrototypeOf(GameBanner)).call(this));
    }

    _createClass(GameBanner, [{
        key: "onAwake",
        value: function onAwake() {
            this.lblGameType.font = "weaponNFontT";
        }
    }, {
        key: "changeStyle",
        value: function changeStyle(params) {

            if (params.gameType == "battle") {
                this.lblGameType.text = "匹配赛";
                this.startCount();
            } else if (params.gameType == "pass") {
                this.lblGameType.text = "\u7B2C" + params.curNum + "\u5173";
                this.lblTime.text = params.battleIndex + "/" + params.monsterNum;
            }
        }
    }, {
        key: "setTimeText",
        value: function setTimeText(value) {
            this.lblTime.text = value;
        }
    }, {
        key: "startCount",
        value: function startCount() {
            var _this2 = this;

            var timerService = new PaoYa.TimerService(1000, 1, true);
            timerService.on(PaoYa.TimerService.PROGRESS, this, function (time) {

                _this2.lblTime.text = time.formatTime('M:S') + "";
            });
            timerService.on(PaoYa.TimerService.STOP, this, function () {});
            timerService.start();
            this.timerService = timerService;
        }
    }, {
        key: "pause",
        value: function pause() {}
    }, {
        key: "resume",
        value: function resume() {
            //this.timerService.
        }
    }, {
        key: "stop",
        value: function stop() {
            this.timerService.stop();
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.timerService && this.timerService.stop();
            this.timerService = null;
        }
    }]);

    return GameBanner;
}(PaoYa.Component);

exports.default = GameBanner;

},{"../GameControl":4}],16:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HPBar = function (_PaoYa$Component) {
  _inherits(HPBar, _PaoYa$Component);

  /** @prop {name:imgHp,tips:"血条图片",type:Node} */
  /** @prop {name:imgMask,tips:"血条mask",type:Node} */
  /** @prop {name:lblHpPct,tips:"hp百分比",type:Node} */
  function HPBar() {
    _classCallCheck(this, HPBar);

    return _possibleConstructorReturn(this, (HPBar.__proto__ || Object.getPrototypeOf(HPBar)).call(this));
  }

  _createClass(HPBar, [{
    key: 'onAwake',
    value: function onAwake() {}
  }, {
    key: 'onEnable',
    value: function onEnable() {}
  }, {
    key: 'initBar',
    value: function initBar(HPValue) {
      this.originW = this.owner.width;
      this.imgMask.width = this.owner.width;
      console.log('初始的血量值:', HPValue);
      this.originHP = this.curHP = HPValue;
      this.lblHpPct.text = this.curHP + '/' + this.originHP;
    }
  }, {
    key: 'changeHP',
    value: function changeHP(value) {
      this.curHP += value;
      if (this.curHP <= 0) {
        this.curHP = 0;
        this.lblHpPct.text = this.curHP + '/' + this.originHP;
        this.imgMask.width = 0;
        return;
      } else if (this.curHP > this.originHP) {
        this.curHP = this.originHP;
      }
      this.lblHpPct.text = this.curHP + '/' + this.originHP;
      var w = Math.floor(this.curHP / this.originHP * this.originW);
      this.imgMask.width = w;
    }
  }, {
    key: 'onDisable',
    value: function onDisable() {}
  }, {
    key: 'onDestroy',
    value: function onDestroy() {}
  }]);

  return HPBar;
}(PaoYa.Component);

exports.default = HPBar;

},{}],17:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MPBar = function (_PaoYa$Component) {
    _inherits(MPBar, _PaoYa$Component);

    /** @prop {name:imgMP,tips:"内力条图片",type:Node} */
    /** @prop {name:imgMask,tips:"内力条mask",type:Node} */
    /** @prop {name:lblMpPct,tips:"mp百分比",type:Node} */
    function MPBar() {
        _classCallCheck(this, MPBar);

        return _possibleConstructorReturn(this, (MPBar.__proto__ || Object.getPrototypeOf(MPBar)).call(this));
    }

    _createClass(MPBar, [{
        key: 'onAwake',
        value: function onAwake() {

            this.originW = this.owner.width;
            this.imgMP.mask = this.imgMask;
        }
    }, {
        key: 'onEnable',
        value: function onEnable() {}
    }, {
        key: 'initBar',
        value: function initBar(MPValue) {
            console.log('初始的体力值:', MPValue);
            this.originMP = this.curMP = MPValue;
            this.imgMask.width = this.owner.width;
            this.perAddMP = Math.floor(this.originMP / 360 * 20);
            this.originPerAddMP = this.perAddMP;
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
            this.startBar();
        }
    }, {
        key: 'startBar',
        value: function startBar() {
            Laya.timer.loop(500, this, this.autoIncreaseBar);
        }
    }, {
        key: 'autoIncreaseBar',
        value: function autoIncreaseBar() {
            if (this.curMP >= this.originMP) {
                // console.warn("内力已经满了")
                return;
            }
            var addedValue = Number((this.curMP + this.perAddMP).toFixed(1));
            this.curMP = addedValue > this.originMP ? this.originMP : addedValue;
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
            this.imgMask.width = Math.floor(this.curMP / this.originMP * this.originW);
        }
    }, {
        key: 'changeMP',
        value: function changeMP(value) {
            this.curMP += value;
            if (this.curMP < 0) {
                this.curMP = 0;
            } else if (this.curMP > this.originMP) {
                this.curMP = this.originMP;
            }
            this.imgMask.width = Math.floor(this.curMP / this.originMP * this.originW);
            this.lblMpPct.text = this.curMP + '/' + this.originMP;
        }
    }, {
        key: 'changePerMP',
        value: function changePerMP(value) {

            this.perAddMP = value;
        }
    }, {
        key: 'updateBar',
        value: function updateBar() {}
    }, {
        key: 'stopIncrease',
        value: function stopIncrease() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'pause',
        value: function pause() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'resume',
        value: function resume() {
            Laya.timer.loop(500, this, this.autoIncreaseBar);
        }
    }, {
        key: 'onDisable',
        value: function onDisable() {
            Laya.timer.clear(this, this.autoIncreaseBar);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {}
    }]);

    return MPBar;
}(PaoYa.Component);

exports.default = MPBar;

},{}],18:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Player = function (_PaoYa$Component) {
  _inherits(Player, _PaoYa$Component);

  /** @prop {name:boxAniBot,tips:"受击动效box",type:Node} */
  /** @prop {name:aniBot,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniMid,tips:"中间受击动效box",type:Node} */
  /** @prop {name:aniMid,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniTop,tips:"顶部动效box",type:Node} */
  /** @prop {name:aniTop,tips:"受击动效节点",type:Node} */
  /** @prop {name:boxAniPalsy,tips:"麻痹动效box",type:Node} */
  /** @prop {name:aniPalsy,tips:"麻痹动效节点",type:Node} */
  /** @prop {name:boxAniDizzy,tips:"眩晕动效box",type:Node} */
  /** @prop {name:aniDizzy,tips:"眩晕动效节点",type:Node} */
  /** @prop {name:boxAniHp,tips:"回血动效box",type:Node} */
  /** @prop {name:aniHp,tips:"回血动效节点",type:Node} */
  /** @prop {name:boxAniMp,tips:"回蓝动效box",type:Node} */
  /** @prop {name:aniMp,tips:"回蓝动效节点",type:Node} */
  /** @prop {name:boxAniUp,tips:"英雄升级动效box",type:Node} */
  /** @prop {name:aniUp,tips:"英雄升级动效节点",type:Node} */
  /** @prop {name:boxAniPoison,tips:"中毒动效box",type:Node} */
  /** @prop {name:aniPoison,tips:"中毒动效节点",type:Node} */
  /** @prop {name:aniSkillCommon,tips:"兵器技能动效节点",type:Node} */
  /** @prop {name:aniSkill2Hero1,tips:"1号英雄技能2动效节点",type:Node} */
  /** @prop {name:aniSkill2Hero2,tips:"2号英雄技能2动效节点",type:Node} */
  function Player() {
    _classCallCheck(this, Player);

    return _possibleConstructorReturn(this, (Player.__proto__ || Object.getPrototypeOf(Player)).call(this));
  }

  _createClass(Player, [{
    key: "onAwake",
    value: function onAwake() {
      var owner = this.owner;

      var width = owner.width,
          height = owner.height;
      var posX = Math.floor(width / 2),
          posY = height;
      this.centerX = posX;

      console.error('角色服装:', this.attr.roleDress);
      var dressIcon = this.attr.roleDress;
      this.dressIcon = dressIcon;
      this.roleId = this.attr.roleId;
      var skeleton = _HeroConfig2.default.getSkeleton(dressIcon);
      skeleton.play('stand', true);
      skeleton.pos(posX, posY - 10);
      //不管什么状态播放完，都继续播放待机状态
      skeleton.on(Laya.Event.STOPPED, this, this.stopHandler);
      skeleton.on(Laya.Event.LABEL, this, this.labelHandler);
      this.skeleton = skeleton;

      this.owner.addChild(skeleton);
      this.typeAniName = ["", "Bot", "Mid", "Top", "Top"]; //对应轨迹的动画名称
      var freeze = _HeroConfig2.default.getSkeleton('freeze');
      freeze.pos(posX, posY);
      this.owner.addChild(freeze);
      this.freeze = freeze;
      this.index = 0;
    }
    //执行两次，找原因(因为player在GameControl的onAwake创建)

  }, {
    key: "onEnable",
    value: function onEnable() {
      this.killed = false;
      this.index += 1;

      if (this.dressIcon != this.attr.roleDress) {
        this.dressIcon = this.attr.roleDress;
        var templet = _HeroConfig2.default.spineMap[this.dressIcon].templet;
        this.skeleton.init(templet, 0);
        this.skeleton.play('stand', true);
      }
      this.canAction = true;
      this.sectionAni = 0; //分段动画
    }
    /* 监听事件帧 */

  }, {
    key: "labelHandler",
    value: function labelHandler(e) {
      // this.skeleton.on(Laya.Event.LABEL, this, (e) => {
      switch (e.name) {
        case 'skill1':
          _GameControl2.default.instance.allResume(this.isSelf);
          this.skillCallback();
          break;
        case 'stop':
          _GameControl2.default.instance.allPause(this.isSelf);
          break;
        case 'skill2':
          _GameControl2.default.instance.allResume(this.isSelf);
          this['aniSkill2Hero' + this.roleId].visible = true;
          this['aniSkill2Hero' + this.roleId].play(0, true);
          break;
        case 'launch':
          this.attackCallback();
          break;
      }

      // })
    }
    //监听动画停止；

  }, {
    key: "stopHandler",
    value: function stopHandler() {
      var _this2 = this;

      var time = 0;
      Laya.MouseManager.enabled = true;
      if (this.killed) {
        this.owner.removeSelf();
        _GameControl2.default.instance.deathHandler(this.isSelf);
        return;
      }
      if (this.sectionAni == 1) {
        this.sectionAni += 1;
        this.skeleton.play('dodge2', true);
        if (this.roleId == 1) {
          time = 800;
        } else {
          time = 200;
        }
        Laya.timer.once(time, this, function () {
          _this2.sectionAni += 1;
          _this2.skeleton.play('dodge3', false);
        });
        return;
      }
      /*   if (this.sectionAni == 2) {
          this.sectionAni += 1;
          this.skeleton.play('dodge3', false)
          return;
        } */
      if (this.sectionAni == 3) {
        this.removeDodge();
        // return;
      }
      this.skeleton.play('stand', true);
    }
    //动态注册技能回调

  }, {
    key: "skillCallback",
    value: function skillCallback() {}
    //动态注册攻击回调

  }, {
    key: "attackCallback",
    value: function attackCallback() {}

    //人物触发兵器技能,人物通用技能

  }, {
    key: "showSkill1",
    value: function showSkill1() {
      this.skeleton.play("skill1", false);
    }
    /* removeSkill1() {
      this.aniSkillCommon.stop();
    } */
    //人物触发技能2

  }, {
    key: "showSkill2",
    value: function showSkill2() {
      this.skeleton.play("skill2", false);
    }
  }, {
    key: "removeSkill2",
    value: function removeSkill2() {
      this['aniSkill2Hero' + this.roleId].visible = false;
      this['aniSkill2Hero' + this.roleId].stop();
    }
    //人物触发兵器技能特效

  }, {
    key: "skillEffect",
    value: function skillEffect() {
      this.aniSkillCommon.visible = true;
      this.aniSkillCommon.play(0, false);
    }
  }, {
    key: "removeSkillEffect",
    value: function removeSkillEffect() {
      this.aniSkillCommon.stop();
      this.boxAniPoison.visible = false;
    }
    //攻击

  }, {
    key: "attackEffect",
    value: function attackEffect(weaponSkillEffect) {
      // this.skeleton.playbackRate(1)
      this.skeleton.play("attack", false);
      if (weaponSkillEffect) {
        this.skillEffect();
      }
    }
    //受击打,所有武器碰到都有这效果

  }, {
    key: "injuredEffect",
    value: function injuredEffect(posType, value, isCrit, cb) {
      /*   if (this.isSelf) {
          Laya.MouseManager.enabled = false;
        } */
      this.HPComp.changeHP(value);
      if (isCrit) {
        this.showFontEffect("暴击" + value, "crit");
      } else {
        this.showFontEffect(value, "hurt");
      }

      if (this.HPComp.curHP <= 0) {
        console.error('死亡结束');
        this.killed = true;
        this.skeleton.play("death", false);

        //  GameControl.instance.passOver(this.isSelf);
        /*  GameControl.instance.gameOver(this.isSelf); */ //对战用
        return;
      }
      var aniName = this.typeAniName[posType];
      this.skeleton.play("injured", false);
      this['boxAni' + aniName].visible = true;
      this['ani' + aniName].play(0, false);
      cb && this.skeleton.once(Laya.Event.LABEL, this, function (e) {
        if (e.name === "injuredEnd") {
          cb();
        }
      });
    }
    //恢复生命

  }, {
    key: "hpRecoverEffect",
    value: function hpRecoverEffect(value) {
      this.boxAniHp.visible = true;
      this.aniHp.play(0, false);
      this.HPComp.changeHP(value);
      this.showFontEffect("+" + value, "recoverHP");
    }
    //恢复内力

  }, {
    key: "mpRecoverEffect",
    value: function mpRecoverEffect(value) {
      this.boxAniMp.visible = true;
      this.aniMp.play(0, false);
      this.MPComp.changeMP(value);
      this.showFontEffect("+" + value, "recoverMP");
    }
    //中毒

  }, {
    key: "poisonEffect",
    value: function poisonEffect(poisonTime, hpValue) {
      if (this.attr.notPoison == 1) {
        this.showPlayerState("免疫");
        return;
      }
      /*    this.canAction = false;
         if (this.isSelf) {
           Laya.MouseManager.enabled = false;
           GameControl.instance.allBtnsLock();
         } */
      this.boxAniPoison.visible = true;
      this.aniPoison.play(0, true);
      var startTime = new Date().getTime();
      var endTime = startTime + poisonTime + 1000;
      // this.HPComp.changeHP(hpValue);
      this.showPlayerState("中毒");
      // let showText=hpValue>0?"中毒+"+hpValue:"中毒"+hpValue;
      // this.showFontEffect(showText,"poision")
      Laya.timer.loop(1000, this, this.minusHp, [endTime, hpValue]);
    }
  }, {
    key: "minusHp",
    value: function minusHp(endTime, hpValue) {
      if (new Date().getTime() > endTime) {
        this.removePoison();
        Laya.timer.clear(this, this.minusHp);
        return;
      }
      var showText = hpValue > 0 ? "中毒+" + hpValue : "中毒" + hpValue;
      this.showFontEffect(showText, "poision");
      this.HPComp.changeHP(hpValue);
    }
  }, {
    key: "removePoison",
    value: function removePoison() {
      /*   this.canAction = true;
        if (this.isSelf) {
          Laya.MouseManager.enabled = true;
          GameControl.instance.allBtnsUnlock();
        } */
      this.boxAniPoison.visible = false;
      this.aniPoison.stop();
    }
    //x眩晕

  }, {
    key: "dizzyEffect",
    value: function dizzyEffect(dizzyTime) {
      if (this.attr.notDizzy == 1) {
        this.showPlayerState("免疫");
        return;
      }
      this.canAction = false;
      if (this.isSelf) {
        Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.boxAniDizzy.visible = true;
      this.aniDizzy.play(0, true);
      this.skeleton.play('dizzy', true);
      this.showPlayerState("晕眩");
      Laya.timer.once(dizzyTime, this, this.removeDizzy);
    }
  }, {
    key: "removeDizzy",
    value: function removeDizzy() {
      this.canAction = true;
      if (this.isSelf) {
        Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.skeleton.play('stand', true);
      this.boxAniDizzy.visible = false;
      this.aniDizzy.stop();
    }
    //麻痹

  }, {
    key: "palsyEffect",
    value: function palsyEffect(palsyTime) {
      if (this.attr.notPalsy == 1) {
        this.showPlayerState("免疫");
        return;
      }
      this.canAction = false;
      if (this.isSelf) {
        Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.boxAniPalsy.visible = true;
      this.aniPalsy.play(0, true);
      this.skeleton.play('freeze', true);
      this.showPlayerState("麻痹");
      Laya.timer.once(palsyTime, this, this.removePalsy);
    }
  }, {
    key: "removePalsy",
    value: function removePalsy() {
      this.canAction = true;
      if (this.isSelf) {
        Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.skeleton.play('stand', true);
      this.boxAniPalsy.visible = false;
      this.aniPalsy.stop();
    }
    //冰冻

  }, {
    key: "freezedEffect",
    value: function freezedEffect() {
      var freezeTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3000;

      if (this.attr.notFrozen == 1) {
        this.showPlayerState("免疫");
        return;
      }
      this.canAction = false;
      if (this.isSelf) {
        Laya.MouseManager.enabled = false;
        _GameControl2.default.instance.allBtnsLock();
      }
      this.freeze.visible = true;
      this.skeleton.play('freeze', true);
      this.freeze.play('freeze', false);
      this.showPlayerState("冰冻");
      Laya.timer.once(freezeTime, this, this.removeFreeze);
    }
  }, {
    key: "removeFreeze",
    value: function removeFreeze() {
      this.canAction = true;
      if (this.isSelf) {
        Laya.MouseManager.enabled = true;
        _GameControl2.default.instance.allBtnsUnlock();
      }
      this.freeze.visible = false;
      this.skeleton.play('stand', true);
    }
    //闪避技能

  }, {
    key: "dodgeEffect",
    value: function dodgeEffect() {
      this.sectionAni = true;
      this.dodge = true; //闪避无敌状态
      this.owner.zOrder = 100;
      this.skeleton.play('dodge1', false);
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsLock();
      }
    }
  }, {
    key: "removeDodge",
    value: function removeDodge() {
      this.owner.zOrder = 20;
      this.sectionAni = 0;
      this.dodge = false;
      if (this.isSelf) {
        _GameControl2.default.instance.allBtnsUnlock();
      }
    }
  }, {
    key: "changePerMp",
    value: function changePerMp(time, valuePer) {
      this.MPComp.changePerMP(this.MPComp.perAddMP * valuePer);
      Laya.timer.once(time, this, this.recoverPerMp);
    }
  }, {
    key: "recoverPerMp",
    value: function recoverPerMp() {
      this.MPComp.changePerMP(this.MPComp.originPerAddMP);
    }
  }, {
    key: "showPlayerState",
    value: function showPlayerState(value) {
      var lblState = Laya.Pool.getItemByClass('effectState', Laya.Label);
      this.lblState = lblState;
      lblState.text = value;
      /*   hurt.fontSize = 100;  */
      lblState.font = "playerState";
      lblState.alpha = 1;
      lblState.leading = 30;
      var endPos = void 0;
      var targetScaleX = void 0;
      if (this.isSelf) {
        lblState.scaleX = 1.5;
        targetScaleX = 1;
      } else {
        lblState.scaleX = -1.5;
        targetScaleX = -1;
      }
      lblState.scaleY = 1.5;
      endPos = {
        y: -60
      };
      lblState.y = 60;
      lblState.pivot(lblState.width / 2, lblState.height / 2);
      lblState.x = this.centerX;
      this.owner.addChild(lblState);

      var tween = new Laya.Tween();
      tween.to(lblState, {
        y: endPos.y
      }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function (item) {
        item.removeSelf();
        Laya.Pool.recover('effectLabel', item);
      }, [lblState]));
    }
  }, {
    key: "showFontEffect",
    value: function showFontEffect(value, type) {
      var hurt = Laya.Pool.getItemByClass('effectLabel', Laya.Label);
      this.hurt = hurt;
      hurt.text = value;
      /*   hurt.fontSize = 100;  */
      hurt.font = type;
      hurt.alpha = 1;
      hurt.leading = 30;
      var endPos = void 0;
      var targetScaleX = void 0;
      if (this.isSelf) {
        hurt.scaleX = 2.5;
        targetScaleX = 1;
      } else {
        hurt.scaleX = -2.5;
        targetScaleX = -1;
      }
      hurt.scaleY = 2.5;
      endPos = {
        y: -60
      };
      hurt.y = 40;
      hurt.pivot(hurt.width / 2, hurt.height / 2);
      hurt.x = this.centerX;
      this.owner.addChild(hurt);

      var tween = new Laya.Tween();
      tween.to(hurt, {
        y: endPos.y,
        scaleX: targetScaleX,
        scaleY: 1
      }, 600, Laya.Ease.linearIn, Laya.Handler.create(this, function (item) {
        item.removeSelf();
        Laya.Pool.recover('effectLabel', item);
      }, [hurt]));
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      /*  this.skeleton.off(Laya.Event.STOPPED, this, this.stopHandler);
       this.skeleton.off(Laya.Event.LABEL,this,this.labelHandler);
       this.skeleton.removeSelf(); */
      Laya.Pool.recover("player", this.owner);
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {}
  }]);

  return Player;
}(PaoYa.Component);

exports.default = Player;

},{"../GameControl":4,"../config/HeroConfig":8}],19:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PlayerSkill = function (_PaoYa$Component) {
    _inherits(PlayerSkill, _PaoYa$Component);

    /** @prop {name:imgBg,tips:"背景图",type:Node} */
    /** @prop {name:lblState,tips:"人物状态",type:Node} */
    function PlayerSkill() {
        _classCallCheck(this, PlayerSkill);

        return _possibleConstructorReturn(this, (PlayerSkill.__proto__ || Object.getPrototypeOf(PlayerSkill)).call(this));
    }

    _createClass(PlayerSkill, [{
        key: "onAwake",
        value: function onAwake() {
            this.tweenText = new Laya.Tween();
            this.tweenImg = new Laya.Tween();
            this.lblState.font = "playerSkill";
        }
    }, {
        key: "setSkillText",
        value: function setSkillText(value) {
            var _this2 = this;

            this.owner.visible = true;
            this.imgBg.alpha = 0;
            /*  console.log(this.imgBg) */
            this.owner.alpha = 1;
            this.lblState.text = value;
            //this.owner.scale(5,5);
            this.lblState.scale(5, 5);
            this.tweenImg.complete();
            this.tweenImg.to(this.imgBg, { alpha: 1 }, 500);
            this.tweenText.to(this.lblState, { scaleX: 1.5, scaleY: 1.5 }, 500, Laya.Ease.backOut, Laya.Handler.create(this, function () {

                _this2.tweenText.to(_this2.owner, { alpha: 0 }, 300, null, Laya.Handler.create(_this2, function () {
                    _this2.owner.visible = false;
                }), 800);
            }));
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.tween && this.tween.destroy();
            this.tween = null;
        }
    }]);

    return PlayerSkill;
}(PaoYa.Component);

exports.default = PlayerSkill;

},{}],20:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
   value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PlayerState = function (_PaoYa$Component) {
   _inherits(PlayerState, _PaoYa$Component);

   /** @prop {name:lblState,tips:"人物状态",type:Node} */
   function PlayerState() {
      _classCallCheck(this, PlayerState);

      return _possibleConstructorReturn(this, (PlayerState.__proto__ || Object.getPrototypeOf(PlayerState)).call(this));
   }

   _createClass(PlayerState, [{
      key: "onAwake",
      value: function onAwake() {
         // this.tween = new Laya.Tween();
      }
   }, {
      key: "setStateText",
      value: function setStateText(value) {
         this.owner.visible = true;
         this.lblState.text = value;
         this.lblState.font = "playerState";
         // this.owner.alpha=1;
         /*  this.tween.complete();
          this.tween.to(this.owner,{alpha:1},1000,null,Laya.Handler.create(this,()=>{
             this.owner.visible=false;
          })); */
         Laya.timer.clear(this, this.hide);
         Laya.timer.once(500, this, this.hide);
      }
   }, {
      key: "hide",
      value: function hide() {
         this.owner.visible = false;
      }
   }, {
      key: "onDisable",
      value: function onDisable() {}
   }, {
      key: "onDestroy",
      value: function onDestroy() {
         /*  this.tween&&this.tween.destroy();
          this.tween=null; */
      }
   }]);

   return PlayerState;
}(PaoYa.Component);

exports.default = PlayerState;

},{}],21:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Skill = function (_PaoYa$Component) {
    _inherits(Skill, _PaoYa$Component);

    /* @prop {name:spSkill,tips:"技能精灵图",type:Node} */
    /* @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    /* @prop {name:lblLockTips,tips:"解锁等级提示",type:Node} */
    function Skill() {
        _classCallCheck(this, Skill);

        return _possibleConstructorReturn(this, (Skill.__proto__ || Object.getPrototypeOf(Skill)).call(this));
    }

    _createClass(Skill, [{
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "clickHandler",
        value: function clickHandler() {
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            this.postNotification(Skill.CLICK, [this.owner.name]);
        }
    }, {
        key: "init",
        value: function init(params) {
            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.centerX = Math.floor(this.ownW / 2);
            this.centerY = Math.floor(this.ownH / 2);
            this.spSkill.texture = "local/common/" + params.skillId + ".png";
            this.maskArea = new Laya.Sprite();
            this.maskArea.texture = "local/common/" + params.skillId + ".png";
            owner.addChild(this.maskArea);

            this.spMask = new Laya.Sprite();
            this.maskArea.mask = this.spMask;

            this.freezeing = false;
            this.maxAngle = 270;
            this.startAngle = -90;
            this.endAngle = -90;
            owner.on(Laya.Event.CLICK, this, this.clickHandler);

            this.cdTime = params.skillCd * 1000;
            if (!params.status) {
                this.lblLockTips.visible = true;
                this.lblLockTips.font = 'weaponNFontT';
                this.lblLockTips.text = "LV." + params.skillUnlock + "\u89E3\u9501";
                this.spShadow.visible = true;
                this.lblLockTips.scale(0.5, 0.5);
                this.owner.disabled = true;
            } else {
                this.spShadow.visible = false;
                this.lblLockTips.visible = false;
            }
        }
    }, {
        key: "setCdTime",
        value: function setCdTime(cdTime) {
            console.warn('修改cd时间:', cdTime);
            //cd 时间
            this.cdTime = cdTime;
        }
    }, {
        key: "startT",
        value: function startT(time) {

            this.spShadow.visible = true;
            this.maskArea.visible = true;
            this.freezeing = true;

            this.beiginTime = new Date().getTime();

            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.centerX, this.centerY, this.ownW, this.startAngle, this.endAngle, "#000000");
            var cdT = time == undefined ? this.cdTime : time;
            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.centerX, this.centerY, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
    }]);

    return Skill;
}(PaoYa.Component);

exports.default = Skill;

Skill.CLICK = "skillClick";

},{"../GameControl":4}],22:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponAniType;
(function (WeaponAniType) {
  WeaponAniType[WeaponAniType["aniRepeat1"] = 43] = "aniRepeat1";
  WeaponAniType[WeaponAniType["aniRepeat2"] = 44] = "aniRepeat2";
  WeaponAniType[WeaponAniType["aniPoison1"] = 45] = "aniPoison1";
  WeaponAniType[WeaponAniType["aniPoison2"] = 46] = "aniPoison2";
  WeaponAniType[WeaponAniType["aniCrit1"] = 47] = "aniCrit1";
  WeaponAniType[WeaponAniType["aniCrit2"] = 48] = "aniCrit2";
  WeaponAniType[WeaponAniType["aniBlood"] = 53] = "aniBlood";
  WeaponAniType[WeaponAniType["aniBlue"] = 54] = "aniBlue";
  WeaponAniType[WeaponAniType["aniReduce"] = 55] = "aniReduce";
  WeaponAniType[WeaponAniType["aniThump1"] = 56] = "aniThump1";
  WeaponAniType[WeaponAniType["aniThump2"] = 57] = "aniThump2";
  WeaponAniType[WeaponAniType["aniFreeze"] = 59] = "aniFreeze";
  WeaponAniType[WeaponAniType["aniThump3"] = 61] = "aniThump3";
  WeaponAniType[WeaponAniType["aniPetrifie"] = 62] = "aniPetrifie";
  WeaponAniType[WeaponAniType["aniHero1"] = 88] = "aniHero1";
  WeaponAniType[WeaponAniType["aniHero2"] = 89] = "aniHero2";
})(WeaponAniType || (WeaponAniType = {}));

var Weapon = function (_PaoYa$Component) {
  _inherits(Weapon, _PaoYa$Component);

  /** @prop {name:imgWeapon,tips:"四个点",type:Node}*/
  /** @prop {name:boxAniWeapon,tips:"武器碰撞动效Box",type:Node}*/
  /** @prop {name:boxAniCollision,tips:"武器碰撞动效",type:Node}*/
  /** @prop {name:boxHpWeapon,tips:"武器的血条",type:Node}*/
  /** @prop {name:imgHpMask,tips:"武器血条mask",type:Node}*/
  /** @prop {name:imgHp,tips:"武器血条图片",type:Node}*/
  /** @prop {name:aniCrit1,tips:"致命特效",type:Node}*/
  /** @prop {name:aniCrit2,tips:"诛心特效",type:Node}*/
  /** @prop {name:aniPoison1,tips:"浸毒特效",type:Node}*/
  /** @prop {name:aniPoison2,tips:"奇毒特效",type:Node}*/
  /** @prop {name:aniRepeat1,tips:"双刃特效",type:Node}*/
  /** @prop {name:aniRepeat2,tips:"影刃特效",type:Node}*/
  /** @prop {name:aniBlood,tips:"嗜血特效",type:Node}*/
  /** @prop {name:aniBlue,tips:"嗜魔特效",type:Node}*/
  /** @prop {name:aniReduce,tips:"气绝特效",type:Node}*/

  /** @prop {name:aniThump1,tips:"重击特效",type:Node}*/
  /** @prop {name:aniThump2,tips:"碎石特效",type:Node}*/
  /** @prop {name:aniThump3,tips:"斩皇特效",type:Node}*/
  /** @prop {name:aniFreeze,tips:"冰心特效",type:Node}*/
  /** @prop {name:aniPetrifie,tips:"石化特效",type:Node}*/
  /** @prop {name:aniHero1,tips:"人物1技能2特效",type:Node}*/
  /** @prop {name:aniHero2,tips:"人物2技能2特效",type:Node}*/

  function Weapon() {
    _classCallCheck(this, Weapon);

    var _this = _possibleConstructorReturn(this, (Weapon.__proto__ || Object.getPrototypeOf(Weapon)).call(this));

    _this.pathsCurvature = [0, 0, 0.0008, 0.0015, 0.0025];
    _this.speedsArr = [0, 680 / 100, 680 / 80, 680 / 100, 680 / 80];
    return _this;
  }

  _createClass(Weapon, [{
    key: "onAwake",
    value: function onAwake() {
      this.tween = new Laya.Tween();

      //添加碰撞体
      var collideSp = new Laya.Sprite();
      this.collideSp = collideSp;
      this.imgWeapon.addChild(collideSp);

      /* 抛物线公式 */
      this.startPos = {
        x: 180,
        y: 450
      };
      this.endPos = {
        x: 1150,
        y: 450
        // X轴Y轴的偏移总量
      };this.driftX = this.endPos.x - this.startPos.x;
      this.driftY = this.endPos.y - this.startPos.y;
    }

    //可能执行多次

  }, {
    key: "onEnable",
    value: function onEnable() {

      this.params = this.owner.params;

      if (this.params.weaponType != 1) {
        this.rotateAngle = 360;
      }
      this.firstAngle = undefined;
      //初始化
      this.imgWeapon.alpha = 1;
      this.imgWeapon.scaleX = 1;
      this.imgWeapon.scaleY = 1;

      this.effectAni = false; //兵器是否在做碰撞动效
      this.boxAniWeapon.visible = false;

      //武器图片 
      this.imgWeapon.skin = "remote/weapons/" + this.params.weaponId + ".png";
      this.weaponAttack = this.params.weaponAttack; //武器攻击力
      this.weaponDurable = this.params.weaponDurable;
      this.owner.zOrder = 100 - this.weaponDurable;
      var imgW = this.imgWeapon.width,
          imgH = this.imgWeapon.height;

      this.imgWeapon.pivot(imgW / 2, imgH / 2); //图片的位置
      var x = this.imgWeapon.x,
          y = this.imgWeapon.y,
          skillX = -Math.floor(imgW / 2);
      this.boxAniWeapon.pos(x, y); //碰撞动效的位置
      this.aniPoison1.pos(x, y);
      this.aniPoison2.pos(skillX, y);
      //  this.boxAniCrit1.pos(x,y);
      this.aniCrit1.pos(x, y);
      this.aniCrit2.pos(skillX + 5, y);
      this.aniRepeat1.pos(skillX + 5, y);
      this.aniRepeat2.pos(skillX + 5, y);

      this.aniBlood.pos(x, y);
      this.aniBlue.pos(x, y);
      this.aniReduce.pos(x, y);
      this.aniThump1.pos(x, y);
      this.aniThump2.pos(x, y);
      this.aniThump3.pos(x, y);
      this.aniPetrifie.pos(x, y);
      this.aniHero1.pos(0, y);
      this.aniHero2.pos(0, y);
      /* this.aniPoison1.play(0,true); */
      this.collideSp.size(Math.floor(imgW * 0.2), imgH);
      var collideW = this.collideSp.width,
          collideH = this.collideSp.height;
      this.collideW = collideW;
      this.collideH = collideH;

      this.collideSp.pivot(collideW / 2, collideH / 2);
      this.collideSp.pos(imgW / 2, imgH / 2);
      //碰撞区域画图显示
      /* this.collideSp.graphics.clear();
      this.collideSp.graphics.drawRect(0, 0, collideW, collideH, '#ff0000'); */

      this.newX = 0;
      this.newY = 0;

      var speed = this.speedsArr[this.params.weaponType]; //代表 像素/帧
      this.speed = speed;
      //根据weaponType不同，运动轨迹不同,造成curvature
      this.curvature = this.pathsCurvature[this.params.weaponType];
      /*
      * 因为经过(0, 0), 因此c = 0
      * 于是：
      * y = a * x*x + b*x;
      * y1 = a * x1*x1 + b*x1;
      * y2 = a * x2*x2 + b*x2;
      * 利用第二个坐标：
      * b = (y2+ a*x2*x2) / x2
      */
      this.b = (this.driftY - this.curvature * this.driftX * this.driftX) / this.driftX;
      this.currentAni = null; //暂存当前的animation
      this.initWeaponInfo();
      //初始化血条状态
      this.initBar();
      this.initSkillEffect(); //兵器技能特效
      Laya.timer.frameLoop(1, this, this.startParabola, [speed]);
    }
  }, {
    key: "initBar",
    value: function initBar() {
      this.originHpW = this.imgHp.width;
      this.originHP = this.curHP = this.weaponDurable;
      this.boxHpWeapon.visible = false;
      this.imgHpMask.width = this.originHpW;
    }
  }, {
    key: "initSkillEffect",
    value: function initSkillEffect() {
      if (this.params.skillEffect) {
        var skillId = this.params.activeSkill.skillId;
        if (WeaponAniType[skillId]) {
          this[WeaponAniType[skillId]].visible = true;
          this[WeaponAniType[skillId]].play(0, true);
          this.currentAni = this[WeaponAniType[skillId]];
        }
      }
    }
  }, {
    key: "stopSkillEffect",
    value: function stopSkillEffect() {
      if (this.params.skillEffect) {
        var skillId = this.params.activeSkill.skillId;
        if (WeaponAniType[skillId]) {
          this[WeaponAniType[skillId]].visible = false;
          this[WeaponAniType[skillId]].stop();
          this.currentAni = null;
        }
      }
    }
  }, {
    key: "initWeaponInfo",
    value: function initWeaponInfo() {
      //暂时这么写  
      if (this.isSelf) {
        this.selfPlayerComp = _GameControl2.default.instance.selfPlayer.comp;
        this.otherPlayerComp = _GameControl2.default.instance.otherPlayer.comp;
        this.owner.scaleX = 1;
        this.startPos = {
          x: 180,
          y: 450
        };
        this.endPos = {
          x: 1150,
          y: 450
        };
      } else {
        this.selfPlayerComp = _GameControl2.default.instance.otherPlayer.comp;
        this.otherPlayerComp = _GameControl2.default.instance.selfPlayer.comp;
        this.owner.scaleX = -1;
        this.startPos = {
          x: 1150,
          y: 450
        };
        this.endPos = {
          x: 180,
          y: 450
        };
      }
      //这个是武器发射的坐标
      this.originX = this.owner.x;
      this.originY = this.owner.y;
      this.diffX = Math.abs(this.originX - this.startPos.x);
      this.beginTime = new Date().valueOf();

      this.weaponPoint = [{
        x: Math.floor(this.originX - this.collideW / 2),
        y: Math.floor(this.originY - this.collideH / 2)
      }, {
        x: Math.floor(this.originX + this.collideW / 2),
        y: Math.floor(this.originY - this.collideH / 2)
      }, {
        x: Math.floor(this.originX + this.collideW / 2),
        y: Math.floor(this.originY + this.collideH / 2)
      }, {
        x: Math.floor(this.originX - this.collideW / 2),
        y: Math.floor(this.originY + this.collideH / 2)
      }];
    }
  }, {
    key: "changeHP",
    value: function changeHP(value) {
      this.boxHpWeapon.visible = true;

      this.curHP += value;
      if (this.curHP <= 0) {
        this.curHP = 0;
        this.imgMask.width = 0;
        return;
      } else if (this.curHP > this.originHP) {
        this.curHP = this.originHP;
      }
      var w = Math.floor(this.curHP / this.originHP * this.originHpW);
      this.imgHpMask.width = w;
    }

    //开始抛物线运动

  }, {
    key: "startParabola",
    value: function startParabola(speed) {
      var now = new Date().valueOf();
      var x = void 0,
          y = void 0,
          curAngle = void 0;

      x = Math.floor((now - this.beginTime) * 0.06 * speed) + this.diffX;
      y = Math.floor(this.curvature * x * x + this.b * x);
      curAngle = Math.floor(x / this.driftX * 720);
      this.doMove(x, y, curAngle);
    }
  }, {
    key: "stopParabola",
    value: function stopParabola() {
      //console.log("清除定时器");
      Laya.timer.clear(this, this.startParabola);
    }
    //暂停动画

  }, {
    key: "pause",
    value: function pause() {
      Laya.timer.clear(this, this.startParabola);
      this.pauseTime = new Date().valueOf();
      this.playedTime = this.pauseTime - this.beginTime;
      this.currentAni && this.currentAni.stop();
    }
    //恢复动画

  }, {
    key: "resume",
    value: function resume() {
      var speed = this.speed;
      this.beginTime = new Date().valueOf() - this.playedTime;
      Laya.timer.frameLoop(1, this, this.startParabola, [speed]);
      this.currentAni && this.currentAni.play(0, true);
    }
    //运动

  }, {
    key: "doMove",
    value: function doMove(x, y, curAngle) {
      var _this2 = this;

      if (this.isSelf) {
        this.newX = this.startPos.x + x;
      } else {
        this.newX = this.startPos.x - x;
      }

      this.newY = this.originY + y;

      this.owner.x = this.newX;
      this.owner.y = this.newY;
      if (this.firstAngle == undefined) {
        this.firstAngle = this.getDegreeByPos(x, y, this.newX, this.newY);
      }
      if (this.params.weaponType != 1) {
        this.imgWeapon.rotation = this.firstAngle + curAngle;
      } else {
        this.imgWeapon.rotation = this.getDegreeByPos(x, y, this.newX, this.newY);
      }

      // 
      this.refreshWeaponPoint(this.newX, this.newY);
      if (this.newX > 1334 || this.newY > 750 || this.newX < 0) {
        this.endMove();
        return;
      }
      if (this.doPolygonsIntersect(this.weaponPoint, this.otherPlayerComp.collidePoint)) {
        // console.error(this.weaponPoint, this.otherPlayerComp.collidePoint)
        /*     let sprite=new Laya.Sprite();
            GameControl.instance.owner.addChild(sprite);
            sprite.pos(this.weaponPoint[0].x,this.weaponPoint[0].y)
            sprite.size(this.collideW,this.collideH)
            sprite.graphics.clear();
            sprite.graphics.drawRect(0,0,this.collideW,this.collideH,"yellow")
            sprite.zOrder=10000;
            sprite.rotation=this.imgWeapon.rotation */
        this.postNotification('collide');
        //如果对方闪避状态，无敌
        if (this.otherPlayerComp.dodge) {
          console.error('无敌状态');
          return;
        }
        //如果roleId=4,会20%反弹兵器。不会受到暴击。
        //let targetName=this.isSelf?'other':'self';
        if (this.otherPlayerComp.attr.roleId == 4) {
          var random = Math.ceil(Math.random() * 100);
          var reboundRate = this.selfPlayerComp.attr.skills[1].skillConfig.reboundRate;
          if (random <= reboundRate) {
            //反弹提示
            this.otherPlayerComp.showPlayerState("游龙入水");
            this.goBack();
            return;
          }
        }
        //如果是roleId是2
        if (this.selfPlayerComp.attr.roleId == 2) {
          console.error('我是龙儿');
          if (this.selfPlayerComp.attr.skills[1].skillType == 1) {
            var addHitRecoverMp = this.selfPlayerComp.attr.skills[1].skillConfig.addHitRecoverMp;
            this.selfPlayerComp.MPComp.changeMP(addHitRecoverMp);
          }
        }
        this.endMove();
        var skill = this.params.activeSkill;
        var skillEffect = this.params.skillEffect;

        var _calcAttackNum = this.calcAttackNum(skillEffect),
            attackNum = _calcAttackNum.attackNum,
            isCrit = _calcAttackNum.isCrit;

        if (skillEffect) {
          var skillConfig = skill.skillConfig,
              skillId = skill.skillId;
          //this.otherPlayerComp.injuredEffect(this.params.weaponType,-attackNum);
          switch (skillId) {
            case 45:
            case 46:
              var arr = skillConfig.poison.split('-').map(Number);
              var time = arr[0];
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.poisonEffect(time * 1000, -arr[1] / time);
              });

              break;
            //麻痹和冰冻一个效果 指的是skeleton
            case 49:
            case 50:
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.palsyEffect(skillConfig.mabi * 1000);
              });
              break;
            case 53:
              var stealHp = skillConfig.stealHp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.selfPlayerComp.hpRecoverEffect(attackNum * stealHp); //数值暂定，要算
              });
              break;
            case 54:
              var stealMp = skillConfig.stealMp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.selfPlayerComp.mpRecoverEffect(attackNum * stealMp);
              });
              break;
            case 55:
              var recoverDown = skillConfig.recoverDown.split('-').map(Number);
              var recoverDownT = recoverDown[0],
                  recoverDownPer = recoverDown[1];
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, null, null);
              this.otherPlayerComp.changePerMp(recoverDownT * 1000, recoverDownPer);
              break;
            case 59:
              var freezeTime = skillConfig.freeze * 1000;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.freezedEffect(freezeTime);
              });
              break;
            case 89:
              console.error('释放人物技能89,让对方内力减少100点');
              var downMP = skillConfig.downMp;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, null, null);
              this.otherPlayerComp.MPComp.changeMP(-downMP);
              break;
            //命中后对手晕眩2秒
            case 90:
              var dizzyT = skillConfig.dizziness * 1000;
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum, isCrit, function () {
                _this2.otherPlayerComp.dizzyEffect(dizzyT);
              });
              break;
            default:
              this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum);
              break;
          }
        } else {
          this.otherPlayerComp.injuredEffect(this.params.weaponType, -attackNum);
        }
      }

      if (this.isSelf) {
        this.collideWithWeapon();
      }
    }
    /* 
        伤害公式=兵器攻击力*（攻击方臂力-防御方根骨）/攻击方臂力*[暴伤百分比]*[1+兵器炼器伤害加成百分比]*[1+英雄技能伤害加成百分比]*（1-防御方炼器减伤百分比）*兵器技能伤害百分比
    [暴伤百分比]=角色自身暴伤百分比+兵器技能附加暴伤百分比+兵器炼器暴伤百分比
    */

  }, {
    key: "calcAttackNum",
    value: function calcAttackNum(skillEffect) {
      var randomNum = Math.floor(Math.random() * 100 + 1);
      console.error('暴击百分比', this.selfPlayerComp.attr.calcCritProb);
      var selfAttr = this.selfPlayerComp.attr,
          otherAttr = this.otherPlayerComp.attr,
          selfStrength = selfAttr.roleStrength,
          //臂力
      roleCritHarm = selfAttr.calcCritProb,
          selfCritHarm = randomNum < roleCritHarm ? selfAttr.roleCritHarm / 100 : 1,
          otherBone = otherAttr.roleBone,
          otherStrength = otherAttr.roleStrength,
          skillHurtMulti = 1;
      if (skillEffect) {
        console.error('触发技能伤害，有莫有伤害倍数不知道');
        skillHurtMulti = this.params.activeSkill.skillConfig.hurt ? this.params.activeSkill.skillConfig.hurt : 1;
      }
      var attackNum = Math.floor(this.weaponAttack * (selfStrength - otherBone) / otherStrength * selfCritHarm * skillHurtMulti);
      return {
        attackNum: attackNum,
        isCrit: randomNum < 100
      };
    }
    //兵器反弹

  }, {
    key: "goBack",
    value: function goBack() {
      this.isSelf = !this.isSelf;
      this.initWeaponInfo();
    }
    //根据抛物线的点求角度和计算矩形四个位置

  }, {
    key: "getDegreeByPos",
    value: function getDegreeByPos(x, y, newX, newY) {
      var ratio = 2 * this.curvature * x + this.b;
      var degree = Math.round(180 * Math.atan(ratio) / Math.PI);
      return degree;
    }
  }, {
    key: "refreshWeaponPoint",
    value: function refreshWeaponPoint(newX, newY) {
      var ratio = this.imgWeapon.rotation * Math.PI / 360;;
      this.weaponPoint = this.CalcCoord(newX, newY, this.collideW, this.collideH, ratio);
    }

    /* 
    x2 = x0+(x-x0)*cos(theta)+(y-y0)*sin(theta)
    y2 = y0-(x-x0)*sin(theta)+(y-y0)*cos(theta)
    (x0,y0) is the center around which you are rotating
    */
    //根据旋转角度求   

  }, {
    key: "CalcCoord",
    value: function CalcCoord(centerX, centerY, rw, rh, radians) {
      var x1 = -rw / 2 + centerX,
          x2 = rw / 2 + centerX,
          x3 = rw / 2 + centerX,
          x4 = -rw / 2 + centerX,
          y1 = -rh / 2 + centerY,
          y2 = -rh / 2 + centerY,
          y3 = rh / 2 + centerY,
          y4 = rh / 2 + centerY;

      var x11 = (x1 - centerX) * Math.cos(radians) - (y1 - centerY) * Math.sin(radians) + centerX,
          y11 = (x1 - centerX) * Math.sin(radians) + (y1 - centerY) * Math.cos(radians) + centerY,
          x21 = (x2 - centerX) * Math.cos(radians) - (y2 - centerY) * Math.sin(radians) + centerX,
          y21 = (x2 - centerX) * Math.sin(radians) + (y2 - centerY) * Math.cos(radians) + centerY,
          x31 = (x3 - centerX) * Math.cos(radians) - (y3 - centerY) * Math.sin(radians) + centerX,
          y31 = (x3 - centerX) * Math.sin(radians) + (y3 - centerY) * Math.cos(radians) + centerY,
          x41 = (x4 - centerX) * Math.cos(radians) - (y4 - centerY) * Math.sin(radians) + centerX,
          y41 = (x4 - centerX) * Math.sin(radians) + (y4 - centerY) * Math.cos(radians) + centerY;
      return [{
        x: Math.round(x11),
        y: Math.round(y11)
      }, {
        x: Math.round(x21),
        y: Math.round(y21)
      }, {
        x: Math.round(x31),
        y: Math.round(y31)
      }, {
        x: Math.round(x41),
        y: Math.round(y41)
      }];
    }
  }, {
    key: "collideWithWeapon",
    value: function collideWithWeapon() {
      //GameControl.instance.selfWeapons.forEach((weaponComp,index)=>{
      for (var i = 0; i < _GameControl2.default.instance.otherWeapons.length; i++) {
        var otherWeapon = _GameControl2.default.instance.otherWeapons[i];
        if (!this.effectAni && !otherWeapon.effectAni && this.weaponType == otherWeapon.weaponType) {
          if (this.doPolygonsIntersect(this.weaponPoint, otherWeapon.weaponPoint)) {
            /*   console.log(this.owner.x);
              console.log(this.weaponPoint,otherWeapon.weaponPoint)
              let sprite=new Laya.Sprite();
              GameControl.instance.owner.addChild(sprite);
              sprite.pos(this.weaponPoint[0].x,this.weaponPoint[0].y)
              sprite.size(this.collideW,this.collideH)
              sprite.graphics.clear();
              sprite.graphics.drawRect(0,0,this.collideW,this.collideH,"yellow")
              this.stopParabola();
              otherWeapon.stopParabola()
              return; */
            this.postNotification('weaponsCollide');
            if (this.weaponDurable > otherWeapon.weaponDurable) {
              otherWeapon.playWeaponCollideEffect();
              this.weaponDurable -= otherWeapon.weaponDurable;
              this.owner.zOrder = 100 - this.weaponDurable;
              this.changeHP(-otherWeapon.weaponDurable);
              i -= 1;
            } else if (this.weaponDurable < otherWeapon.weaponDurable) {
              this.playWeaponCollideEffect();
              otherWeapon.weaponDurable -= this.weaponDurable;
              otherWeapon.owner.zOrder = 100 - this.weaponDurable;
              otherWeapon.changeHP(-this.weaponDurable);
              break;
              // i-=1;
            } else {
              this.playWeaponCollideEffect();
              otherWeapon.endMove();
              break;
            }
          }
        }
      }
    }
  }, {
    key: "playWeaponCollideEffect",
    value: function playWeaponCollideEffect() {
      var _this3 = this;

      this.boxAniWeapon.visible = true;
      this.boxHpWeapon.visible = false;
      this.effectAni = true;
      // this.imgWeapon.visible=false;
      //兵器上带技能的隐藏
      this.stopSkillEffect();
      this.stopParabola();
      this.tween.to(this.imgWeapon, {
        scaleX: 1.5,
        scaleY: 1.5,
        alpha: 0.3
      }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
        // console.log('变大效果播放完', new Date().getTime());
        _this3.endMove();
      }));
      this.boxAniCollision.play(0, false);
    }
  }, {
    key: "doPolygonsIntersect",
    value: function doPolygonsIntersect(a, b) {
      var polygons = [a, b];
      var minA, maxA, projected, i, i1, j, minB, maxB;

      for (i = 0; i < polygons.length; i++) {

        // for each polygon, look at each edge of the polygon, and determine if it separates
        // the two shapes
        var polygon = polygons[i];
        for (i1 = 0; i1 < polygon.length; i1++) {

          // grab 2 vertices to create an edge
          var i2 = (i1 + 1) % polygon.length;
          var p1 = polygon[i1];
          var p2 = polygon[i2];

          // find the line perpendicular to this edge
          var normal = {
            x: p2.y - p1.y,
            y: p1.x - p2.x
          };

          minA = maxA = undefined;
          // for each vertex in the first shape, project it onto the line perpendicular to the edge
          // and keep track of the min and max of these values
          for (j = 0; j < a.length; j++) {
            projected = normal.x * a[j].x + normal.y * a[j].y;
            if (!minA || projected < minA) {
              minA = projected;
            }
            if (!maxA || projected > maxA) {
              maxA = projected;
            }
          }

          // for each vertex in the second shape, project it onto the line perpendicular to the edge
          // and keep track of the min and max of these values
          minB = maxB = undefined;
          for (j = 0; j < b.length; j++) {
            projected = normal.x * b[j].x + normal.y * b[j].y;
            if (!minB || projected < minB) {
              minB = projected;
            }
            if (!maxB || projected > maxB) {
              maxB = projected;
            }
          }

          // if there is no overlap between the projects, the edge we are looking at separates the two
          // polygons, and we know there is no overlap
          if (maxA < minB || maxB < minA) {
            //   console.log("polygons don't intersect!");
            return false;
          }
        }
      }
      return true;
    }
  }, {
    key: "endMove",
    value: function endMove() {
      this.stopSkillEffect();
      this.stopParabola();
      this.owner.removeSelf();
      _GameControl2.default.instance.removeWeapon(this);
    }
  }, {
    key: "onDisable",
    value: function onDisable() {
      Laya.Pool.recover("weapon", this.owner);
    }
  }, {
    key: "onDestroy",
    value: function onDestroy() {}
  }]);

  return Weapon;
}(PaoYa.Component);

exports.default = Weapon;

},{"../GameControl":4}],23:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameControl = require("../GameControl");

var _GameControl2 = _interopRequireDefault(_GameControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponBar = function (_PaoYa$Component) {
    _inherits(WeaponBar, _PaoYa$Component);

    /** @prop {name:spWeapon,tips:"武器图片",type:Node} */
    /** @prop {name:imgQuality,tips:"代表武器品质的背景",type:Node} */
    /** @prop {name:spShadow,tips:"阴影遮罩",type:Node} */
    /** @prop {name:imgType,tips:"武器类型图片",type:Node} */
    /** @prop {name:lblGrade,tips:"武器等级",type:Node} */
    /** @prop {name:boxAniWarn,tips:"animation box",type:Node} */
    /** @prop {name:aniWarn,tips:"冷却完发光animation",type:Node} */
    function WeaponBar() {
        _classCallCheck(this, WeaponBar);

        return _possibleConstructorReturn(this, (WeaponBar.__proto__ || Object.getPrototypeOf(WeaponBar)).call(this));
    }

    _createClass(WeaponBar, [{
        key: "onAwake",
        value: function onAwake() {
            /*   console.log("WeaponBar awake.....")
              console.log(this.owner.params); */
            // this.params=this.owner.params;

            //初始化数值。冷却时间
            var owner = this.owner;
            this.ownW = owner.width;
            this.ownH = owner.height;
            this.boxAniWarn.pos(this.ownW / 2, this.ownH / 2);
            // this.aniWarn.play(0,true)
            owner.on(Laya.Event.CLICK, this, this.clickHandler);

            this.spMask = new Laya.Sprite();
            this.maskArea = new Laya.Sprite();

            this.maskArea.texture = "remote/game/frameBg.png";

            owner.addChild(this.maskArea);
            this.maskArea.mask = this.spMask;
            this.maskArea.visible = false;

            this.maxAngle = 270;
            this.endAngle = -90;
            this.startAngle = -90;
            this.freezeing = false;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.cdTime = this.params.weaponCd * 1000;
            this.originCdTime = this.cdTime;

            this.weaponConsume = this.params.weaponConsume; //使用一次要消耗的体力值

            this.initView();
        }
        //根据武器参数，初始化视图

    }, {
        key: "initView",
        value: function initView() {
            var skin = "remote/small_weapons/s_" + this.params.weaponId + ".png";
            this.spWeapon.texture = skin;
            this.maskArea.graphics.drawTexture(Laya.loader.getRes(skin), 0, 0, this.ownW, this.ownH);
            this.imgQuality.skin = "remote/game/quality_" + this.params.weaponStar + ".png";
            this.imgType.skin = "remote/game/type_" + this.params.weaponType + ".png";
            if (this.params.weaponLevel) {
                this.lblGrade.text = "LV." + this.params.weaponLevel;
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "clickHandler",
        value: function clickHandler(e) {
            if (!_GameControl2.default.instance.selfPlayer.comp.canAction || _GameControl2.default.instance.selfPlayer.comp.dodge) {
                _GameControl2.default.instance.showTips("无法行动");
                return;
            }
            if (this.freezeing) {
                _GameControl2.default.instance.showTips("技能未冷却");
                return;
            }
            console.error('传出去的武器攻击值:', this.params.weaponAttack);
            this.postNotification(WeaponBar.CLICK, [this]);
        }
    }, {
        key: "setCdTime",
        value: function setCdTime(cdTime) {
            console.warn('修改cd时间:', cdTime);
            //cd 时间
            this.cdTime = cdTime;
        }
    }, {
        key: "drawTexture",
        value: function drawTexture(skin) {
            this.maskArea.graphics.drawTexture(Laya.loader.getRes(skin), 0, 0, this.ownW, this.ownH);
        }
        //所谓冷却是一种障眼法

    }, {
        key: "startT",
        value: function startT(time) {
            if (this.cdTime == 0) {
                console.error('冷却免疫');
                return;
            }
            this.spShadow.visible = true;
            this.maskArea.visible = true;
            this.freezeing = true;

            this.beiginTime = new Date().getTime();

            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
            var cdT = time == undefined ? this.cdTime : time;

            Laya.timer.frameLoop(1, this, this.startCd, [cdT]);
        }
    }, {
        key: "startCd",
        value: function startCd(time) {
            //  console.log("时间间隔：",this.frameCd);
            if (this.endAngle >= this.maxAngle) {
                this.endCD();
                this.aniWarn.play(0, false);
                return;
            }
            this.endAngle += Laya.timer.delta * 360 / time;
            this.spMask.graphics.clear();
            this.spMask.graphics.drawPie(this.ownW / 2, this.ownH / 2, this.ownW, this.startAngle, this.endAngle, "#000000");
        }
        //暂停cd

    }, {
        key: "pause",
        value: function pause() {
            this.freezeing && Laya.timer.clear(this, this.startCd);
        }
        //恢复cd

    }, {
        key: "resume",
        value: function resume() {
            this.freezeing && Laya.timer.frameLoop(1, this, this.startCd, [this.cdTime]);
        }
    }, {
        key: "endCD",
        value: function endCD() {
            Laya.timer.clearAll(this);
            this.maskArea.visible = false;
            this.spShadow.visible = false;
            this.freezeing = false;
            this.endAngle = -90;
        }
        //

    }, {
        key: "onDestroy",
        value: function onDestroy() {}
    }]);

    return WeaponBar;
}(PaoYa.Component);

exports.default = WeaponBar;

WeaponBar.CLICK = "weanponBarClick";

},{"../GameControl":4}],24:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponSkill = function (_PaoYa$Component) {
    _inherits(WeaponSkill, _PaoYa$Component);

    /** @prop {name:lblWeaponSkill,tips:"兵器技能",type:Node} */
    function WeaponSkill() {
        _classCallCheck(this, WeaponSkill);

        return _possibleConstructorReturn(this, (WeaponSkill.__proto__ || Object.getPrototypeOf(WeaponSkill)).call(this));
    }

    _createClass(WeaponSkill, [{
        key: "onAwake",
        value: function onAwake() {
            this.timeLine = new Laya.TimeLine();
            this.lblWeaponSkill.font = "weaponSkill";
            this.timeLine.on(Laya.Event.COMPLETE, this, this.removeSelf);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            var params = this.owner.params;
            var skillName = params.skillName;
            this.lblWeaponSkill.text = skillName;

            var owner = this.owner;
            owner.alpha = 1;
            var targetX = params.isSelf ? 0 : 1170;
            this.timeLine.to(owner, {
                x: targetX
            }, 500, Laya.Ease.backOut, 0).to(owner, {
                alpha: 0
            }, 500);
            this.timeLine.play();
        }
    }, {
        key: "removeSelf",
        value: function removeSelf() {
            this.timeLine.reset();
            this.owner.removeSelf();
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            //对象池回收
            Laya.Pool.recover('weaponSkillBox', this.owner);
        }
    }, {
        key: "onDestroy",
        value: function onDestroy() {
            this.timeLine && this.timeLine.destroy();
            this.timeLine = null;
        }
    }]);

    return WeaponSkill;
}(PaoYa.Component);

exports.default = WeaponSkill;

},{}],25:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _LoadingView = require('./Loading/LoadingView');

var _LoadingView2 = _interopRequireDefault(_LoadingView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameMain = function (_PaoYa$Main) {
	_inherits(GameMain, _PaoYa$Main);

	function GameMain() {
		_classCallCheck(this, GameMain);

		return _possibleConstructorReturn(this, (GameMain.__proto__ || Object.getPrototypeOf(GameMain)).apply(this, arguments));
	}

	_createClass(GameMain, [{
		key: 'setupOthers',
		value: function setupOthers() {}
	}, {
		key: 'setupConfig',
		value: function setupConfig() {
			var resList = [];
			/**添加必要网络资源 */
			/* [
   ].forEach(url => {
   	resList.push(`${PaoYa.DataCenter.CDNURL}${url}`)
   }) */

			/**加载必要首屏界面资源 */
			/* 	let scenes = [
   		
   	]
   	resList = resList.concat(scenes) */
			/**加载游戏界面所需资源 */
			//resList = resList.concat(this.setupGameRes())

			PaoYa.DataCenter.GAMERES = this.setupGameRes();
			//分享地址
			PaoYa.ShareManager.makeShareImageURLHandler = function () {
				return PaoYa.DataCenter.CDNURL + PaoYa.DataCenter.config.game.share_img.randomItem;
			};
		}
	}, {
		key: 'setupLoadingView',
		value: function setupLoadingView(cb) {
			Laya.Scene.load('scenes/common/Loading/LoadWaitingView.scene', Laya.Handler.create(this, function (scene) {
				PaoYa.Navigator.adjustViewPosition(scene);
				Laya.Scene.setLoadingPage(scene);
				Laya.AtlasInfoManager.enable('fileconfig.json', Laya.Handler.create(this, cb));
			}));
		}
	}, {
		key: 'initRootScene',
		value: function initRootScene(launchInfo, isFirstLaunch) {
			PaoYa.ShareManager.isShare = false;
			this.navigator.push("HomeView", {}, null, Laya.Handler.create(this, function () {
				PaoYa.LaunchScreenView.hide();
			}), null);
		}
	}, {
		key: 'onHide',
		value: function onHide(res) {
			if (PaoYa.ShareManager.isShare) {
				return;
			}
			if (PaoYa.navigator.visibleScene.url.indexOf('FBView') >= 0) {
				console.warn("在邀请界面");
				return;
			}
			if (res && res.mode != undefined && res.targetAction != undefined && !(res.mode == "hide" && res.targetAction == 8)) {
				this.socket.sendMessage(PaoYa.Client.LEAVE_ROOM, {});
				Laya.Dialog.manager.closeAll();
				this.navigator.popToRootScene();
			}
		}
	}]);

	return GameMain;
}(PaoYa.Main);

exports.default = GameMain;

},{"./Loading/LoadingView":28}],26:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _HeroConfig = require("../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

var _GameGuideData = require("../../gamescripts/gameGuide/GameGuideData");

var _GameGuideData2 = _interopRequireDefault(_GameGuideData);

var _SpeakMan = require("../../gamescripts/gameGuide/SpeakMan");

var _SpeakMan2 = _interopRequireDefault(_SpeakMan);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var guideContainer = void 0,
    maskArea = void 0,
    interactionArea = void 0,
    hitArea = void 0,
    selfSpeakMan = void 0,
    otherSpeakMan = void 0,
    selfSpeakManComp = void 0,
    otherSpeakManComp = void 0,
    nextLabel = void 0,
    guideStep = 0;

var HomeControl = function (_PaoYa$Component) {
    _inherits(HomeControl, _PaoYa$Component);

    function HomeControl() {
        _classCallCheck(this, HomeControl);

        return _possibleConstructorReturn(this, (HomeControl.__proto__ || Object.getPrototypeOf(HomeControl)).apply(this, arguments));
    }

    _createClass(HomeControl, [{
        key: "onAwake",

        /** @prop {name:lblLadder,tips:"用户段位",type:Node} */
        /** @prop {name:lblName,tips:"用户名字",type:Node} */
        /** @prop {name:selfSpeakMan,tips:"我方解说预制体对象",type:Prefab}*/
        /** @prop {name:otherSpeakMan,tips:"对方解说预制体对象",type:Prefab}*/
        /** @prop {name:aniFinger,tips:"手指动画",type:node}*/
        /** @prop {name:spriteBg,tips:"游戏底图",type:node}*/
        value: function onAwake() {
            var _this2 = this;

            var name = PaoYa.DataCenter.user.defaultRoleId;
            var ladder = PaoYa.DataCenter.user.ladder;
            var player = _HeroConfig2.default.getSkeleton('hero_' + name);
            player.pos(371, 570);
            player.scale(1.5, 1.5);
            this.owner.addChild(player);
            this.player = player;

            this.lblName.text = PaoYa.DataCenter.user.nickname;
            this.lblLadder.font = "weaponNFontT";
            this.lblLadder.scale(0.8, 0.8);
            this.lblLadder.text = _HeroConfig2.default.ladderArr[ladder];

            this.owner.imgAvstar.skin = PaoYa.DataCenter.user.avstar;
            this.onNotification('roleIdChanged', this, function (roleId) {
                if (name != roleId) {
                    name = roleId;
                    var templet = _HeroConfig2.default.spineMap["hero_" + name].templet;
                    _this2.player.init(templet, 0);
                }
            });
            if (PaoYa.DataCenter.user.is_first_game == 1) {
                this.navigator.push('GameGuide', _GameGuideData2.default);
            }
        }
    }, {
        key: "onAppear",
        value: function onAppear() {
            this.player.play('stand', true);
        }
    }, {
        key: "onDisappear",
        value: function onDisappear() {
            this.player.stop();
        }
    }, {
        key: "onClick",
        value: function onClick(e) {
            var _this3 = this;

            switch (e.target.name) {
                //兵器库
                case "btnWeaponHouse":
                    console.log("进入兵器库");
                    this.POST("martial_user_weapon_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this3.navigator.push("WeaponHouse", res);
                    });
                    break;
                //兵器商店
                case "btnWeaponStore":
                    console.log("进入兵器商店");
                    this.POST("martial_shop_list", {
                        refresh: 0
                    }, function (res) {
                        if (!res) {
                            return;
                        }
                        //console.log(res)
                        _this3.POST("martial_user_weapon_list", {}, function (data) {
                            if (!data) {
                                return;
                            }
                            var obj = {
                                buyList: res,
                                sellList: data
                            };
                            _this3.navigator.push("WeaponStore", obj);
                        });
                    });
                    break;
                //炼器
                case "btnRefiner":
                    console.log("进入炼器");
                    this.GET("martial_refiner_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this3.navigator.push("Refining", res);
                    });
                    break;
                //兵器谱
                case "btnWeaponSpectrum":
                    this.GET("martial_weapon_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this3.navigator.push("WeapList", res);
                    });
                    console.log("进入兵器谱");
                    break;
                //英雄库
                case "btnHerosHouse":
                    console.log("进入英雄库");
                    this.goHerosHouse();
                    break;

                //签到
                case "btnRegister":
                    this.GET("martial_login_bonus_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this3.navigator.push("Sign", res);
                    });
                    console.log("打开签到");
                    break;
                //抽奖转盘
                case "btnRoulette":
                    console.log("去抽奖");
                    break;
                //开始游戏：
                case "btnStartGame":
                    console.log("开始游戏请求的数据......");
                    this.goPassGame();
                    break;
                //华山论剑
                case "btnBattle":
                    console.log("华山论剑");
                    this.GET("martial_role_list", {}, function (res) {
                        //console.log(res)
                        if (!res) {
                            return;
                        }
                        _this3.navigator.push("Grading", res);
                    });
                    break;
                //决战紫禁城之巅
                case "btnBoss":
                    console.log("决战");
                    break;
                //排行榜
                case "rank":
                    console.log("进入排行榜");
                    break;
                //玩法
                case "btnPlayRule":
                    console.log("玩法介绍");
                    break;
                //设置
                case "btnTask":
                    console.log("任务");
                    break;

            }
        }
    }, {
        key: "goHerosHouse",
        value: function goHerosHouse() {
            var _this4 = this;

            this.GET("martial_role_list", {}, function (res) {
                //console.log(res)
                if (!res) {
                    return;
                }
                _this4.navigator.push("Swordsman", res);
            });
        }
    }, {
        key: "goPassGame",
        value: function goPassGame() {
            var _this5 = this;

            this.POST("hero_game_start", {
                stageId: 1
            }, function (res) {
                res.gameType = 'pass';
                _this5.navigator.push("GameView", res);
            });
        }
    }, {
        key: "setGuide",
        value: function setGuide() {
            var _this6 = this;

            //引导所在容器
            guideContainer = new Laya.Sprite();
            guideContainer.zOrder = 1000;
            this.owner.addChild(guideContainer);
            guideContainer.cacheAs = 'bitmap';

            // 绘制遮罩区，含透明度，
            maskArea = new Laya.Sprite();
            maskArea.alpha = 0.5;
            maskArea.graphics.drawRect(0, 0, 1634, 750, "#000");
            maskArea.pos(-150, 0);
            maskArea.mouseEnabled = true;
            //maskArea.zOrder=1000;
            guideContainer.addChild(maskArea);

            //绘制可点击区域
            interactionArea = new Laya.Sprite();
            interactionArea.blendMode = 'destination-out';
            // interactionArea.zOrder=1001;
            guideContainer.addChild(interactionArea);

            //可点击区域
            hitArea = new Laya.HitArea();
            hitArea.hit.drawRect(0, 0, 1634, 750, '#000');
            guideContainer.hitArea = hitArea;
            guideContainer.mouseEnabled = true;

            nextLabel = new Laya.Label();
            nextLabel.text = '跳过';
            nextLabel.font = 'figureDetail';
            nextLabel.pos(1100, 30);
            nextLabel.name = 'next';
            nextLabel.mouseEnabled = true;
            console.log(nextLabel.width);
            guideContainer.addChild(nextLabel);

            selfSpeakMan = this.selfSpeakMan.create.call(this.selfSpeakMan);
            selfSpeakManComp = selfSpeakMan.getComponent(_SpeakMan2.default);
            selfSpeakManComp.showWord('阿嚏~~~刚。。刚才是做梦？');
            selfSpeakMan.y = 225;
            selfSpeakMan.zOrder = 1003;
            this.owner.addChild(selfSpeakMan);

            otherSpeakMan = this.otherSpeakMan.create.call(this.otherSpeakMan);
            otherSpeakManComp = otherSpeakMan.getComponent(_SpeakMan2.default);
            otherSpeakMan.pos(315, -127);
            otherSpeakMan.zOrder = 1003;
            this.owner.addChild(otherSpeakMan);
            otherSpeakManComp.modify("\u5973\u5B50");
            otherSpeakMan.visible = false;

            this.owner.on(Laya.Event.CLICK, this, function (e) {
                guideStep += 1;
                switch (guideStep) {
                    case 1:
                    case 2:
                    case 3:
                        _this6['step' + guideStep]();
                        break;
                }
            });
            this.spriteBg.on(Laya.Event.CLICK, this, function (e) {
                guideStep += 1;
                switch (guideStep) {
                    case 4:
                        e.stopPropagation();
                        _this6.step4();
                        break;
                }
                console.log("\u63A5\u6536\u5230\u70B9\u51FB");
            });
            nextLabel.on(Laya.Event.CLICK, this, this.nextTick);
        }
    }, {
        key: "step1",
        value: function step1() {
            selfSpeakMan.visible = false;
            otherSpeakMan.visible = true;
            otherSpeakManComp.showWord("\u6551\u547D\uFF01\u6551\u547D\u554A\uFF01");
        }
    }, {
        key: "step2",
        value: function step2() {
            selfSpeakMan.visible = true;
            otherSpeakMan.visible = false;
            selfSpeakManComp.showWord("\u5927\u767D\u5929\u7684\u8C01\u5728\u558A\u6551\u547D\uFF1F\u53BB\u770B\u770B\u518D\u8BF4\u3002");
        }
    }, {
        key: "step3",
        value: function step3() {
            nextLabel.visible = false;
            selfSpeakMan.visible = false;
            this.aniFinger.visible = true;
            this.aniFinger.play(0, true);
            interactionArea.graphics.clear();
            interactionArea.graphics.drawRect(730, 103, 370, 165, '#000');
            hitArea.unHit.clear();
            hitArea.unHit.drawRect(730, 103, 370, 165, '#000');
        }
    }, {
        key: "step4",
        value: function step4() {
            this.aniFinger.visible = false;
            this.aniFinger.stop();
            interactionArea.graphics.clear();
            guideContainer.removeSelf();
            this.aniFinger.destroy();
            this.goPassGame();
        }
    }, {
        key: "nextTick",
        value: function nextTick(e) {
            e.stopPropagation();
            guideStep += 1;
            this['step' + guideStep]();
        }
    }, {
        key: "onDisappear",
        value: function onDisappear() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "onDestroy",
        value: function onDestroy() {}
    }]);

    return HomeControl;
}(PaoYa.Component);

exports.default = HomeControl;

},{"../../gamescripts/config/HeroConfig":8,"../../gamescripts/gameGuide/GameGuideData":12,"../../gamescripts/gameGuide/SpeakMan":13}],27:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingControl = function (_PaoYa$Component) {
    _inherits(LoadingControl, _PaoYa$Component);

    function LoadingControl() {
        _classCallCheck(this, LoadingControl);

        return _possibleConstructorReturn(this, (LoadingControl.__proto__ || Object.getPrototypeOf(LoadingControl)).apply(this, arguments));
    }

    _createClass(LoadingControl, [{
        key: 'onAwake',

        /** @prop {name:progressView,tips:'',type:Node} */
        /** @prop {name:lblProgress,tips:'',type:Node} */
        /** @prop {name:progressViewBg,tips:'',type:Node} */
        /** @prop {name:type,type:Option,option:"normal,waiting",default:normal}*/
        value: function onAwake() {
            this.type = this.type || 'normal';
            this.owner.on(Laya.Event.PROGRESS, this, this.onProgress);
            if (this.type !== 'normal') {
                var bg = this.progressViewBg;
                bg.graphics.clear();
                bg.graphics.drawPath(0, 0, PaoYa.Utils.makeAllCornerRoundRectPath(bg.width, bg.height, 20), {
                    fillStyle: "#000000"
                });
            }
        }
    }, {
        key: 'onUpdate',
        value: function onUpdate() {
            if (this.type !== 'normal') {
                this.progressView.rotation += 5;
            }
        }
    }, {
        key: 'onProgress',
        value: function onProgress(progress) {
            this.lblProgress.text = Math.ceil(progress * 100) + '%';
            if (this.type == 'normal') {
                var mask = this.progressView.mask;
                mask.graphics.clear();
                mask.graphics.drawRect(0, 0, Math.ceil(this.progressView.width * progress), this.progressView.height, '#ff0000');
            }
        }
    }]);

    return LoadingControl;
}(PaoYa.Component);

exports.default = LoadingControl;

},{}],28:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingView = function (_PaoYa$View) {
    _inherits(LoadingView, _PaoYa$View);

    function LoadingView(type) {
        _classCallCheck(this, LoadingView);

        var _this = _possibleConstructorReturn(this, (LoadingView.__proto__ || Object.getPrototypeOf(LoadingView)).call(this));

        _this.type = type || 'normal';
        _this.on(Laya.Event.PROGRESS, _this, _this.onProgress);
        if (_this.type !== 'normal') {
            Laya.timer.frameLoop(1, _this, _this.onUpdate);
        }
        //on QQ
        var scene = PaoYa.game.launchOption.scene;
        if (window.BK && (scene == 318 || scene == 319) && _this.type == 'normal') {
            _this.lblProgress.visible = false;
            _this.progressView.visible = false;
            _this.imgProgressBg.visible = false;
            _this.lblTips.visible = false;
        }
        return _this;
    }

    _createClass(LoadingView, [{
        key: 'onUpdate',
        value: function onUpdate() {
            if (this.type !== 'normal') {
                this.progressView.rotation += 5;
            }
        }
    }, {
        key: 'onProgress',
        value: function onProgress(progress) {
            this.lblProgress.text = Math.ceil(progress * 100) + '%';
            if (this.type == 'normal') {
                var mask = this.progressView.mask;
                mask.graphics.clear();
                mask.graphics.drawRect(0, 0, Math.ceil(this.progressView.width * progress), this.progressView.height, '#ff0000');
            }
        }
    }]);

    return LoadingView;
}(PaoYa.View);

exports.default = LoadingView;

},{}],29:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameBanner = require('../../../gamescripts/prefab/GameBanner');

var _GameBanner2 = _interopRequireDefault(_GameBanner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MatchControl = function (_PaoYa$Component) {
    _inherits(MatchControl, _PaoYa$Component);

    /** @prop {name:boxGameBanner,tips:'游戏类型Banner',type:Node}*/
    function MatchControl() {
        _classCallCheck(this, MatchControl);

        var _this = _possibleConstructorReturn(this, (MatchControl.__proto__ || Object.getPrototypeOf(MatchControl)).call(this));

        MatchControl.ins = _this;
        return _this;
    }

    _createClass(MatchControl, [{
        key: 'onAwake',
        value: function onAwake() {
            this.params = this.owner.params;
            this.gameBannerComp = this.boxGameBanner.getComponent(_GameBanner2.default);
        }
    }, {
        key: 'onAppear',
        value: function onAppear() {
            var _this2 = this;

            var timerService = new PaoYa.TimerService(1000, 1, true);
            timerService.on(PaoYa.TimerService.PROGRESS, this, function (time) {
                _this2.gameBannerComp.setTimeText('\u7B49\u5F85\u65F6\u95F4:' + time);
            });
            timerService.on(PaoYa.TimerService.STOP, this, function () {
                console.log('停止计时器');
            });
            timerService.start();
            this.timerService = timerService;
            this.owner.startAni();
            var randomTime = (Math.ceil(Math.random() * 5) + 5) * 1000;
            Laya.timer.once(randomTime, this, this.matchOK);
        }
    }, {
        key: 'onClick',
        value: function onClick(e) {
            switch (e.target.name) {
                case 'btnBack':
                    this.timerService.stop();
                    Laya.timer.clearAll(this);
                    this.navigator.pop();
                    break;
            }
        }
        //匹配成功

    }, {
        key: 'matchOK',
        value: function matchOK() {
            var _this3 = this;

            this.owner.matchOK();
            this.timerService.stop();
            Laya.timer.once(500, this, function () {
                _this3.navigator.push("GameView", _this3.params);
            });
        }
    }, {
        key: 'onDisappear',
        value: function onDisappear() {
            this.timerService.stop();
            this.timerService = null;
            this.owner.stopAni();
        }
    }]);

    return MatchControl;
}(PaoYa.Component);

exports.default = MatchControl;

},{"../../../gamescripts/prefab/GameBanner":15}],30:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MatchView = function (_PaoYa$View) {
    _inherits(MatchView, _PaoYa$View);

    function MatchView() {
        _classCallCheck(this, MatchView);

        return _possibleConstructorReturn(this, (MatchView.__proto__ || Object.getPrototypeOf(MatchView)).call(this));
    }

    _createClass(MatchView, [{
        key: 'onAwake',
        value: function onAwake() {
            this.lblTip.font = 'weaponNFontT';
            this.selfLadderName.font = "weaponNFontT";
            this.otherLadderName.font = 'weaponNFontT';
            this.lblTip.scale(0.8, 0.8);
            this.ladderNameArr = ['无名小卒', '初出茅庐', '后起之秀', '江湖少侠', '武林高手', '名震江湖', '独步武林', '一代宗师', '独孤求败'];
            this.initView();
        }
    }, {
        key: 'initView',
        value: function initView() {
            var params = this.params;
            this.selfRoleId = params.role.roleId;
            this.otherRoleId = params.robotRole.roleId;
            this.selfName.text = params.nickName;
            this.selfLadderInfo = this.findLadderById(this.selfRoleId);
            this.otherLadderInfo = this.findLadderById(this.otherRoleId);
            this.selfLadderInfo.texture = 'local/common/badge_' + this.selfLadderInfo.ladderId;
            this.selfLadderName.text = this.selfLadderInfo.ladderName;

            this.resetStar(true);
            this.resetStar(false);
            this.otherStars.visible = false;
        }
    }, {
        key: 'resetStar',
        value: function resetStar(isSelf) {
            var name = isSelf ? 'self' : 'other';
            var ladder = isSelf ? 'ladder' : 'robotLadder';
            if (this.params[ladder] > 8) {
                var sprite = new Laya.Sprite();
                sprite.texture = 'local/common/starLight.png';
                this[name + 'Stars'].addChild(sprite);
                var label = new Laya.Label();
                label.text = '×' + this.params.ladderStar;
                label.fontSize = 30;
                label.height = 56;
                label.valign = 'middle';
                label.color = "#ffffff";
                this[name + 'Stars'].addChild(label);
            } else {
                var star = this.params[ladder + 'Star'];
                var numStar = this[name + 'LadderInfo'].ladderStar;
                for (var i = 0; i < numStar; i++) {
                    var _sprite = new Laya.Sprite();
                    if (i < star) {
                        _sprite.texture = 'local/common/starLight.png';
                    } else {
                        _sprite.texture = 'local/common/starDark.png';
                    }
                    this[name + 'Stars'].addChild(_sprite);
                    console.warn('hbox宽度：' + name, this[name + 'Stars'].width);
                }
            }
            // this[name+'Stars'].centerX=0;
        }
    }, {
        key: 'startAni',
        value: function startAni() {
            var _this2 = this;

            var point = "...";
            var index = 1;
            var ladderIndex = 1;
            var nameIndex = 0;
            Laya.timer.loop(300, this, function () {
                index = index == 4 ? 1 : index + 1;
                ladderIndex = ladderIndex == 9 ? 1 : ladderIndex + 1;
                nameIndex = nameIndex == _this2.ladderNameArr.length - 1 ? 0 : nameIndex + 1;
                point = point == '...' ? '.' : point + '.';
                _this2.lblTip.text = '\u5339\u914D\u6210\u529F,\u53D1\u4FBF\u5F53\u4E2D' + point;
                _this2.otherAvstar.texture = 'local/common/hero_' + index + '.png';
                _this2.otherLadderName.text = _this2.ladderNameArr[nameIndex];
                _this2.otherLadder.texture = 'local/common/badge_' + ladderIndex + '.png';
            });
        }
    }, {
        key: 'matchOK',
        value: function matchOK() {
            this.stopAni();
            this.otherStars.visible = true;
            this.otherName.text = this.params.robotNickName;
            this.otherLadderInfo.texture = 'local/common/badge_' + this.otherLadderInfo.ladderId + '.png';
            this.otherLadderName.text = this.otherLadderInfo.ladderName;
        }
    }, {
        key: 'stopAni',
        value: function stopAni() {
            Laya.timer.clearAll(this);
        }
    }, {
        key: 'findLadderById',
        value: function findLadderById(id) {
            var result = PaoYa.DataCenter.config.hero.ladderList.filter(function (item) {
                return item.id == id;
            });
            return result[0];
        }
    }]);

    return MatchView;
}(PaoYa.View);

exports.default = MatchView;

},{}],31:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GradingControl = require("./GradingControl");

var _GradingControl2 = _interopRequireDefault(_GradingControl);

var _HeroConfig = require("../../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Grading = function (_PaoYa$View) {
    _inherits(Grading, _PaoYa$View);

    function Grading() {
        _classCallCheck(this, Grading);

        return _possibleConstructorReturn(this, (Grading.__proto__ || Object.getPrototypeOf(Grading)).call(this));
    }

    _createClass(Grading, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.benBack.on(Laya.Event.CLICK, this, function () {
                _GradingControl2.default.ins.navigator.pop();
            });

            this.gameStart.on(Laya.Event.CLICK, this, function () {
                _GradingControl2.default.ins.gameRole(_this2.showDetail.roleId);
            });

            this.gameStartTxt.font = "weaponDFont";
            this.gameStartTxt.scale(0.7, 0.7);
            this.gameStartTxt.pos(22, 15);

            this.gradingNum.skin = "local/common/badge_" + this.params.ladder + ".png";

            this.canUseList = [];
            this.params.roleList.forEach(function (element) {
                if (element.roleStatus) {
                    _this2.canUseList.push(element);
                }
            });

            this.canUseList.forEach(function (element) {
                if (element.roleId == _this2.params.defaultRole) {
                    _this2.showDetail = element;
                }
            });

            this.herolist.renderHandler = new Laya.Handler(this, this.figureRender);
            this.herolist.array = this.canUseList;

            if (this.params.ladder == 9) {
                this.starNum.visible = false;
                this.starNum2.visible = true;
                this.starNumTxt.text = "\xD7" + this.params.ladderStar;
                this.starNumTxt.font = "weaponNFontT";
                this.starNumTxt.scale(0.8, 0.8);
            } else {
                this.starNum.visible = true;
                this.starNum2.visible = false;
                var arr = new Array(this.params.ladderFullStar);
                this.starNum.renderHandler = new Laya.Handler(this, this.starNumRender);
                this.starNum.array = arr;

                this.starNum.x = 224 / 7 * (7 - this.params.ladderFullStar) + 121;
            }

            PaoYa.DataCenter.user.config_list.hero.ladderList.forEach(function (element) {
                if (_this2.params.ladder == element.ladderId) {
                    _this2.gradingNum.skin = "local/common/badge_" + element.ladderId + ".png";
                    _this2.gradingname.text = element.ladderName;
                    _this2.gradingname.font = "weaponNFontT";
                    _this2.gradingname.scale(0.8, 0.8);
                    _this2.gradingname.pos(258.5, 470);
                }
            });

            this.initInfo();
        }
    }, {
        key: "changeGold",
        value: function changeGold() {}
        //人物列表渲染

    }, {
        key: "figureRender",
        value: function figureRender(cell, idx) {
            var _this3 = this;

            cell.getChildByName("icon").skin = "local/common/" + cell.dataSource.roleDress + ".png";
            cell.getChildByName("bgwarp").visible = this.showDetail.roleId == cell.dataSource.roleId ? true : false;
            if (this.showDetail.roleId == cell.dataSource.roleId) {
                this.prole = cell;
            }
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _this3.prole.getChildByName("bgwarp").visible = false;
                _this3.prole = cell;
                _this3.showDetail = cell.dataSource;
                _this3.initInfo();
                cell.getChildByName("bgwarp").visible = true;
            });
        }
    }, {
        key: "starNumRender",
        value: function starNumRender(cell, idx) {
            cell.skin = idx + 1 > this.params.ladderStar ? "remote/grading/5.png" : "remote/grading/4.png";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
        //初始化展示信息

    }, {
        key: "initInfo",
        value: function initInfo() {
            if (this.heroSkin) {
                this.heroSkin.stop();
                this.heroSkin.destroy();
                this.heroSkin = null;
            }

            this.heroSkin = _HeroConfig2.default.getSkeleton(this.showDetail.roleDress);
            this.skbox.addChild(this.heroSkin);
            this.heroSkin.pos(100, 400);
            this.heroSkin.scale(1.5, 1.5);
            this.heroSkin.play("stand", true);

            for (var i = 0; i < 5; i++) {
                this["lv" + (i + 1)].visible = false;
                if (i < this.showDetail.roleStar) {
                    this["lv" + (i + 1)].visible = true;
                }
            }

            this.heroname.text = this.showDetail.roleName + "LV." + this.showDetail.roleLevel + "/" + this.showDetail.roleTopLevel;
            this.heroname.font = "weaponNFontT";
            this.heroname.scale(0.8, 0.8);
        }
    }]);

    return Grading;
}(PaoYa.View);

exports.default = Grading;

},{"../../../gamescripts/config/HeroConfig":8,"./GradingControl":32}],32:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GradingControl = function (_PaoYa$Component) {
    _inherits(GradingControl, _PaoYa$Component);

    function GradingControl() {
        _classCallCheck(this, GradingControl);

        var _this = _possibleConstructorReturn(this, (GradingControl.__proto__ || Object.getPrototypeOf(GradingControl)).call(this));

        GradingControl.ins = _this;
        return _this;
    }

    _createClass(GradingControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "gameRole",
        value: function gameRole(e) {
            var _this2 = this;

            this.POST("hero_match_game_start", { roleId: e }, function (res) {
                res.gameType = "battle";
                _this2.navigator.push('MatchView', res);
            });
        }
    }]);

    return GradingControl;
}(PaoYa.Component);

exports.default = GradingControl;

},{}],33:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _SwordsmanControl = require("./SwordsmanControl");

var _SwordsmanControl2 = _interopRequireDefault(_SwordsmanControl);

var _HeroConfig = require("../../../gamescripts/config/HeroConfig");

var _HeroConfig2 = _interopRequireDefault(_HeroConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Swordsman = function (_PaoYa$View) {
    _inherits(Swordsman, _PaoYa$View);

    function Swordsman() {
        _classCallCheck(this, Swordsman);

        return _possibleConstructorReturn(this, (Swordsman.__proto__ || Object.getPrototypeOf(Swordsman)).call(this));
    }

    _createClass(Swordsman, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.params.roleList.forEach(function (element) {
                if (element.roleId == _this2.params.defaultRole) {
                    _this2.showDetail = element;
                }
            });

            this.benBack.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.postNotification("roleIdChanged", _this2.params.defaultRole);
                _SwordsmanControl2.default.ins.navigator.pop();
            });

            this.herolist.renderHandler = new Laya.Handler(this, this.figureRender);
            this.herolist.array = this.params.roleList;

            this.lvupbtnTxt.font = "weaponDFont";
            this.lvupbtnTxt.scale(0.8, 0.8);
            this.lvupbtnTxt.pos(60, 10);
            this.equipbtnTxt.font = "weaponDFont";
            this.equipbtnTxt.scale(0.8, 0.8);
            this.equipbtnTxt.pos(60, 10);
            this.signGetTxt.font = "weaponDFont";
            this.signGetTxt.scale(0.8, 0.8);
            this.signGetTxt.pos(60, 10);
            this.alreadyTxt.font = "weaponDFont";
            this.alreadyTxt.scale(0.8, 0.8);
            this.alreadyTxt.pos(35, 10);

            this.initInfo();
            this.changeGold();

            this.lvupbtn.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.roleLevelUp();
            });

            this.equipbtn.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.changeRole();
            });

            this.buyBtn.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.navigator.popup("figure/BuyHero", _this2.showDetail);
            });

            this.signGet.on(Laya.Event.CLICK, this, function () {
                // SwordsmanControl.ins.navigator.popup("figure/BuyHero",this.showDetail);
            });

            this.skill1.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.showSkillDetail(0);
            });

            this.skill2.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.showSkillDetail(1);
            });

            this.skill3.on(Laya.Event.CLICK, this, function () {
                _SwordsmanControl2.default.ins.showSkillDetail(2);
            });
        }
        //初始化展示信息

    }, {
        key: "initInfo",
        value: function initInfo() {
            var _this3 = this;

            this.skbox.y = 370;
            this.skbox.x = 370;
            if (this.heroSkin) {
                this.heroSkin.stop();
                this.heroSkin.destroy();
                this.heroSkin = null;
            }

            this.heroSkin = _HeroConfig2.default.getSkeleton(this.showDetail.roleDress);
            this.skbox.addChild(this.heroSkin);
            this.heroSkin.pos(100, 400);
            this.heroSkin.scale(1.5, 1.5);
            this.heroSkin.play("stand", true);

            if (this.showDetail.roleId == this.params.defaultRole) {
                this.isUse.visible = true;
            } else {
                this.isUse.visible = false;
            }
            this.speciality.font = "weaponDFont";
            this.speciality.text = this.showDetail.roleDesc;
            switch (this.speciality.text.length) {
                case 2:
                    this.speciality.y = 60;
                    this.speciality.scale(1, 1);
                    this.speciality.x = 20;
                    break;
                case 3:
                    this.speciality.y = 50;
                    this.speciality.scale(0.8, 0.8);
                    this.speciality.x = 25;
                    break;
                case 4:
                    this.speciality.y = 35;
                    this.speciality.scale(0.7, 0.7);
                    this.speciality.x = 30;
                    break;
            }

            for (var i = 0; i < 5; i++) {
                this["lv" + (i + 1)].visible = false;
                if (i < this.showDetail.roleStar) {
                    this["lv" + (i + 1)].visible = true;
                }
            }

            this.showDetail.skills.forEach(function (element, index) {
                _this3["skill" + (index + 1)].skin = "local/common/" + element.skillId + ".png";
                if (element.status) {
                    _this3["skill" + (index + 1)].gray = false;
                    _this3["skill" + (index + 1) + "Txt"].visible = false;
                } else {
                    _this3["skill" + (index + 1)].gray = true;
                    _this3["skill" + (index + 1) + "Txt"].visible = true;
                    _this3["skill" + (index + 1) + "Txt"].text = "LV." + element.skillUnlock + "\u89E3\u9501";
                    _this3["skill" + (index + 1) + "Txt"].font = "weaponNFontT";
                    _this3["skill" + (index + 1) + "Txt"].scale(0.4, 0.4);
                    _this3["skill" + (index + 1) + "Txt"].pos(15, 40);
                }
            });

            this.heroname.text = this.showDetail.roleName + "LV." + this.showDetail.roleLevel + "/" + this.showDetail.roleTopLevel;
            this.heroname.font = "weaponNFontT";
            this.heroname.scale(0.8, 0.8);

            this.hp.text = "\u751F\u547D " + (this.showDetail.roleHp - this.showDetail.roleUpHp);
            this.additionHp.text = "+" + this.showDetail.roleUpHp;

            this.force.text = "\u5185\u529B " + (this.showDetail.roleMp - this.showDetail.roleUpMp);
            this.adddtionForce.text = "+" + this.showDetail.roleUpMp;

            this.muscle.text = "\u81C2\u529B " + (this.showDetail.roleStrength - this.showDetail.roleUpStrength);
            this.additionMuscle.text = "+" + this.showDetail.roleUpStrength;

            this.bone.text = "\u6839\u9AA8 " + (this.showDetail.roleBone - this.showDetail.roleUpBone);
            this.additionBone.text = "+" + this.showDetail.roleUpBone;

            this.critical.text = "\u66B4\u51FB " + this.showDetail.roleCritProb + "%";

            this.hurt.text = "\u7206\u4F24 " + this.showDetail.roleCritHarm;

            this.needGoldNum.font = "weaponNFontT";
            this.needGoldNum.text = this.showDetail.upgradeCost;
            this.needGoldNum.scale(0.8, 0.8);

            this.equipbtn.visible = false;
            this.already.visible = false;
            this.lvupbtn.visible = false;
            this.buyBtn.visible = false;
            this.signGet.visible = false;

            if (this.showDetail.roleStatus) {
                this.lvupbtn.visible = true;
                if (this.showDetail.roleId == this.params.defaultRole) {
                    this.already.visible = true;
                    this.equipbtn.visible = false;
                } else {
                    this.already.visible = false;
                    this.equipbtn.visible = true;
                }
            } else {
                if (this.showDetail.rolePrice) {
                    this.buyBtn.visible = true;
                    this.needDiamon.text = this.showDetail.rolePrice;
                    this.needDiamon.font = "weaponDFont";
                    this.needDiamon.scale(0.8, 0.8);
                    this.needDiamon.y = 10;
                } else {
                    this.signGet.visible = true;
                }
            }

            this.lvupbtn.disabled = this.showDetail.roleLevel >= this.showDetail.roleTopLevel ? true : false;
        }
    }, {
        key: "changeGold",
        value: function changeGold() {
            this.goldNum.text = PaoYa.DataCenter.user.gold;
            this.goldNum.font = "weaponNFontT";
            this.goldNum.scale(0.7, 0.7);
            this.goldNum.pos(381, 20);
            this.diamondNum.text = PaoYa.DataCenter.user.diamond;
            this.diamondNum.font = "weaponNFontT";
            this.diamondNum.scale(0.7, 0.7);
            this.diamondNum.pos(622, 20);
        }
        //人物列表渲染

    }, {
        key: "figureRender",
        value: function figureRender(cell, idx) {
            var _this4 = this;

            console.log(cell.dataSource);
            cell.getChildByName("icon").skin = "local/common/" + cell.dataSource.roleDress + ".png";
            cell.getChildByName("bgwarp").visible = this.showDetail.roleId == cell.dataSource.roleId ? true : false;
            if (this.showDetail.roleId == cell.dataSource.roleId) {
                this.prole = cell;
            }
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _this4.prole.getChildByName("bgwarp").visible = false;
                _this4.prole = cell;
                _this4.showDetail = cell.dataSource;
                _this4.initInfo();
                cell.getChildByName("bgwarp").visible = true;
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return Swordsman;
}(PaoYa.View);

exports.default = Swordsman;

},{"../../../gamescripts/config/HeroConfig":8,"./SwordsmanControl":34}],34:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SwordsmanControl = function (_PaoYa$Component) {
    _inherits(SwordsmanControl, _PaoYa$Component);

    function SwordsmanControl() {
        _classCallCheck(this, SwordsmanControl);

        var _this = _possibleConstructorReturn(this, (SwordsmanControl.__proto__ || Object.getPrototypeOf(SwordsmanControl)).call(this));

        SwordsmanControl.ins = _this;
        return _this;
    }

    _createClass(SwordsmanControl, [{
        key: "onAwake",
        value: function onAwake() {
            this.params = this.owner.params;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "roleLevelUp",
        value: function roleLevelUp() {
            var _this2 = this;

            if (this.owner.showDetail.roleLevel >= this.owner.showDetail.roleTopLevel) {
                return;
            }
            if (Number(this.owner.needGoldNum.text) > Number(this.owner.goldNum.text)) {
                this.navigator.popup("weapon/GoldLack");
                return;
            } else {
                PaoYa.DataCenter.user.gold -= Number(this.owner.needGoldNum.text);
                this.owner.goldNum.text = PaoYa.DataCenter.user.gold;
            }
            PaoYa.Request.POST("martial_update_role", { roleId: this.owner.showDetail.roleId }, function (res) {
                _this2.owner.params.roleList.forEach(function (element) {
                    if (element.roleId == res.role.roleId) {
                        for (var key in element) {
                            element[key] = res.role[key];
                        }
                        _this2.owner.showDetail = element;
                    }
                });
                _this2.owner.initInfo();

                if (res.unlock) {
                    var detail = null;
                    _this2.owner.showDetail.skills.forEach(function (element) {
                        if (element.status) {
                            detail = element;
                        }
                    });

                    _this2.navigator.popup("figure/GetNewSkill", detail);
                }
            });
        }
    }, {
        key: "changeRole",
        value: function changeRole() {
            var _this3 = this;

            PaoYa.Request.POST("martial_change_role", { roleId: this.owner.showDetail.roleId }, function (res) {
                _this3.owner.params.defaultRole = res.roleId;
                _this3.owner.initInfo();
            });
        }
    }, {
        key: "showSkillDetail",
        value: function showSkillDetail(num) {
            var detail = this.owner.showDetail.skills[num];
            if (!detail) {
                return;
            }
            if (detail.status) {
                this.navigator.popup("figure/SkillDetail", detail);
            } else {
                this.navigator.popup("figure/SkillDetail", detail);
            }
        }
    }]);

    return SwordsmanControl;
}(PaoYa.Component);

exports.default = SwordsmanControl;

},{}],35:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DevourControl = require("./DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Devour = function (_PaoYa$View) {
    _inherits(Devour, _PaoYa$View);

    function Devour() {
        _classCallCheck(this, Devour);

        return _possibleConstructorReturn(this, (Devour.__proto__ || Object.getPrototypeOf(Devour)).call(this));
    }

    _createClass(Devour, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.benBack.on(Laya.Event.CLICK, this, function () {
                _DevourControl2.default.ins.navigator.pop();
            });

            this.eatBtn.on(Laya.Event.CLICK, this, function () {
                _DevourControl2.default.ins.eatWp();
            });

            this.choiceBtn.on(Laya.Event.CLICK, this, function () {
                _DevourControl2.default.ins.chiocethreeWp();
            });

            this.warehouseList.vScrollBarSkin = "";
            this.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);

            this.goldNum.text = PaoYa.DataCenter.user.gold;
            this.goldNum.font = "weaponNFontT";
            this.goldNum.scale(0.7, 0.7);
            this.goldNum.pos(381, 20);
            this.diamondNum.text = PaoYa.DataCenter.user.diamond;
            this.diamondNum.font = "weaponNFontT";
            this.diamondNum.scale(0.7, 0.7);
            this.diamondNum.pos(622, 20);

            this.title.text = this.params.refiner.refinerName;
            this.title.font = "weaponDFont";
            this.title.scale(0.8, 0.8);
            this.title.x = (411 - this.title.width) / 2;

            this.detail.text = this.params.refiner.refinerDesc;

            this.next.font = "weaponDFont";
            this.next.scale(0.6, 0.6);

            this.choiceTxt.font = "weaponDFont";
            this.choiceTxt.scale(0.6, 0.6);
            this.choiceTxt.pos(40, 13);

            this.eatTxt.font = "weaponDFont";
            this.eatTxt.scale(0.6, 0.6);
            this.eatTxt.pos(40, 13);

            _DevourControl2.default.ins.getWareList();
            this.initInfo();
        }
    }, {
        key: "initInfo",
        value: function initInfo() {
            this.pLv.text = "LV." + this.params.refiner.refinerLevel;
            this.pLv.font = "weaponDFont";
            this.pLv.scale(0.55, 0.55);
            this.pLv.pos(28, 20);

            var arr = this.params.refiner.refinerEffect.split("+");
            this.pd.text = arr[0];
            this.add.x = this.pd.width + 35;
            this.add.text = "+" + this.params.refiner.refinerBasics.show;

            var arrr = this.params.nextRefiner.refinerEffect.split("+");
            this.pnd.text = arrr[0];
            this.pnadd.x = this.pnd.width + 35;
            this.pnadd.text = "+" + this.params.nextRefiner.refinerBasics.show;

            this.curryExp.width = this.params.refiner.currentExp / this.params.refiner.currentFullExp * 224;
            this.nextExp.width = this.params.refiner.currentExp / this.params.refiner.currentFullExp * 224;
        }
    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, index) {
            _DevourControl2.default.ins.childList.push(cell);
            _DevourControl2.default.ins.singleWeapon(cell, index);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _DevourControl2.default.ins.chioceWp(cell, index);
            });
        }
    }]);

    return Devour;
}(PaoYa.View);

exports.default = Devour;

},{"./DevourControl":36}],36:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DevourControl = function (_PaoYa$Component) {
    _inherits(DevourControl, _PaoYa$Component);

    function DevourControl() {
        _classCallCheck(this, DevourControl);

        var _this = _possibleConstructorReturn(this, (DevourControl.__proto__ || Object.getPrototypeOf(DevourControl)).call(this));

        DevourControl.ins = _this;
        _this.willBeEatList = [];
        return _this;
    }

    _createClass(DevourControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "getWareList",
        value: function getWareList() {
            var _this2 = this;

            this.lightList = this.owner.params.lightList;
            this.heavyList = this.owner.params.heavyList;
            this.middleList = this.owner.params.middleList;
            this.allList = this.lightList.concat(this.heavyList, this.middleList);

            this.myUserList = [];
            var arr = this.owner.params.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });

            this.showWareList(this.allList);
        }

        //仓库展示列表

    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            var unShowWeap = JSON.parse(JSON.stringify(this.myUserList));
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < unShowWeap.length; i++) {
                    if (element.weaponId == unShowWeap[i].name && element.weaponLevel == unShowWeap[i].lv) {
                        element.num -= 1;
                    }
                }

                for (var _i = 0; _i < element.num; _i++) {
                    var obj = JSON.parse(JSON.stringify(element));
                    obj.WpGrade = obj.weaponStar * 100 + obj.weaponLevel;
                    arr.push(obj);
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUsingWp && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }
            arr.sort(function (a, b) {
                return a.WpGrade - b.WpGrade;
            });
            this.isWareChoiceWp = null;
            this.newAllArr = arr;
            this.childList = [];
            this.owner.warehouseList.array = arr;
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }
        //是否选中操作

    }, {
        key: "chioceWp",
        value: function chioceWp(cell, index) {
            if (cell._dataSource.willBeEat) {
                var _num = null;
                this.newAllArr[index].ischiocedd = false;
                this.willBeEatList.forEach(function (element, idx) {
                    if (element == index) {
                        _num = idx;
                    }
                });
                this.willBeEatList.splice(_num, 1);
                cell._dataSource.willBeEat = false;
                cell.getChildByName("beChioce").visible = false;
            } else {
                if (this.willBeEatList.length > 2) {
                    return;
                }
                this.newAllArr[index].ischiocedd = true;
                this.willBeEatList.push(index);
                cell._dataSource.willBeEat = true;
                cell.getChildByName("beChioce").visible = true;
            }

            var num = 0;
            this.childList.forEach(function (element, index) {
                if (element._dataSource.willBeEat) {
                    num += element._dataSource.exp;
                }
            });

            this.owner.curryExp.width = this.owner.nextExp.width + num / this.owner.params.refiner.currentFullExp * 224 > 224 ? 224 : this.owner.nextExp.width + num / this.owner.params.refiner.currentFullExp * 224;
        }
        //吞噬

    }, {
        key: "eatWp",
        value: function eatWp(e) {
            var _this3 = this;

            if (this.willBeEatList.length < 1) {
                return;
            }

            var idlist = "";
            var isHigh = false,
                highDeatil = void 0;
            var addexp = 0;
            this.willBeEatList.forEach(function (element) {
                if (_this3.newAllArr[element].weaponStar == 3 && !e) {
                    isHigh = true;
                    highDeatil = _this3.newAllArr[element];
                }
                addexp += _this3.newAllArr[element].exp;
                idlist = "" + idlist + _this3.newAllArr[element].weaponId + "-" + _this3.newAllArr[element].weaponLevel + ",";
            });

            if (isHigh) {
                var obj = {
                    detail: highDeatil,
                    type: "refining"
                };
                this.navigator.popup("weapon/StoreSure", obj);
                return;
            }

            PaoYa.Request.POST("martial_update_refiner", { weaponId: idlist, refinerId: this.owner.params.refiner.id, addExp: addexp }, function (res) {
                _this3.owner.params.refiner = res.refiner;
                _this3.owner.params.nextRefiner = res.nextRefiner;
                _this3.owner.initInfo();
                var arr2 = [];
                _this3.newAllArr.forEach(function (element, idx) {
                    if (!element.ischiocedd) {
                        arr2.push(element);
                    }
                });
                _this3.willBeEatList = [];
                _this3.childList = [];
                _this3.newAllArr = arr2;
                _this3.owner.warehouseList.array = arr2;
            });
        }
        //一键选中

    }, {
        key: "chiocethreeWp",
        value: function chiocethreeWp() {
            var _this4 = this;

            this.childList.forEach(function (element, index) {
                if (element._dataSource.willBeEat) {
                    _this4.chioceWp(element, index);
                }
            });

            for (var i = 0; i < 3; i++) {
                if (this.childList[i]) {
                    this.chioceWp(this.childList[i], i);
                }
            }
        }
    }]);

    return DevourControl;
}(PaoYa.Component);

exports.default = DevourControl;

},{}],37:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RefiningControl = require("./RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Refining = function (_PaoYa$View) {
    _inherits(Refining, _PaoYa$View);

    function Refining() {
        _classCallCheck(this, Refining);

        return _possibleConstructorReturn(this, (Refining.__proto__ || Object.getPrototypeOf(Refining)).call(this));
    }

    _createClass(Refining, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.benBack.on(Laya.Event.CLICK, this, function () {
                _RefiningControl2.default.ins.navigator.pop();
            });

            this.figure.on(Laya.Event.CLICK, this, function () {
                if (_this2.figureD.visible) {
                    return;
                }
                _this2.figure.skin = "remote/refining/4.png";
                _this2.weopon.skin = "remote/refining/5.png";

                _this2.figureD.visible = true;
                _this2.weoponD.visible = false;
            });

            this.weopon.on(Laya.Event.CLICK, this, function () {
                if (_this2.weoponD.visible) {
                    return;
                }
                _this2.figure.skin = "remote/refining/2.png";
                _this2.weopon.skin = "remote/refining/3.png";

                _this2.figureD.visible = false;
                _this2.weoponD.visible = true;
            });

            this.params.refiner_list.forEach(function (element) {
                _this2[element.id + "Txt"].text = element.refinerName;
                _this2[element.id + "Txt"].font = "weaponDFont";
                _this2[element.id + "Txt"].scale(0.60, 0.60);
                _this2[element.id + "Txt"].pos(35, 12);

                _this2[element.id + "Lv"].text = "LV." + element.refinerLevel;
                _this2[element.id + "Lv"].font = "weaponNFontT";
                _this2[element.id + "Lv"].scale(0.5, 0.5);
                _this2[element.id + "Lv"].pos(26, 93);

                _this2["" + element.id].gray = element.status ? false : true;

                _this2["" + element.id].on(Laya.Event.CLICK, _this2, function () {
                    _RefiningControl2.default.ins.addLv(element);
                });
            });
        }
    }]);

    return Refining;
}(PaoYa.View);

exports.default = Refining;

},{"./RefiningControl":38}],38:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RefiningControl = function (_PaoYa$Component) {
    _inherits(RefiningControl, _PaoYa$Component);

    function RefiningControl() {
        _classCallCheck(this, RefiningControl);

        var _this = _possibleConstructorReturn(this, (RefiningControl.__proto__ || Object.getPrototypeOf(RefiningControl)).call(this));

        RefiningControl.ins = _this;
        return _this;
    }

    _createClass(RefiningControl, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "addLv",
        value: function addLv(e) {
            var _this2 = this;

            if (e.status) {
                this.POST("martial_user_weapon_list", { refinerId: e.id }, function (data) {
                    _this2.navigator.push("Devour", data);
                });
            } else {
                this.navigator.popup("refiner/Canlock", e);
            }
        }
    }]);

    return RefiningControl;
}(PaoYa.Component);

exports.default = RefiningControl;

},{}],39:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var Global = {
    baseUrl: "https://xgamejuedixiaomie.goxiaochengxu.cn/1005/",
    remoteUrl: '',
    skTemplate: {},
    shareNum: 0,
    shareNumSuc: 0,
    shareNumFail: 0,
    skBank: {},
    getTemplate: function getTemplate(cb) {
        for (var key in this.skBank) {
            if (this.skTemplate[key]) {} else {
                skLoading.call(this, key);
            }
        }

        function skLoading(key) {
            var _this = this;

            var mFactory = new Laya.Templet();
            mFactory.on(Laya.Event.COMPLETE, this, function () {
                parseComplete.call(_this, mFactory, key);
            });
            mFactory.loadAni(this.skBank[key]);
        }

        function parseComplete(mFactory, key) {
            this.skTemplate[key] = mFactory;
            if (key == "getheroY") {
                cb && cb();
            }
        }
    },

    /**
     * 
     * @param {*} key String SK名
     * @param {*} cb 回调
     */
    appointSk: function appointSk(caller, key, cb) {
        var _this2 = this;

        if (this.skTemplate[key]) {
            cb && cb.call(caller, this.skTemplate[key]);
        } else {
            var _parseComplete = function _parseComplete(mFactory, key) {
                this.skTemplate[key] = mFactory;
                cb && cb.call(caller, this.skTemplate[key]);
            };

            var mFactory = new Laya.Templet();
            mFactory.on(Laya.Event.COMPLETE, this, function () {
                _parseComplete.call(_this2, mFactory, key);
            });
            mFactory.loadAni(this.skBank[key]);
        }
    },
    regFont: function regFont() {
        var weaponDFont = new Laya.BitmapFont();
        weaponDFont.loadFont('font/weapon/detailfont.fnt', Laya.Handler.create(this, function () {
            Laya.Text.registerBitmapFont('weaponDFont', weaponDFont);
        }));

        var weaponNFontT = new Laya.BitmapFont();
        weaponNFontT.loadFont('font/weapon/lvfont.fnt', Laya.Handler.create(this, function () {
            Laya.Text.registerBitmapFont('weaponNFontT', weaponNFontT);
        }));
    },
    dataPoints: function dataPoints(data, obj)
    //data汉字说明比如  点击数
    //obj  比如  { points: "39,40" }
    {
        if (obj) {
            PaoYa.Request.POST("game_point", obj);
        }
        // wx.aldSendEvent(data, obj)

        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldSendEvent(data);
    },
    gameStartStat: function gameStartStat(num) {
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onStart({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173"
        });
    },
    gameEndStat: function gameEndStat(num, obj) {
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onEnd({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173",
            event: obj.static,
            params: {
                desc: obj.zhstatic
            }
        });
    },
    gameUsePropStat: function gameUsePropStat(num) {
        if (typeof wx == 'undefined') {
            return;
        }
        wx.aldStage.onRunning({
            stageId: "" + num,
            stageName: "\u7B2C" + num + "\u5173",
            event: "tools",
            params: {
                itemName: "\u7535\u706F\u6CE1"
            }
        });
    }
};

exports.Global = Global;

},{}],40:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Global = require('./Global');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tool = function () {
    function Tool() {
        _classCallCheck(this, Tool);
    }

    _createClass(Tool, null, [{
        key: 'numFormat',

        /**数字太大格式化成K */
        value: function numFormat(num) {
            if (num >= 10000) {
                num = Math.floor(num / 1000) + 'K';
            }
            return num;
        }

        /**增加用户金币 */

    }, {
        key: 'addGold',
        value: function addGold(num) {
            PaoYa.DataCenter.user.gold += num;
        }

        /**获取格式化后的用户金币 */

    }, {
        key: 'getGold',
        value: function getGold(num) {
            return this.numFormat(PaoYa.DataCenter.user.gold);
        }

        /**增加用户宝石 */

    }, {
        key: 'addDiamond',
        value: function addDiamond(num) {
            PaoYa.DataCenter.user.diamond += num;
        }

        /**设置用户宝石 */

    }, {
        key: 'setDiamond',
        value: function setDiamond(num) {
            PaoYa.DataCenter.user.diamond = num;
        }

        /**更新用户金币，体力，宝石，道具，积分 */

    }, {
        key: 'updataUserInfo',
        value: function updataUserInfo(data) {
            var user = PaoYa.DataCenter.user.user_info;
            user.member_gold = data.gold;
            user.member_power = data.power;
            user.member_diamond = data.diamond;
            user.member_prop = data.prop;
            user.member_integral = data.integral;
        }
    }, {
        key: 'showVideoAD',
        value: function showVideoAD(callBack, cancel, err, num) {
            // Global.dataPoints(`点击观看视频次数`, { points: "103" })
            var p = {
                onLoad: function onLoad() {
                    console.log('\u89C6\u9891\u5F39\u51FA');
                    PaoYa.Request.POST('manage_data', { code: num });
                },
                onError: function onError() {
                    // PaoYa.Request.GET("change_advertising", {}, () => {
                    //     PaoYa.DataCenter.loginData.advertising = 1
                    // })
                    err && err();
                },
                onClose: function onClose(res) {
                    if (res.isEnded) {
                        // Global.dataPoints(`广告看完次数`, { points: "105" })
                        callBack && callBack();
                    } else {
                        cancel && cancel();
                        // let alert = new AlertDialog({ title: '提示', message: '请看完广告才能复活哦' })
                        // alert.popup()
                    }
                }
            };
            PaoYa.RewardedVideoAd.show(p);
        }

        /**设置用户领钻石小红点值 */

    }, {
        key: 'setUserCanGetJewel',
        value: function setUserCanGetJewel(state) {
            PaoYa.DataCenter.user.can_receive = state;
        }
    }, {
        key: 'inviteFriend',
        value: function inviteFriend(e, num) {
            if (PaoYa.DataCenter.loginData.is_review || typeof wx == 'undefined') {
                return;
            }
            // PaoYa.Request.POST(`manage_data`, { code: num })

            var title = PaoYa.DataCenter.config.game.share_list.randomItem;
            PaoYa.ShareManager.shareTitle(title, {}, function () {});
        }
    }, {
        key: 'noADshare',
        value: function noADshare(suc, fail) {
            if (PaoYa.DataCenter.loginData.is_review || typeof wx == 'undefined') {
                suc && suc();
                return;
            }

            // let probability = GameDataCenter.gameData.shareNum ? 100 : 70
            var startTime = new Date().getTime();
            var title = PaoYa.DataCenter.config.game.share_list.randomItem;
            Laya.SoundManager.stopMusic();
            PaoYa.ShareManager.shareTitle(title, {}, function () {

                if (_Global.Global.shareNumFail > 1 && _Global.Global.shareNum < 5) {
                    _Global.Global.shareNumFail = 0;
                    suc && suc();
                    _Global.Global.shareNum++;
                    return;
                }

                if (_Global.Global.shareNum < 1) {
                    _Global.Global.shareNumFail++;
                    fail && fail();
                }

                if (_Global.Global.shareNum >= 1 && _Global.Global.shareNum <= 4) {
                    var shareNumD = Math.random() * 100 < 50 ? true : false;
                    if (new Date().getTime() - startTime > 2000 && shareNumD) {
                        _Global.Global.shareNumSuc++;
                        suc && suc();
                    } else {
                        _Global.Global.shareNumFail++;
                        fail && fail();
                    }
                }

                if (_Global.Global.shareNum > 4) {
                    var _shareNumD = Math.random() * 100 < 10 ? true : false;
                    if (new Date().getTime() - startTime > 2000 && _shareNumD) {
                        _Global.Global.shareNumSuc++;
                        suc && suc();
                    } else {
                        _Global.Global.shareNumFail++;
                        fail && fail();
                    }
                }
                _Global.Global.shareNum++;
            });
        }
    }, {
        key: 'wxShowFriendRank',
        value: function wxShowFriendRank(num) {
            var uerInfo = {
                "wxgame": {
                    "score": num,
                    // "ladder_id": e.ladder_id,
                    "update_time": Date.parse(new Date())
                    // "city": PaoYa.DataCenter.rawData.member_city,
                    // "ladder_name": e.ladder_name
                } };
            if (typeof wx == 'undefined') {
                return;
            } else {
                wx.setUserCloudStorage({
                    KVDataList: [{ key: 'score', value: JSON.stringify(uerInfo) }]
                });
            }
        }
    }, {
        key: 'showBanner',
        value: function showBanner() {
            if (typeof wx == 'undefined') {
                return;
            }
            var bannerAd = wx.createBannerAd({
                adUnitId: 'adunit-1dbbf544daf9456a',
                style: {
                    left: (wx.getSystemInfoSync().windowWidth - 300) / 2,
                    top: wx.getSystemInfoSync().screenHeight - 90,
                    width: 300
                }
            });

            bannerAd.onLoad(function () {
                // Global.dataPoints(`banner曝光量`, { points: "104" })
                console.log('banner 广告加载成功');
            });

            bannerAd.onError(function (err) {
                console.log(err);
            });

            bannerAd.onResize(function (res) {
                console.log(res.width, res.height);
                console.log(bannerAd.style.realWidth, bannerAd.style.realHeight);
                bannerAd.style.top = wx.getSystemInfoSync().screenHeight - bannerAd.style.realHeight;
            });

            // 在适合的场景显示 Banner 广告
            return bannerAd;
        }
    }, {
        key: 'hasVideoAD',
        get: function get() {
            return PaoYa.game.params.adUnitId ? true : false;
        }
    }]);

    return Tool;
}();

exports.default = Tool;

},{"./Global":39}],41:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponHouseControl = require("./WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponHouse = function (_PaoYa$View) {
    _inherits(WeaponHouse, _PaoYa$View);

    function WeaponHouse() {
        _classCallCheck(this, WeaponHouse);

        return _possibleConstructorReturn(this, (WeaponHouse.__proto__ || Object.getPrototypeOf(WeaponHouse)).call(this));
    }

    _createClass(WeaponHouse, [{
        key: "onAwake",
        value: function onAwake() {}
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            // this.getComponent()
            this.goldNum.text = PaoYa.DataCenter.user.gold;
            this.goldNum.font = "weaponNFontT";
            this.goldNum.scale(0.7, 0.7);
            this.goldNum.pos(381, 20);
            this.diamondNum.text = PaoYa.DataCenter.user.diamond;
            this.diamondNum.font = "weaponNFontT";
            this.diamondNum.scale(0.7, 0.7);
            this.diamondNum.pos(622, 20);

            this.light.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("light");
                _this2.lightNew.visible = false;
                _WeaponHouseControl2.default.ins.showWareList(_WeaponHouseControl2.default.ins.lightList);
            });

            this.middle.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("middle");
                _this2.middleNew.visible = false;
                _WeaponHouseControl2.default.ins.showWareList(_WeaponHouseControl2.default.ins.middleList);
            });

            this.large.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("large");
                _this2.largeNew.visible = false;
                _WeaponHouseControl2.default.ins.showWareList(_WeaponHouseControl2.default.ins.heavyList);
            });

            this.benBack.on(Laya.Event.CLICK, this, function () {
                _WeaponHouseControl2.default.ins.navigator.pop();
            });

            this.equip.on(Laya.Event.CLICK, this, function () {
                _WeaponHouseControl2.default.ins.chargeWeapon();
            });

            this.upGrade.on(Laya.Event.CLICK, this, function () {
                _WeaponHouseControl2.default.ins.upgradeWeapon();
            });

            this.Wp_1.font = "weaponDFont";
            this.Wp_2.font = "weaponDFont";
            this.Wp_3.font = "weaponDFont";
            this.Wp_4.font = "weaponDFont";
            this.Wp_5.font = "weaponDFont";
        }
    }, {
        key: "getWareBtnSkin",
        value: function getWareBtnSkin(name) {
            var _this3 = this;

            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3[element].skin = "remote/weaponhouse/14.png";
            });
            this[name].skin = "remote/weaponhouse/13.png";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return WeaponHouse;
}(PaoYa.View);

exports.default = WeaponHouse;

},{"./WeaponHouseControl":42}],42:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponHouseControl = function (_PaoYa$Component) {
    _inherits(WeaponHouseControl, _PaoYa$Component);

    function WeaponHouseControl() {
        _classCallCheck(this, WeaponHouseControl);

        var _this = _possibleConstructorReturn(this, (WeaponHouseControl.__proto__ || Object.getPrototypeOf(WeaponHouseControl)).call(this));

        WeaponHouseControl.ins = _this;
        return _this;
    }

    _createClass(WeaponHouseControl, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            this.params = this.owner.params;
            //武器数据
            this.lightList = this.params.lightList;
            this.heavyList = this.params.heavyList;
            this.middleList = this.params.middleList;
            this.allList = this.lightList.concat(this.heavyList, this.middleList);
            this.addWpList = [];
            //新武器处理
            this.params.newWeapon && this.chioceNewWp();
            //我的武器数据
            this.myUserList = [];
            this.isUsingWeapon = {};
            this.currentMyUserIdx = 0;
            this.currentMyUserWeapDetail = "";
            var arr = this.params.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });
            this.getMyUserDetailList();
            // this.owner.userWeaponList.selectHandler = new Laya.Handler(this, this.userWeaponSelect);
            this.owner.userWeaponList.renderHandler = new Laya.Handler(this, this.userWeaponUpdateItem);
            this.owner.userWeaponList.array = this.myUserDetailList;
            //仓库武器数据
            // this.owner.warehouseList.selectHandler = new Laya.Handler(this, this.wareWeaponSelect);
            this.owner.warehouseList.vScrollBarSkin = "";
            this.isWareChoiceWp = null;
            this.owner.warehouseList.renderHandler = new Laya.Handler(this, this.wareWeaponUpdateItem);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
        // this.owner.goldNum.text = PaoYa.DataCenter.user.gold
        // this.owner.goldNum.font = `weaponNFontT`
        // this.owner.diamondNum.text = PaoYa.DataCenter.user.diamond
        // this.owner.diamondNum.font = `weaponNFontT`

        //获取装备武器详情

    }, {
        key: "getMyUserDetailList",
        value: function getMyUserDetailList() {
            switch (this.params.weaponGridNum) {
                case 3:
                    this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 4 }, { type: 5 }];
                    break;
                case 4:
                    if (this.params.shareGrid > 0) {
                        this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 4 }];
                    } else {
                        this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 5 }];
                    }
                    break;
                case 5:
                    this.myUserDetailList = [{ type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }, { type: 3 }];
                    break;
            }
            var al = this.allList.length;
            var ml = this.myUserList.length;
            var num = 0;
            getNowWare: for (var j = 0; j < ml; j++) {
                if (!this.myUserList[j]) {
                    return;
                }
                for (var i = 0; i < al; i++) {
                    if (this.allList[i].weaponId == this.myUserList[j].name && this.allList[i].weaponLevel == this.myUserList[j].lv && this.allList[i].num > 0) {
                        this.myUserDetailList[num] = this.allList[i];
                        num++;
                        continue getNowWare;
                    }
                }
            }
        }
        //新武器属性赋予

    }, {
        key: "chioceNewWp",
        value: function chioceNewWp() {
            var _this3 = this;

            this.newWpList = [];
            this.owner.lightNew.visible = this.params.newWeapon.indexOf("d") != -1 ? true : false;
            this.owner.middleNew.visible = this.params.newWeapon.indexOf("z") != -1 ? true : false;
            this.owner.largeNew.visible = this.params.newWeapon.indexOf("g") != -1 ? true : false;
            if (this.params.newWeapon) {
                var newaparr = this.params.newWeapon.split(",");
                newaparr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this3.newWpList.push(obj);
                });
            }
        }
    }, {
        key: "userWeaponSelect",
        value: function userWeaponSelect(cell, idx) {
            console.log(cell, idx);
        }
        //正在使用武器渲染

    }, {
        key: "userWeaponUpdateItem",
        value: function userWeaponUpdateItem(cell, idx) {
            var _this4 = this;

            // console.log(cell, idx)
            //点击重新渲染
            cell.offAll();

            if (!cell._dataSource.weaponId) {
                cell.getChildByName("bgwrap").visible = false;
                cell.getChildByName("mark").visible = false;
                cell.getChildByName("wp").visible = false;
                cell.getChildByName("lv").visible = false;
                cell.getChildByName("add").visible = false;
                cell.getChildByName("invite").visible = false;
                switch (cell._dataSource.type) {
                    case 3:
                        cell.getChildByName("add").visible = true;
                        this.addWpList.push(cell);
                        cell.on(Laya.Event.CLICK, this, function () {
                            for (var i = 0; i < 5; i++) {
                                _this4.owner["wpBg_" + (i + 1)].skin = "remote/weaponhouse/25.png";
                            }
                            // let newIndx = this.currentMyUserIdx
                            _this4.currentMyUserIdx = idx;
                            cell.getChildByName("beChioce").visible = true;
                            _this4.owner["wpBg_" + (_this4.currentMyUserIdx + 1)].skin = "remote/weaponhouse/26.png";
                            // this.myUserList[this.currentMyUserIdx] = this.myUserList[newIndx]
                            _this4.getMyUserDetailList();
                            _this4.addWpList = [];
                            _this4.owner.userWeaponList.array = _this4.myUserDetailList;
                        });
                        break;
                    case 4:
                        cell.getChildByName("invite").visible = true;
                        cell.on(Laya.Event.CLICK, this, function () {
                            _this4.navigator.popup("weapon/UnlockFour");
                        });
                        break;
                    case 5:
                        cell.getChildByName("invite").visible = true;
                        cell.on(Laya.Event.CLICK, this, function () {
                            _this4.navigator.popup("weapon/UnlockFifth");
                        });
                        break;
                }
                return;
            }

            cell.getChildByName("bgwrap").visible = true;
            cell.getChildByName("mark").visible = true;
            cell.getChildByName("wp").visible = true;
            cell.getChildByName("lv").visible = true;
            cell.getChildByName("add").visible = false;
            cell.getChildByName("invite").visible = false;

            cell.on(Laya.Event.CLICK, this, function () {
                _this4.addWpList.forEach(function (element) {
                    element.getChildByName("beChioce").visible = false;
                });
                for (var i = 0; i < 5; i++) {
                    _this4.owner["wpBg_" + (i + 1)].skin = "remote/weaponhouse/25.png";
                }
                _this4.currentMyUserIdx = idx;
                _this4.owner["wpBg_" + (_this4.currentMyUserIdx + 1)].skin = "remote/weaponhouse/26.png";
                _this4.getMyUserDetailList();
                _this4.addWpList = [];
                _this4.owner.userWeaponList.array = _this4.myUserDetailList;
            });

            this.singleWeapon(cell, idx, 1);
        }
    }, {
        key: "wareWeaponSelect",
        value: function wareWeaponSelect(cell, idx) {
            console.log(cell, idx);
        }
        //仓库武器渲染

    }, {
        key: "wareWeaponUpdateItem",
        value: function wareWeaponUpdateItem(cell, idx) {
            var _this5 = this;

            // console.log(cell, idx)
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                if (_this5.isWareChoiceWp) {
                    _this5.isWareChoiceWp.getChildByName("beChioce").visible = false;
                    _this5.isWareChoiceWp.skin = "local/common/frameBg.png";
                    _this5.isWareChoiceWp._dataSource.isShowing = false;
                    _this5.isWareChoiceWp = cell;
                    _this5.isWareChoiceWp._dataSource.isShowing = true;
                }
                cell.getChildByName("beChioce").visible = true;
                // console.log(cell.getChildByName(`beChioce`),123)
                cell.skin = "local/common/currutFrameBg.png";
                _this5.currentMyUserWeapDetail = cell._dataSource;
                _this5.renderCenterData();
                if (cell._dataSource.isNew) {
                    cell._dataSource.isNew = false;
                    cell.getChildByName("new").visible = false;
                    _this5.newWpList[cell._dataSource.idIdx].isOdd = true;
                    // let arr = newWpList
                    // console.log(arr)
                }
            });
            this.singleWeapon(cell, idx);
        }
        //渲染详情部分

    }, {
        key: "renderCenterData",
        value: function renderCenterData(isUser) {
            var _this6 = this;

            this.owner["skillImg_1"].visible = false;
            this.owner["skillImg_2"].visible = false;
            var detail = this.currentMyUserWeapDetail;
            this.owner.showWeapon.skin = "remote/small_weapons/s_" + detail.weaponId + ".png";
            // this.owner.currtWeaponLevel.text = `LV.${detail.weaponLevel}`
            // this.owner.currtWeaponLevel.font = `weaponNFontT`
            // this.owner.currtWeaponLevel.scale(0.7, 0.7)
            //选择重置
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this6.owner[element].skin = "remote/weaponhouse/14.png";
            });
            //兵器展示
            var skinq = "";
            var skint = "";
            var wareList = [];
            switch (detail.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (detail.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    wareList = JSON.parse(JSON.stringify(this.heavyList));
                    this.owner.large.skin = "remote/weaponhouse/13.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    wareList = JSON.parse(JSON.stringify(this.middleList));
                    this.owner.middle.skin = "remote/weaponhouse/13.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    wareList = JSON.parse(JSON.stringify(this.lightList));
                    this.owner.light.skin = "remote/weaponhouse/13.png";
                    break;
            }
            this.owner.showWrap.skin = skinq;
            this.owner.showMark.skin = skint;
            //兵器属性
            this.owner.currutWeapon.text = detail.weaponName;
            this.owner.currutWeapon.font = "weaponDFont";
            this.owner.currutWeapon.scale(0.8, 0.8);

            this.owner.CDTime.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            this.owner.CDTime.font = "weaponNFontT";
            this.owner.CDTime.scale(0.7, 0.7);

            this.owner.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            this.owner.addattackNum.visible = detail.weaponUpAttack ? true : false;
            this.owner.addattackNum.text = "+" + detail.weaponUpAttack;
            this.owner.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            this.owner.addenduranceNum.visible = detail.weaponUpDurable ? true : false;
            this.owner.addenduranceNum.text = "+" + detail.weaponUpDurable;
            this.owner.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            this.owner.addconsumeNum.visible = detail.weaponDownConsume ? true : false;
            this.owner.addconsumeNum.text = "-" + detail.weaponDownConsume;
            this.owner.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";

            //兵器技能
            this.owner["skillName_1"].text = "";
            this.owner["skillGl_1"].text = "";
            this.owner["skillDetail_1"].text = "";
            this.owner["skillImg_1"].visible = false;
            this.owner["skillName_2"].text = "";
            this.owner["skillGl_2"].text = "";
            this.owner["skillDetail_2"].text = "";
            this.owner["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    _this6.owner["skillName_" + (index + 1)].color = "#4a4948";
                    _this6.owner["skillGl_" + (index + 1)].color = "#4a4948";
                    _this6.owner["skillDetail_" + (index + 1)].color = "#4a4948";
                    _this6.owner["skillName_" + (index + 1)].text = element.skillName;
                    _this6.owner["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    _this6.owner["skillDetail_" + (index + 1)].text = element.skillDesc;
                    _this6.owner["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        _this6.owner["skillName_" + (index + 1)].color = "#004418";
                        _this6.owner["skillGl_" + (index + 1)].color = "#004418";
                        _this6.owner["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }

            this.owner.needGoldNum.text = detail.upgradeCost;
            this.owner.needGoldNum.font = "weaponNFontT";
            this.owner.needGoldNum.scale(0.7, 0.7);

            this.owner.upGrade.disabled = detail.weaponLevel >= detail.weaponTopLevel ? true : false;
            this.owner.equip.skin = detail.isUsingWp ? "remote/weaponhouse/20.png" : "remote/weaponhouse/10.png";

            //否是为已装备武器
            if (isUser) {
                this.showWareList(wareList);
            }
        }

        //仓库展示列表

    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var _this7 = this;

            var detail = this.currentMyUserWeapDetail;
            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            var unShowWeap = JSON.parse(JSON.stringify(this.myUserList));
            unShowWeap.splice(this.currentMyUserIdx, 1);
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < unShowWeap.length; i++) {
                    if (element.weaponId == unShowWeap[i].name && element.weaponLevel == unShowWeap[i].lv) {
                        element.num -= 1;
                        element.isUsing = true;
                    }
                }
                //选出已装备武器
                var isChoice = false;
                for (var _i = 0; _i < element.num; _i++) {
                    var obj = JSON.parse(JSON.stringify(element));
                    obj.originalIndex = index;
                    obj.isUsingWp = false;
                    if (_this7.myUserList[_this7.currentMyUserIdx] && obj.weaponId == _this7.myUserList[_this7.currentMyUserIdx].name && obj.weaponLevel == _this7.myUserList[_this7.currentMyUserIdx].lv && !isChoice) {
                        obj.isUsingWp = true;
                        obj.isShowing = true;
                        isChoice = true;
                    }
                    obj.WpGrade = obj.weaponStar * 100 + obj.weaponLevel;
                    arr.push(obj);
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUsingWp && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }

            arr.sort(function (a, b) {
                return b.WpGrade - a.WpGrade;
            });
            this.isWareChoiceWp = null;
            this.owner.warehouseList.array = arr;
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx, isUser) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;
            if (!isUser) {
                cell.getChildByName("using").visible = false;
                cell.getChildByName("new").visible = false;
                if (cell._dataSource.isNew) {
                    cell.getChildByName("new").visible = true;
                }
            } else {
                if (idx == this.currentMyUserIdx) {
                    cell.getChildByName("beChioce").visible = true;
                    cell.skin = "local/common/currutFrameBg.png";
                    this.currentMyUserWeapDetail = cell._dataSource;
                    // this.isUsingWeapon = cell
                    this.renderCenterData(isUser);
                }
            }
            //选定渲染
            if (this.myUserList[this.currentMyUserIdx] && this.myUserList[this.currentMyUserIdx].name == cell._dataSource.weaponId && this.myUserList[this.currentMyUserIdx].lv == cell._dataSource.weaponLevel) {
                if (isUser) {} else if (cell._dataSource.isUsingWp) {
                    cell.getChildByName("using").visible = true;
                }
                this.currentMyUserWeapDetail = cell._dataSource;
                // this.isUsingWeapon = cell
                this.renderCenterData(isUser);
            }

            if (cell._dataSource.isShowing) {
                cell.getChildByName("beChioce").visible = true;
                // console.log(cell.getChildByName(`beChioce`),123)
                this.isWareChoiceWp = cell;
                cell.skin = "local/common/currutFrameBg.png";
                this.currentMyUserWeapDetail = cell._dataSource;
                // this.isUsingWeapon = cell
                this.renderCenterData(isUser);
            }

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }

        //更换武器

    }, {
        key: "chargeWeapon",
        value: function chargeWeapon() {
            var _this8 = this;

            if (this.isRequesting) {
                return;
            }
            var detail = this.currentMyUserWeapDetail;
            var oldDetail = this.myUserDetailList[this.currentMyUserIdx];
            if (detail.isUsingWp) {
                return;
            }
            var wpType = 0;
            if (!this.myUserList[this.currentMyUserIdx]) {
                wpType = 1;
            }
            this.isRequesting = true;
            Laya.timer.once(500, this, function () {
                _this8.isRequesting = false;
            });
            PaoYa.Request.POST("martial_change_weapon", { oldWeaponId: oldDetail.weaponId + "-" + oldDetail.weaponLevel, newWeaponId: detail.weaponId + "-" + detail.weaponLevel, type: wpType, index: this.currentMyUserIdx }, function (res) {
                _this8.myUserList = [];
                var arr = res.userWeapons.split(",");
                arr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this8.myUserList.push(obj);
                });
                _this8.getMyUserDetailList();
                _this8.addWpList = [];
                _this8.owner.userWeaponList.array = _this8.myUserDetailList;
            });
        }

        //升级武器

    }, {
        key: "upgradeWeapon",
        value: function upgradeWeapon() {
            var _this9 = this;

            if (this.isRequesting) {
                return;
            }
            if (Number(this.owner.needGoldNum.text) > Number(this.owner.goldNum.text)) {
                this.navigator.popup("weapon/GoldLack");
                return;
            } else {
                PaoYa.DataCenter.user.gold -= Number(this.owner.needGoldNum.text);
                this.owner.goldNum.text = PaoYa.DataCenter.user.gold;
            }

            var detail = this.currentMyUserWeapDetail;
            var isusing = detail.isUsingWp ? 1 : 0;
            this.isRequesting = true;
            Laya.timer.once(500, this, function () {
                _this9.isRequesting = false;
            });
            PaoYa.Request.POST("martial_update_weapon", { weaponId: detail.weaponId + "-" + detail.weaponLevel, default: isusing, index: this.currentMyUserIdx, time: new Date().getTime() }, function (res) {
                var newDetail = null;
                _this9.owner.upeffects.visible = true;
                _this9.owner.upeffects.play(0, false);
                switch (detail.weaponType) {
                    case 3:
                        // this.heavyList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.heavyList.push(res.weapon)
                        newDetail = "heavyList";
                        break;
                    case 2:
                        // this.middleList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.middleList.push(res.weapon)
                        newDetail = "middleList";
                        break;
                    case 1:
                        // this.lightList[detail.originalIndex].num--
                        // res.weapon.num = 1
                        // this.lightList.push(res.weapon)
                        newDetail = "lightList";
                        break;
                }

                var al = _this9[newDetail].length;
                var isNew = true;
                res.weapon.num = 1;
                for (var i = 0; i < al; i++) {
                    var element = _this9[newDetail][i];
                    if (element.weaponId == detail.weaponId && element.weaponLevel == detail.weaponLevel && element.num > 0) {
                        element.num -= 1;
                    }
                    if (element.weaponId == res.weapon.weaponId && element.weaponLevel == res.weapon.weaponLevel) {
                        isNew = false;
                        for (var key in res.weapon) {
                            element[key] = res.weapon[key];
                        }
                        element.num += 1;
                    }
                }
                isNew && _this9[newDetail].push(res.weapon);

                _this9.allList = [];
                _this9.allList = _this9.lightList.concat(_this9.heavyList, _this9.middleList);
                if (res.userWeapons) {
                    _this9.myUserList = [];
                    var arr = res.userWeapons.split(",");
                    arr.forEach(function (element) {
                        var obj = {
                            name: element.split("-")[0],
                            lv: element.split("-")[1]
                        };
                        _this9.myUserList.push(obj);
                    });
                    _this9.getMyUserDetailList();
                    _this9.addWpList = [];
                    _this9.owner.userWeaponList.array = _this9.myUserDetailList;
                } else {
                    for (var _key in res.weapon) {
                        _this9.isWareChoiceWp._dataSource[_key] = res.weapon[_key];
                    }

                    // this.isWareChoiceWp._dataSource = res.weapon
                    _this9.singleWeapon(_this9.isWareChoiceWp);
                }
            });
        }
    }]);

    return WeaponHouseControl;
}(PaoYa.Component);

exports.default = WeaponHouseControl;

},{}],43:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponStoreControl = require("./WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponStore = function (_PaoYa$View) {
    _inherits(WeaponStore, _PaoYa$View);

    function WeaponStore() {
        _classCallCheck(this, WeaponStore);

        var _this = _possibleConstructorReturn(this, (WeaponStore.__proto__ || Object.getPrototypeOf(WeaponStore)).call(this));

        WeaponStore.ins = _this;
        return _this;
    }

    _createClass(WeaponStore, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.goldNum.text = PaoYa.DataCenter.user.gold;
            this.goldNum.font = "weaponNFontT";
            this.goldNum.scale(0.7, 0.7);
            this.goldNum.pos(381, 20);
            this.diamondNum.text = PaoYa.DataCenter.user.diamond;
            this.diamondNum.font = "weaponNFontT";
            this.diamondNum.scale(0.7, 0.7);
            this.diamondNum.pos(622, 20);

            this.sellText.font = "weaponDFont";
            this.buyText.font = "weaponDFont";
            this.needDiamon.text = 20;
            this.needDiamon.font = "weaponNFontT";
            this.needDiamon.scale(0.5, 0.5);
            this.refreshTxt.font = "weaponDFont";
            this.refreshTxt.scale(0.7, 0.7);
            this.buyBtnTxt.font = "weaponDFont";
            this.buyBtnTxt.scale(0.7, 0.7);
            this.sellBtnTxt.font = "weaponDFont";
            this.sellBtnTxt.scale(0.7, 0.7);

            this.refreshTimeNum.font = "weaponDFont";
            this.refreshTimeNum.scale(0.4, 0.4);

            this.benBack.on(Laya.Event.CLICK, this, function () {
                _WeaponStoreControl2.default.ins.navigator.pop();
            });

            this.sellBtn.on(Laya.Event.CLICK, this, function () {
                _WeaponStoreControl2.default.ins.sellWp();
            });

            this.refreshBtn.on(Laya.Event.CLICK, this, function () {
                var isHigh = false,
                    highDeatil = void 0;
                _WeaponStoreControl2.default.ins.buyList.forEach(function (element) {
                    if (element.weaponStar == 3) {
                        isHigh = true;
                        highDeatil = element;
                    }
                });
                if (isHigh) {
                    var obj = {
                        detail: highDeatil,
                        type: "buy"
                    };
                    _WeaponStoreControl2.default.ins.navigator.popup("weapon/StoreSure", obj);
                } else {
                    _WeaponStoreControl2.default.ins.refresF();
                }
            });

            this.sell.on(Laya.Event.CLICK, this, function () {
                _WeaponStoreControl2.default.ins.wpdType = "sell";
                _this2.sell.skin = "remote/weaponstore/3.png";
                _this2.buy.skin = "remote/weaponstore/2.png";
                _this2.sellPage.visible = true;
                _this2.buyPage.visible = false;
                _this2.getWareBtnSkin("light");
                _this2.lightNew.visible = false;
                _WeaponStoreControl2.default.ins.sellPresentIdx = 0;
                _WeaponStoreControl2.default.ins.showWareList(_WeaponStoreControl2.default.ins.lightList);
            });

            this.buy.on(Laya.Event.CLICK, this, function () {
                _WeaponStoreControl2.default.ins.wpdType = "buy";
                _this2.sell.skin = "remote/weaponstore/2.png";
                _this2.buy.skin = "remote/weaponstore/3.png";
                _this2.sellPage.visible = false;
                _this2.buyPage.visible = true;
                _WeaponStoreControl2.default.ins.buyPresentIdx = 0;
                if (_WeaponStoreControl2.default.ins.buyList.length > 0) {
                    _this2.weapon.visible = true;
                    _this2.sellBtn.visible = true;
                    _this2.buyBtn.visible = true;
                } else {
                    _this2.weapon.visible = false;
                    _this2.buyBtn.visible = false;
                    _this2.sellBtn.visible = false;
                }
                _this2.buyList.array = _WeaponStoreControl2.default.ins.buyList;
            });

            this.light.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("light");
                _this2.lightNew.visible = false;
                _WeaponStoreControl2.default.ins.showWareList(_WeaponStoreControl2.default.ins.lightList);
            });

            this.middle.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("middle");
                _this2.middleNew.visible = false;
                _WeaponStoreControl2.default.ins.showWareList(_WeaponStoreControl2.default.ins.middleList);
            });

            this.large.on(Laya.Event.CLICK, this, function () {
                _this2.getWareBtnSkin("large");
                _this2.largeNew.visible = false;
                _WeaponStoreControl2.default.ins.showWareList(_WeaponStoreControl2.default.ins.heavyList);
            });

            this.buyBtn.on(Laya.Event.CLICK, this, function () {
                var detail = _WeaponStoreControl2.default.ins.currentBuyWeapDetail;
                if (!detail) {
                    return;
                }
                if (Number(detail.weaponPrice) > Number(_this2.goldNum.text)) {
                    _WeaponStoreControl2.default.ins.navigator.popup("weapon/GoldLack");
                    return;
                } else {
                    PaoYa.DataCenter.user.gold -= Number(detail.weaponPrice);
                    _this2.goldNum.text = PaoYa.DataCenter.user.gold;
                    _WeaponStoreControl2.default.ins.buyWp();
                }
            });
        }
    }, {
        key: "getWareBtnSkin",
        value: function getWareBtnSkin(name) {
            var _this3 = this;

            _WeaponStoreControl2.default.ins.sellPresentIdx = 0;
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this3[element].skin = "remote/weaponhouse/14.png";
            });
            this[name].skin = "remote/weaponhouse/13.png";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return WeaponStore;
}(PaoYa.View);

exports.default = WeaponStore;

},{"./WeaponStoreControl":44}],44:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var WeaponStoreControl = function (_PaoYa$Component) {
    _inherits(WeaponStoreControl, _PaoYa$Component);

    function WeaponStoreControl() {
        _classCallCheck(this, WeaponStoreControl);

        var _this = _possibleConstructorReturn(this, (WeaponStoreControl.__proto__ || Object.getPrototypeOf(WeaponStoreControl)).call(this));

        WeaponStoreControl.ins = _this;
        return _this;
    }

    _createClass(WeaponStoreControl, [{
        key: "onAwake",
        value: function onAwake() {
            var _this2 = this;

            //获取数据列表
            this.params = this.owner.params;
            this.sellList = this.params.sellList;
            this.buyList = this.params.buyList.weaponList;
            this.sellList.newWeapon && this.chioceNewWp();
            //我的武器数据
            this.wpdType = "buy";
            this.myUserList = [];
            this.isUsingWeapon = {};
            this.currentMyUserIdx = 0;
            this.currentMyUserWeapDetail = "";
            var arr = this.sellList.userWeapons.split(",");
            arr.forEach(function (element) {
                var obj = {
                    name: element.split("-")[0],
                    lv: element.split("-")[1]
                };
                _this2.myUserList.push(obj);
            });
            this.owner.buyList.vScrollBarSkin = "";
            this.owner.warehouseList.vScrollBarSkin = "";
            this.owner.buyList.renderHandler = new Laya.Handler(this, this.buyWpUpdateItem);
            this.owner.warehouseList.renderHandler = new Laya.Handler(this, this.sellWpUpdateItem);
            this.getWareHouseList();
            this.buyPresentIdx = 0;
            this.sellPresentIdx = 0;
            if (this.buyList.length > 0) {
                this.owner.weapon.visible = true;
                this.owner.buyBtn.visible = true;
                this.owner.sellBtn.visible = true;
            } else {
                this.owner.weapon.visible = false;
                this.owner.buyBtn.visible = false;
                this.owner.sellBtn.visible = false;
            }
            this.owner.buyList.array = this.buyList;
            this.downTimeStartF(this.params.buyList.refreshTime);
        }
    }, {
        key: "onEnable",
        value: function onEnable() {}
    }, {
        key: "onDisable",
        value: function onDisable() {}
        //获得仓库列表

    }, {
        key: "getWareHouseList",
        value: function getWareHouseList() {
            this.lightList = this.sellList.lightList;
            this.heavyList = this.sellList.heavyList;
            this.middleList = this.sellList.middleList;
            this.allList = this.lightList.concat(this.heavyList, this.middleList);
        }
        //渲染购买页

    }, {
        key: "buyWpUpdateItem",
        value: function buyWpUpdateItem(cell, idx) {
            var _this3 = this;

            this.singleWeapon(cell, idx);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _this3.buyPresentIdx = idx;
                _this3.isBuyChoiceWp.skin = "local/common/frameBg.png";
                _this3.isBuyChoiceWp.getChildByName("beChioce").visible = false;

                cell.skin = "local/common/currutFrameBg.png";
                cell.getChildByName("beChioce").visible = true;
                _this3.currentBuyWeapDetail = cell._dataSource;
                _this3.isBuyChoiceWp = cell;
                _this3.renderCenterData(_this3.currentBuyWeapDetail);
            });
        }
        //渲染仓库页

    }, {
        key: "sellWpUpdateItem",
        value: function sellWpUpdateItem(cell, idx) {
            var _this4 = this;

            this.singleWeapon(cell, idx, 1);
            cell.offAll();
            cell.on(Laya.Event.CLICK, this, function () {
                _this4.isSellWareChoiceWp.skin = "local/common/frameBg.png";
                _this4.isSellWareChoiceWp.getChildByName("beChioce").visible = false;

                cell.skin = "local/common/currutFrameBg.png";
                cell.getChildByName("beChioce").visible = true;
                _this4.currentSellWeapDetail = cell._dataSource;
                _this4.isSellWareChoiceWp = cell;
                _this4.renderCenterData(_this4.currentSellWeapDetail);
            });
        }

        //单个兵器图签

    }, {
        key: "singleWeapon",
        value: function singleWeapon(cell, idx, isSell) {
            cell.skin = "local/common/frameBg.png";
            cell.getChildByName("beChioce").visible = false;
            if (!isSell) {
                if (idx == this.buyPresentIdx) {
                    cell.skin = "local/common/currutFrameBg.png";
                    cell.getChildByName("beChioce").visible = true;
                    //当前详情
                    this.currentBuyWeapDetail = cell._dataSource;
                    //当前列表
                    this.isBuyChoiceWp = cell;
                    if (this.wpdType == "buy") {
                        this.renderCenterData(this.currentBuyWeapDetail);
                    }
                }
                cell.getChildByName("bg").getChildByName("txt").text = "" + cell._dataSource.weaponPrice;
                cell.getChildByName("bg").getChildByName("txt").font = "weaponNFontT";
                cell.getChildByName("bg").getChildByName("txt").scale(0.75, 0.75);
            } else {
                if (idx == this.sellPresentIdx) {
                    cell.skin = "local/common/currutFrameBg.png";
                    cell.getChildByName("beChioce").visible = true;
                    //当前详情
                    this.currentSellWeapDetail = cell._dataSource;
                    //当前列表
                    this.isSellWareChoiceWp = cell;
                    if (this.wpdType == "sell") {
                        this.renderCenterData(this.currentSellWeapDetail);
                    }
                }
            }

            cell.getChildByName("wp").skin = "remote/small_weapons/s_" + cell._dataSource.weaponId + ".png";
            cell.getChildByName("lv").text = "LV." + cell._dataSource.weaponLevel;
            cell.getChildByName("lv").font = "weaponNFontT";
            cell.getChildByName("lv").scale(0.7, 0.7);

            var skinq = "";
            var skint = "";
            switch (cell._dataSource.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (cell._dataSource.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    break;
            }
            cell.getChildByName("bgwrap").skin = skinq;
            cell.getChildByName("mark").skin = skint;
        }
        //渲染详情部分

    }, {
        key: "renderCenterData",
        value: function renderCenterData(data) {
            var _this5 = this;

            this.owner["skillImg_1"].visible = false;
            this.owner["skillImg_2"].visible = false;
            var detail = data;
            this.owner.showWeapon.skin = "remote/small_weapons/s_" + detail.weaponId + ".png";
            // this.owner.currtWeaponLevel.text = `LV.${detail.weaponLevel}`
            // this.owner.currtWeaponLevel.font = `weaponNFontT`
            // this.owner.currtWeaponLevel.scale(0.7, 0.7)
            //选择重置
            var arr = ["light", "middle", "large"];
            arr.forEach(function (element) {
                _this5.owner[element].skin = "remote/weaponhouse/14.png";
            });
            //兵器展示
            var skinq = "";
            var skint = "";
            switch (detail.weaponStar) {
                case 1:
                    skinq = "local/common/quality_1.png";
                    break;
                case 2:
                    skinq = "local/common/quality_2.png";
                    break;
                case 3:
                    skinq = "local/common/quality_3.png";
                    break;
            }
            switch (detail.weaponType) {
                case 3:
                    skint = "local/common/type_1.png";
                    this.owner.large.skin = "remote/weaponhouse/13.png";
                    break;
                case 2:
                    skint = "local/common/type_2.png";
                    this.owner.middle.skin = "remote/weaponhouse/13.png";
                    break;
                case 1:
                    skint = "local/common/type_3.png";
                    this.owner.light.skin = "remote/weaponhouse/13.png";
                    break;
            }

            if (detail.weaponSalePrice) {
                this.owner.needGoldNum.text = detail.weaponSalePrice;
                this.owner.needGoldNum.font = "weaponNFontT";
                this.owner.needGoldNum.scale(0.8, 0.8);
            }

            this.owner.showWrap.skin = skinq;
            this.owner.showMark.skin = skint;
            //兵器属性
            this.owner.currutWeapon.text = detail.weaponName;
            this.owner.currutWeapon.font = "weaponDFont";
            this.owner.currutWeapon.scale(0.8, 0.8);

            this.owner.CDTime.text = "LV." + detail.weaponLevel + "/" + detail.weaponTopLevel;
            this.owner.CDTime.font = "weaponNFontT";
            this.owner.CDTime.scale(0.7, 0.7);

            this.owner.attackNum.text = "\u653B\u51FB\uFF1A " + detail.weaponAttack;
            this.owner.addattackNum.visible = detail.weaponUpAttack ? true : false;
            this.owner.addattackNum.text = "+" + detail.weaponUpAttack;
            this.owner.enduranceNum.text = "\u8010\u4E45\uFF1A " + detail.weaponDurable;
            this.owner.addenduranceNum.visible = detail.weaponUpDurable ? true : false;
            this.owner.addenduranceNum.text = "+" + detail.weaponUpDurable;
            this.owner.consumeNum.text = "\u6D88\u8017\uFF1A " + detail.weaponConsume;
            this.owner.addconsumeNum.visible = detail.weaponDownConsume ? true : false;
            this.owner.addconsumeNum.text = "-" + detail.weaponDownConsume;
            this.owner.wpcdNum.text = "\u51B7\u5374\uFF1A " + detail.weaponCd + "\u79D2";

            //兵器技能
            this.owner["skillName_1"].text = "";
            this.owner["skillGl_1"].text = "";
            this.owner["skillDetail_1"].text = "";
            this.owner["skillImg_1"].visible = false;
            this.owner["skillName_2"].text = "";
            this.owner["skillGl_2"].text = "";
            this.owner["skillDetail_2"].text = "";
            this.owner["skillImg_2"].visible = false;
            if (detail.skills.length > 0) {
                detail.skills.forEach(function (element, index) {
                    _this5.owner["skillName_" + (index + 1)].color = "#4a4948";
                    _this5.owner["skillGl_" + (index + 1)].color = "#4a4948";
                    _this5.owner["skillDetail_" + (index + 1)].color = "#4a4948";
                    _this5.owner["skillName_" + (index + 1)].text = element.skillName;
                    _this5.owner["skillGl_" + (index + 1)].text = "\u51E0\u7387" + element.skillProb + "%";
                    _this5.owner["skillDetail_" + (index + 1)].text = element.skillDesc;
                    _this5.owner["skillImg_" + (index + 1)].visible = true;
                    if (element.status) {
                        _this5.owner["skillName_" + (index + 1)].color = "#004418";
                        _this5.owner["skillGl_" + (index + 1)].color = "#004418";
                        _this5.owner["skillDetail_" + (index + 1)].color = "#004418";
                    }
                });
            }
        }
        //商城刷新倒计时

    }, {
        key: "downTimeStartF",
        value: function downTimeStartF(timeNum) {
            var nowtime = new Date().getTime();
            var Stime = timeNum - nowtime / 1000 | 0;
            this.getPowerTimeDown(Stime);
        }
    }, {
        key: "getPowerTimeDown",
        value: function getPowerTimeDown(Stime) {
            var _this6 = this;

            if (this.isRefrshing) {
                this.owner.refreshTimeNum.visible = false;
                return;
            }
            var Ntime = Stime % 3600 | 0;
            var h = Stime / 3600 | 0;
            var m = Ntime / 60 | 0;
            var s = Ntime % 60 | 0;

            var hhh = h > 9 ? h : "0" + h;
            var mmm = m > 9 ? m : "0" + m;
            var sss = s > 9 ? s : "0" + s;
            this.owner.refreshTimeNum.text = hhh + ":" + mmm + ":" + sss;
            var NewT = Stime - 1;
            if (NewT < 1) {
                this.isReadyRefrensh = true;
                return;
            }
            Laya.timer.once(1000, this, function () {
                _this6.getPowerTimeDown(NewT);
            });
        }
    }, {
        key: "chioceNewWp",
        value: function chioceNewWp() {
            var _this7 = this;

            this.newWpList = [];
            this.owner.lightNew.visible = this.params.newWeapon.indexOf("d") != -1 ? true : false;
            this.owner.middleNew.visible = this.params.newWeapon.indexOf("z") != -1 ? true : false;
            this.owner.largeNew.visible = this.params.newWeapon.indexOf("g") != -1 ? true : false;
            if (this.params.newWeapon) {
                var newaparr = this.params.newWeapon.split(",");
                newaparr.forEach(function (element) {
                    var obj = {
                        name: element.split("-")[0],
                        lv: element.split("-")[1]
                    };
                    _this7.newWpList.push(obj);
                });
            }
        }
        //仓库列表给处理

    }, {
        key: "showWareList",
        value: function showWareList(list) {
            var _this8 = this;

            var showList = JSON.parse(JSON.stringify(list));
            var arr = [];
            var unShowWeap = JSON.parse(JSON.stringify(this.myUserList));
            //筛选仓库武器
            showList.forEach(function (element, index) {
                for (var i = 0; i < unShowWeap.length; i++) {
                    if (element.weaponId == unShowWeap[i].name && element.weaponLevel == unShowWeap[i].lv) {
                        element.num -= 1;
                        element.isUsing = true;
                    }
                }
                //选出已装备武器
                var isChoice = false;
                for (var _i = 0; _i < element.num; _i++) {
                    var obj = JSON.parse(JSON.stringify(element));
                    obj.originalIndex = index;
                    obj.isUsingWp = false;
                    if (obj.weaponId == _this8.myUserList[_this8.currentMyUserIdx].name && obj.weaponLevel == _this8.myUserList[_this8.currentMyUserIdx].lv && !isChoice) {
                        obj.isUsingWp = true;
                        obj.isShowing = true;
                        isChoice = true;
                    }
                    obj.WpGrade = obj.weaponStar * 100 + obj.weaponLevel;
                    arr.push(obj);
                }
            });

            if (this.newWpList) {
                var al = arr.length;
                var ml = this.newWpList.length;
                getNewList: for (var j = 0; j < ml; j++) {
                    for (var i = 0; i < al; i++) {
                        if (arr[i].weaponId == this.newWpList[j].name && arr[i].weaponLevel == this.newWpList[j].lv && !arr[i].isUsingWp && !this.newWpList[j].isOdd) {
                            arr[i].isNew = true;
                            arr[i].idIdx = j;
                            continue getNewList;
                        }
                    }
                }
            }

            arr.sort(function (b, a) {
                return b.WpGrade - a.WpGrade;
            });
            this.isWareChoiceWp = null;
            if (arr.length > 0) {
                this.owner.weapon.visible = true;
                this.owner.buyBtn.visible = true;
                this.owner.sellBtn.visible = true;
            } else {
                this.owner.weapon.visible = false;
                this.owner.buyBtn.visible = false;
                this.owner.sellBtn.visible = false;
            }
            this.owner.warehouseList.array = arr;
        }
        //购买武器

    }, {
        key: "buyWp",
        value: function buyWp() {
            var _this9 = this;

            var detail = this.currentBuyWeapDetail;
            PaoYa.Request.POST("martial_shop_buy", { weaponId: detail.weaponId }, function (res) {
                PaoYa.DataCenter.user.gold = res.gold;
                _this9.owner.goldNum.text = res.gold;
            });

            this.owner.showaniC.skin = this.isBuyChoiceWp.getChildByName("wp")._skin;
            this.owner.showaniType.skin = this.isBuyChoiceWp.getChildByName("mark")._skin;
            this.owner.showaniWrap.skin = this.isBuyChoiceWp.getChildByName("bgwrap")._skin;
            this.owner.showani.visible = true;
            this.owner.showani.x = 722 + this.isBuyChoiceWp.x + 71;
            this.owner.showani.y = this.isBuyChoiceWp.y + 116 + 71;
            this.owner.ware.visible = true;
            Laya.Tween.to(this.owner.showani, { x: 296, y: 652, scaleX: 0, scaleY: 0 }, 800, Laya.Ease.quintIn, Laya.Handler.create(this, function () {
                _this9.owner.showani.visible = false;
                _this9.owner.showani.scale(1, 1);
                Laya.Tween.to(_this9.owner.ware, { alpha: 0 }, 400, Laya.Ease.quintIn, Laya.Handler.create(_this9, function () {
                    _this9.owner.ware.visible = false;
                    _this9.owner.ware.alpha = 1;
                }));
            }));

            Laya.timer.once(100, this, function () {
                _this9.buyList.splice(_this9.buyPresentIdx, 1);
                _this9.buyPresentIdx = 0;
                var newDetail = null;
                switch (detail.weaponType) {
                    case 3:
                        newDetail = "heavyList";
                        break;
                    case 2:
                        newDetail = "middleList";
                        break;
                    case 1:
                        newDetail = "lightList";
                        break;
                }
                var isNew = true;
                _this9[newDetail].forEach(function (element) {
                    if (element.weaponId == detail.weaponId && element.weaponLevel == detail.weaponLevel) {
                        element.num++;
                        isNew = false;
                    }
                });
                if (isNew) {
                    detail.num = 1;
                    _this9[newDetail].push(detail);
                }
                if (_this9.buyList.length > 0) {
                    _this9.owner.weapon.visible = true;
                    _this9.owner.buyBtn.visible = true;
                    _this9.owner.sellBtn.visible = true;
                } else {
                    _this9.owner.weapon.visible = false;
                    _this9.owner.buyBtn.visible = false;
                    _this9.owner.sellBtn.visible = false;
                }
                _this9.owner.buyList.array = _this9.buyList;
            });
        }
        //出售武装

    }, {
        key: "sellWp",
        value: function sellWp(choice) {
            var _this10 = this;

            var detail = this.currentSellWeapDetail;
            if (detail.weaponStar == 3 && !choice) {
                var obj = {
                    detail: this.currentSellWeapDetail,
                    type: "sell"
                };
                this.navigator.popup("weapon/StoreSure", obj);
                return;
            }
            PaoYa.Request.POST("martial_weapon_sale", { weaponId: detail.weaponId + "-" + detail.weaponLevel }, function (res) {
                PaoYa.DataCenter.user.gold = res.gold;
                _this10.owner.goldNum.text = res.gold;
            });

            var newDetail = null;
            switch (detail.weaponType) {
                case 3:
                    newDetail = "heavyList";
                    break;
                case 2:
                    newDetail = "middleList";
                    break;
                case 1:
                    newDetail = "lightList";
                    break;
            }
            var orderCarryOut = false;
            this[newDetail].forEach(function (element) {
                if (element.weaponId == detail.weaponId && element.weaponLevel == detail.weaponLevel && detail.num > 0 && !orderCarryOut) {
                    element.num--;
                    orderCarryOut = true;
                }
            });
            this.showWareList(this[newDetail]);
        }
        //刷新武器

    }, {
        key: "refresF",
        value: function refresF() {
            var _this11 = this;

            var num = null;
            num = this.isReadyRefrensh ? 0 : 1;
            if (PaoYa.DataCenter.user.diamond < Number(this.owner.needDiamon.text)) {
                this.navigator.popup("weapon/DiamondLack", 1);
                return;
            }
            PaoYa.DataCenter.user.diamond -= Number(this.owner.needDiamon.text);
            this.owner.diamondNum.text = PaoYa.DataCenter.user.diamond;
            this.isRefrshing = true;

            PaoYa.Request.POST("martial_shop_list", { refresh: num }, function (res) {
                Laya.timer.once(1000, _this11, function () {
                    _this11.isRefrshing = false;
                    _this11.owner.refreshTimeNum.visible = true;
                    _this11.downTimeStartF(res.refreshTime);
                });
                _this11.buyList = res.weaponList;
                _this11.buyPresentIdx = 0;
                if (_this11.buyList.length > 0) {
                    _this11.owner.weapon.visible = true;
                    _this11.owner.buyBtn.visible = true;
                    _this11.owner.sellBtn.visible = true;
                } else {
                    _this11.owner.weapon.visible = false;
                    _this11.owner.buyBtn.visible = false;
                    _this11.owner.sellBtn.visible = false;
                }
                _this11.owner.buyList.array = _this11.buyList;
            });
        }
    }]);

    return WeaponStoreControl;
}(PaoYa.Component);

exports.default = WeaponStoreControl;

},{}],45:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Swordsman = require("../../common/figure/Swordsman");

var _Swordsman2 = _interopRequireDefault(_Swordsman);

var _SwordsmanControl = require("../../common/figure/SwordsmanControl");

var _SwordsmanControl2 = _interopRequireDefault(_SwordsmanControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuyHero = function (_PaoYa$Dialog) {
    _inherits(BuyHero, _PaoYa$Dialog);

    function BuyHero() {
        _classCallCheck(this, BuyHero);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (BuyHero.__proto__ || Object.getPrototypeOf(BuyHero)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(BuyHero, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.closeBtn.on(Laya.Event.CLICK, this, this.close);
            this.buybtnTxt.font = "weaponDFont";
            this.buybtnTxt.scale(0.8, 0.8);
            this.buybtnTxt.pos(55, 10);

            this.needNum.text = this.params.rolePrice;
            this.needNum.font = "figureDetail";
            this.needNum.scale(1.5, 1.5);
            this.needNum.pos(755, 167);

            this.roleImg.skin = "remote/figure/role_" + this.params.roleId + ".png";

            this.buy.on(Laya.Event.CLICK, this, function () {
                if (PaoYa.DataCenter.user.gold < _this2.params.rolePrice) {
                    _this2.close();
                    _SwordsmanControl2.default.ins.popup("weapon/DiamondLack");
                    return;
                }
                PaoYa.Request.POST("martial_role_buy", { roleId: _this2.params.roleId }, function (res) {
                    _SwordsmanControl2.default.ins.owner.params.roleList.forEach(function (element) {
                        if (element.roleId == res.role.roleId) {
                            for (var key in element) {
                                element[key] = res.role[key];
                            }
                            _SwordsmanControl2.default.ins.owner.showDetail = element;
                        }
                    });
                    _SwordsmanControl2.default.ins.owner.initInfo();
                    _this2.close();
                });
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return BuyHero;
}(PaoYa.Dialog);

exports.default = BuyHero;

},{"../../common/figure/Swordsman":33,"../../common/figure/SwordsmanControl":34}],46:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoldLack = function (_PaoYa$Dialog) {
    _inherits(GoldLack, _PaoYa$Dialog);

    function GoldLack() {
        _classCallCheck(this, GoldLack);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (GoldLack.__proto__ || Object.getPrototypeOf(GoldLack)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(GoldLack, [{
        key: "onEnable",
        value: function onEnable() {
            this.btn.on(Laya.Event.CLICK, this, this.close);
            this.skillName.text = this.params.skillName;
            this.skillName.font = "figureDetail";
            this.skillName.scale(0.75, 0.75);
            this.skillName.x = (450 - this.skillName.width * 0.75) / 2;
            this.skillName.y = 130;

            this.skilldetail.text = "    " + this.params.skillDesc;
            this.skilldetail.letterSpacing = 4;

            this.sure.font = "weaponDFont";
            this.sure.scale(0.8, 0.8);
            this.sure.pos(55, 10);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return GoldLack;
}(PaoYa.Dialog);

exports.default = GoldLack;

},{}],47:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SkillDetail = function (_PaoYa$Dialog) {
    _inherits(SkillDetail, _PaoYa$Dialog);

    function SkillDetail() {
        _classCallCheck(this, SkillDetail);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (SkillDetail.__proto__ || Object.getPrototypeOf(SkillDetail)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(SkillDetail, [{
        key: "onEnable",
        value: function onEnable() {
            this.mask.on(Laya.Event.CLICK, this, this.close);
            this.skillName.text = this.params.skillName;
            this.skillName.font = "figureDetail";
            this.skillName.scale(0.75, 0.75);
            this.skillName.x = (450 - this.skillName.width * 0.75) / 2;

            this.unlock.text = this.params.skillUnlock + "\u7EA7\u89E3\u9501";
            this.skilldetail.text = "    " + this.params.skillDesc;
            this.skilldetail.letterSpacing = 4;
            this.cd.text = "\u51B7\u5374\uFF1A" + this.params.skillCd;
            this.cost.text = "\u6D88\u8017\uFF1A" + this.params.skillConsume + "\u5185\u529B";
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return SkillDetail;
}(PaoYa.Dialog);

exports.default = SkillDetail;

},{}],48:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _RefiningControl = require("../../common/refiner/RefiningControl");

var _RefiningControl2 = _interopRequireDefault(_RefiningControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Canlock = function (_PaoYa$Dialog) {
    _inherits(Canlock, _PaoYa$Dialog);

    function Canlock() {
        _classCallCheck(this, Canlock);

        return _possibleConstructorReturn(this, (Canlock.__proto__ || Object.getPrototypeOf(Canlock)).call(this));
    }

    _createClass(Canlock, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.title.font = "figureDetail";
            this.title.scale(0.8, 0.8);
            this.title.x = (543 - this.title.width) / 2;

            this.btn2Txt.font = "weaponDFont";
            this.btn2Txt.scale(0.7, 0.7);
            this.btn2Txt.pos(42, 15);

            this.btn2.on(Laya.Event.CLICK, this, function () {
                _this2.close();
            });

            var arr = this.params.refinerId.split(",");

            var ll = _RefiningControl2.default.ins.owner.params.refiner_list.length;
            var showList = [];
            for (var i = 0; i < arr.length; i++) {
                for (var j = 0; j < ll; j++) {
                    if (_RefiningControl2.default.ins.owner.params.refiner_list[j].id == arr[i]) {
                        showList.push(_RefiningControl2.default.ins.owner.params.refiner_list[j]);
                    }
                }
            }
            this.skillList.x = arr.length == 2 ? 75 : 152;
            this.skillList.renderHandler = new Laya.Handler(this, this.skillRender);
            this.skillList.array = showList;
            console.log(arr);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }, {
        key: "skillRender",
        value: function skillRender(cell, idx) {
            console.log(cell._dataSource);
            cell.skin = cell._dataSource.type ? "remote/refining/6.png" : "remote/refining/7.png";
            cell.getChildByName("refinerTxt").text = cell._dataSource.refinerName;
            cell.getChildByName("refinerTxt").font = "weaponDFont";
            cell.getChildByName("refinerTxt").scale(0.60, 0.60);
            cell.getChildByName("refinerTxt").pos(35, 12);

            cell.getChildByName("refinerLv").text = "LV." + this.params.refinerUnlock;
            cell.getChildByName("refinerLv").font = "weaponNFontT";
            cell.getChildByName("refinerLv").scale(0.5, 0.5);
            cell.getChildByName("refinerLv").pos(20, 93);
        }
    }]);

    return Canlock;
}(PaoYa.Dialog);

exports.default = Canlock;

},{"../../common/refiner/RefiningControl":38}],49:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DiamondLack = function (_PaoYa$Dialog) {
    _inherits(DiamondLack, _PaoYa$Dialog);

    function DiamondLack() {
        _classCallCheck(this, DiamondLack);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (DiamondLack.__proto__ || Object.getPrototypeOf(DiamondLack)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(DiamondLack, [{
        key: "onEnable",
        value: function onEnable() {
            this.mask.on(Laya.Event.CLICK, this, this.close);
            this.tipTxt.font = "weaponDFont";
            this.tipTxt.scale(0.7, 0.7);
            this.tipTxt.pos(45, 12);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return DiamondLack;
}(PaoYa.Dialog);

exports.default = DiamondLack;

},{}],50:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoldLack = function (_PaoYa$Dialog) {
    _inherits(GoldLack, _PaoYa$Dialog);

    function GoldLack() {
        _classCallCheck(this, GoldLack);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (GoldLack.__proto__ || Object.getPrototypeOf(GoldLack)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(GoldLack, [{
        key: "onEnable",
        value: function onEnable() {
            this.mask.on(Laya.Event.CLICK, this, this.close);
            this.tipTxt.font = "weaponDFont";
            this.tipTxt.scale(0.7, 0.7);
            this.tipTxt.pos(45, 12);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return GoldLack;
}(PaoYa.Dialog);

exports.default = GoldLack;

},{}],51:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponStoreControl = require("../../common/weapon/WeaponStoreControl");

var _WeaponStoreControl2 = _interopRequireDefault(_WeaponStoreControl);

var _DevourControl = require("../../common/refiner/DevourControl");

var _DevourControl2 = _interopRequireDefault(_DevourControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StoreSure = function (_PaoYa$Dialog) {
    _inherits(StoreSure, _PaoYa$Dialog);

    function StoreSure() {
        _classCallCheck(this, StoreSure);

        return _possibleConstructorReturn(this, (StoreSure.__proto__ || Object.getPrototypeOf(StoreSure)).call(this));
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
    }

    _createClass(StoreSure, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            // this.mask.on(Laya.Event.CLICK, this, this.close)
            this.btn1.on(Laya.Event.CLICK, this, function () {
                _this2.close();
            });

            this.btn4.on(Laya.Event.CLICK, this, function () {
                _this2.close();
            });

            this.btn2.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _WeaponStoreControl2.default.ins.refresF();
            });

            this.btn3.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _WeaponStoreControl2.default.ins.sellWp(1);
            });

            this.btn5.on(Laya.Event.CLICK, this, function () {
                _this2.close();
                _DevourControl2.default.ins.eatWp(1);
            });

            if (this.params.type == "buy") {
                this.btn1.visible = true;
                this.btn2.visible = true;
                this.btn3.visible = false;
                this.btn4.visible = false;
            } else {
                this.btn1.visible = false;
                this.btn2.visible = false;
                if (this.params.type == "refining") {
                    this.btn3.visible = false;
                    this.btn5.visible = true;
                } else {
                    this.btn3.visible = true;
                    this.btn5.visible = false;
                }

                this.btn4.visible = true;
            }

            this.btn1Txt.font = "weaponDFont";
            this.btn1Txt.scale(0.45, 0.45);
            this.btn4Txt.font = "weaponDFont";
            this.btn4Txt.scale(0.45, 0.45);
            this.btn2Txt.font = "weaponDFont";
            this.btn2Txt.scale(0.45, 0.45);
            this.btn3Txt.font = "weaponDFont";
            this.btn3Txt.scale(0.45, 0.45);
            this.btn5Txt.font = "weaponDFont";
            this.btn5Txt.scale(0.45, 0.45);
            this.currtWeaponLevel.font = "weaponNFontT";
            this.currtWeaponLevel.scale(0.7, 0.7);

            var showMarkUrl = null;
            switch (this.params.detail.weaponType) {
                case 3:
                    showMarkUrl = "local/common/type_1.png";
                    break;
                case 2:
                    showMarkUrl = "local/common/type_2.png";
                    break;
                case 1:
                    showMarkUrl = "local/common/type_3.png";
                    break;
            }
            this.showWeapon.skin = "remote/small_weapons/s_" + this.params.detail.weaponId + ".png";
            this.showMark.skin = showMarkUrl;
            this.currtWeaponLevel.text = "LV." + this.params.detail.weaponLevel;
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return StoreSure;
}(PaoYa.Dialog);

exports.default = StoreSure;

},{"../../common/refiner/DevourControl":36,"../../common/weapon/WeaponStoreControl":44}],52:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Tool = require("../../common/tool/Tool");

var _Tool2 = _interopRequireDefault(_Tool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockFifth = function (_PaoYa$Dialog) {
    _inherits(UnlockFifth, _PaoYa$Dialog);

    function UnlockFifth() {
        _classCallCheck(this, UnlockFifth);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockFifth.__proto__ || Object.getPrototypeOf(UnlockFifth)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockFifth, [{
        key: "onEnable",
        value: function onEnable() {
            this.mask.on(Laya.Event.CLICK, this, this.close);
            this.btn.on(Laya.Event.CLICK, this, function () {
                _Tool2.default.inviteFriend();
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockFifth;
}(PaoYa.Dialog);

exports.default = UnlockFifth;

},{"../../common/tool/Tool":40}],53:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _WeaponHouseControl = require("../../common/weapon/WeaponHouseControl");

var _WeaponHouseControl2 = _interopRequireDefault(_WeaponHouseControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockFour = function (_PaoYa$Dialog) {
    _inherits(UnlockFour, _PaoYa$Dialog);

    function UnlockFour() {
        _classCallCheck(this, UnlockFour);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockFour.__proto__ || Object.getPrototypeOf(UnlockFour)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockFour, [{
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            this.mask.on(Laya.Event.CLICK, this, this.close);
            this.btn.on(Laya.Event.CLICK, this, function () {
                _WeaponHouseControl2.default.ins.params.weaponGridNum += 1;
                _WeaponHouseControl2.default.ins.getMyUserDetailList();
                _WeaponHouseControl2.default.ins.owner.userWeaponList.array = _WeaponHouseControl2.default.ins.myUserDetailList;
                PaoYa.Request.POST("martial_buy_grid", {}, function (res) {
                    _WeaponHouseControl2.default.ins.owner.diamondNum.text = res.diamond;
                });

                _this2.close();
            });
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockFour;
}(PaoYa.Dialog);

exports.default = UnlockFour;

},{"../../common/weapon/WeaponHouseControl":42}],54:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UnlockTips = function (_PaoYa$Dialog) {
    _inherits(UnlockTips, _PaoYa$Dialog);

    function UnlockTips() {
        _classCallCheck(this, UnlockTips);

        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        var _this = _possibleConstructorReturn(this, (UnlockTips.__proto__ || Object.getPrototypeOf(UnlockTips)).call(this));

        var intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        var numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        var strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        var boolType = true;
        // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
        return _this;
    }

    _createClass(UnlockTips, [{
        key: "onEnable",
        value: function onEnable() {
            this.mask.on(Laya.Event.CLICK, this, this.close);
        }
    }, {
        key: "onDisable",
        value: function onDisable() {}
    }]);

    return UnlockTips;
}(PaoYa.Dialog);

exports.default = UnlockTips;

},{}],55:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BeanBox = function (_PaoYa$Component) {
    _inherits(BeanBox, _PaoYa$Component);

    function BeanBox() {
        _classCallCheck(this, BeanBox);

        return _possibleConstructorReturn(this, (BeanBox.__proto__ || Object.getPrototypeOf(BeanBox)).apply(this, arguments));
    }

    _createClass(BeanBox, [{
        key: 'onAwake',

        /** @prop {name:boxType,tips:"1-金币，2-钻石",type:Option,option:"1,2",default:1}*/
        value: function onAwake() {
            this.boxType = this.boxType || '1';
            this.integBg = this.owner.getChildByName('beanBg');
            this.labelBg = this.owner.getChildByName('labelBgCircle');
            this.skinLeft = this.owner.getChildByName("imgLeft");
            this.label = this.owner.getChildByName("label");
            this.changeBox();
        }
    }, {
        key: 'changeBox',
        value: function changeBox() {
            switch (this.boxType) {
                case '1':
                    PaoYa.DataCenter.gold.addObserver(this, this.handleGoldChange);
                    break;
                case '2':
                    this.skinLeft.skin = 'local/common/diamond.png';
                    this.skinLeft.y = -5;
                    this.skinLeft.size(60, 60);
                    PaoYa.DataCenter.diamond.addObserver(this, this.handleDiamondChange);
                    break;

            }
        }
    }, {
        key: 'onClick',
        value: function onClick() {
            switch (this.boxType) {
                case '1':
                    console.log('点击金币');
                    break;
                case '2':
                    console.log('点击砖石');
                    break;
            }
        }
    }, {
        key: 'handleDiamondChange',
        value: function handleDiamondChange(value) {
            addNumberUnit(value) == 'undefined' ? this.label.text = '' : this.label.text = addNumberUnit(value);
        }
    }, {
        key: 'handleGoldChange',
        value: function handleGoldChange(value) {
            addNumberUnit(value) == 'undefined' ? this.label.text = '' : this.label.text = addNumberUnit(value);
        }
    }, {
        key: 'onDestroy',
        value: function onDestroy() {
            PaoYa.DataCenter.diamond.removeObserver(this, this.handleIntegralChange);
            PaoYa.DataCenter.gold.removeObserver(this, this.handleGoldChange);
        }
    }]);

    return BeanBox;
}(PaoYa.Component);

exports.default = BeanBox;

function addNumberUnit(num) {
    switch (true) {
        case num >= 10000 && num < 100000000:
            var integ = num / 10000;
            return Math.floor(integ * 100) / 100 + '万';
            break;
        case num >= 100000000:
            var integ1 = num / 100000000;
            return Math.floor(integ1 * 100) / 100 + '亿';
            break;
        default:
            return num + '';
            break;
    }
};

},{}]},{},[3]);
