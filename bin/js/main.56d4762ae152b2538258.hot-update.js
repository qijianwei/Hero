webpackHotUpdate("main",{

/***/ "./src/gamescripts/GameControl.js":
/*!****************************************!*\
  !*** ./src/gamescripts/GameControl.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GameControl; });\n/* harmony import */ var _prefab_Weapon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefab/Weapon */ \"./src/gamescripts/prefab/Weapon.js\");\n/* harmony import */ var _prefab_WeaponBar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prefab/WeaponBar */ \"./src/gamescripts/prefab/WeaponBar.js\");\n/* harmony import */ var _prefab_Player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prefab/Player */ \"./src/gamescripts/prefab/Player.js\");\n/* harmony import */ var _prefab_MPBar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prefab/MPBar */ \"./src/gamescripts/prefab/MPBar.js\");\n/* harmony import */ var _prefab_HPBar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prefab/HPBar */ \"./src/gamescripts/prefab/HPBar.js\");\n/* harmony import */ var _WeaponManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WeaponManager */ \"./src/gamescripts/WeaponManager.js\");\n/* harmony import */ var _prefab_Skill__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./prefab/Skill */ \"./src/gamescripts/prefab/Skill.js\");\n/* harmony import */ var _prefab_Dodge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./prefab/Dodge */ \"./src/gamescripts/prefab/Dodge.js\");\n/* harmony import */ var _prefab_PlayerState__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prefab/PlayerState */ \"./src/gamescripts/prefab/PlayerState.js\");\n/* harmony import */ var _prefab_PlayerSkill__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./prefab/PlayerSkill */ \"./src/gamescripts/prefab/PlayerSkill.js\");\n/* harmony import */ var _prefab_WeaponSkill__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./prefab/WeaponSkill */ \"./src/gamescripts/prefab/WeaponSkill.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass GameControl extends PaoYa.Component {\r\n    /** @prop {name:weapon,tips:\"武器预制体对象\",type:Prefab}*/\r\n    /** @prop {name:weaponBar,tips:\"武器预制体对象\",type:Prefab}*/\r\n    /** @prop {name:player,tips:\"人物预制体对象\",type:Prefab} */\r\n    /** @prop {name:weaponSkill,tips:\"兵器技能名称预制体对象\",type:Prefab} */\r\n    /** @prop {name:selfHP,tips:'自己的血条',type:Node}*/\r\n    /** @prop {name:selfMP,tips:'自己的体力',type:Node}*/\r\n    /** @prop {name:otherHP,tips:'对方的血条',type:Node}*/\r\n    /** @prop {name:otherMP,tips:'对方的体力',type:Node}*/\r\n    /** @prop {name:playerState,tips:'人物状态',type:Node}*/\r\n\r\n    constructor() {\r\n        super();\r\n        GameControl.instance = this;\r\n        Laya.MouseManager.multiTouchEnabled = false;\r\n    }\r\n    onDisappear() {\r\n        Laya.MouseManager.enabled = true;\r\n    }\r\n    onAwake() {\r\n        Laya.Pool.clearBySign('weapon');\r\n        Laya.MouseManager.enabled = true;\r\n\r\n        this.params = this.owner.params;\r\n        //暂定\r\n        this.gameType = \"pass\";\r\n        this.passNum = 1;\r\n\r\n        this.weaponList = this.params.weaponList;\r\n        this.robotWeaponList = this.params.robotWeaponList;\r\n        this.dealParams(this.weaponList)\r\n        this.dealParams(this.robotWeaponList)\r\n\r\n\r\n        this.selfMultiMP = 1; //兵器造成的内力消耗倍数\r\n        this.otherMultiMP = 1; //兵器造成的内力消耗倍数\r\n        this.weaponsBarArr = []; //存放兵器操作Bar;提供全局暂停和恢复CD功能；还有置灰功能\r\n\r\n        //暂时这么用;可能要用全局状态管理器\r\n        this.selfWeapons = [];\r\n        this.otherWeapons = [];\r\n        this.dodgeComp = this.owner.dodge.getComponent(_prefab_Dodge__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\r\n        this.dodgeOwner = this.dodgeComp.owner;\r\n        this.playerStateComp = this.playerState.getComponent(_prefab_PlayerState__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\r\n        this.initWeaponsBar();\r\n        this.initPlayer(true);\r\n        this.initPlayer(false);\r\n        this.initSkill();\r\n        this.owner.setInfo({\r\n            name: '阿强',\r\n            icon: 'remote/game/avstar_1.png'\r\n        }, true);\r\n        this.owner.setInfo({\r\n            name: '阿强',\r\n            icon: 'remote/game/avstar_1.png'\r\n        }, false);\r\n        this.selfSkillText = this.owner.selfSkillText;\r\n        this.otherSkillText = this.owner.otherSkillText;\r\n        this.selfSkillTextComp = this.selfSkillText.getComponent(_prefab_PlayerSkill__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\r\n        this.otherSkillTextComp = this.otherSkillText.getComponent(_prefab_PlayerSkill__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\r\n        Laya.timer.once(5000, this, () => {\r\n            Laya.timer.once(1000, this, this.startSelect);\r\n            //this.owner.selfSkillText.getComponent(PlayerSkill).setSkillText(\"三仙剑\")\r\n        })\r\n        //机器人开始\r\n\r\n        //画出三条运动轨迹，便于调试\r\n        /*    this.curvature = 0.0008;\r\n           this.drawParabola();\r\n           this.curvature = 0.0015;\r\n           this.drawParabola();\r\n           this.curvature = 0.0025;\r\n           this.drawParabola(); */\r\n\r\n    }\r\n    //游戏重新开始\r\n    restart() {\r\n\r\n    }\r\n    drawParabola() {\r\n        let space = 5;\r\n        let pathArr = [];\r\n        this.startPos = {\r\n            x: 180,\r\n            y: 450\r\n        }\r\n        this.endPos = {\r\n            x: 1150,\r\n            y: 450\r\n        }\r\n        pathArr.push([\"moveTo\", 0, 0]);\r\n\r\n\r\n        // X轴Y轴的偏移总量\r\n        this.driftX = this.endPos.x - this.startPos.x;\r\n        this.driftY = this.endPos.y - this.startPos.y;\r\n        this.b = (this.driftY - this.curvature * this.driftX * this.driftX) / this.driftX;\r\n        for (let i = 5; i <= this.driftX; i += space) {\r\n            let x = i;\r\n            let y = Math.floor(this.curvature * x * x + this.b * x);\r\n            pathArr.push([\"lineTo\", x, y]);\r\n        }\r\n        pathArr.push([\"closePath\"]);\r\n        // this.owner.spDraw.graphics.clear();\r\n        this.owner.spDraw.graphics.drawPath(this.startPos.x, this.startPos.y, pathArr, null, {\r\n            strokeStyle: \"#ff0000\",\r\n            lineWidth: 2,\r\n            lineCap: \"round\"\r\n        })\r\n        //this.owner.spDraw.graphics.drawPath(340,450,)\r\n\r\n    }\r\n    dealParams(weaponList) {\r\n        for (var i = 0; i < weaponList.length; i++) {\r\n            let weapon = weaponList[i];\r\n            let weaponSkills = weapon['skills'];\r\n            for (var j = 0; j < weaponSkills.length; j++) {\r\n                if (weaponSkills[j].skillType == 1) {\r\n                    weapon.activeSkill = JSON.parse(JSON.stringify(weaponSkills[j]))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        this.onNotification(_prefab_WeaponBar__WEBPACK_IMPORTED_MODULE_1__[\"default\"].CLICK, this, this.weaponBarClickHandler)\r\n        this.onNotification(_prefab_Skill__WEBPACK_IMPORTED_MODULE_6__[\"default\"].CLICK, this, this.skillClickHandler);\r\n        this.gameState='start';\r\n    }\r\n    //测试内力够不够\r\n    onUpdate() {\r\n        if (!this.weaponsBarArr.length || !this.selfPlayer) {\r\n            return;\r\n        }\r\n        if (this.selfPlayer.comp.dodge) {\r\n\r\n            return;\r\n        }\r\n        let curMP = this.selfPlayer.comp.MPComp.curMP;\r\n        let originMP = this.selfPlayer.comp.MPComp.originMP;\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            if (weaponBarComp.weaponConsume > curMP) {\r\n                if (!weaponBarComp.freezeing) {\r\n                    weaponBarComp.owner.gray = true;\r\n                }\r\n            } else {\r\n                weaponBarComp.owner.gray = false;\r\n            }\r\n        })\r\n\r\n        if (curMP < originMP * 0.2) {\r\n            if (!this.dodgeComp.freezeing) {\r\n                this.dodgeOwner.gray = true;\r\n            }\r\n        } else {\r\n            this.dodgeOwner.gray = false;\r\n        }\r\n        if (!this.skillOwner1.disabled) {\r\n            if (curMP < this.selfSkills[0].skillConsume * originMP) {\r\n                if (!this.skillScr1.freezeing) {\r\n                    this.skillOwner1.gray = true;\r\n                }\r\n            } else {\r\n                this.skillOwner1.gray = false;\r\n            }\r\n        }\r\n        if (!this.skillOwner2.disabled) {\r\n            if (curMP < this.selfSkills[2].skillConsume * originMP) {\r\n                if (!this.skillScr1.freezeing) {\r\n                    this.skillOwner2.gray = true;\r\n                }\r\n            } else {\r\n                this.skillOwner2.gray = false;\r\n            }\r\n        }\r\n    }\r\n    //初始化双方兵器库\r\n    initWeaponsBar() {\r\n        let owner = this.owner,\r\n            boxWeapon = owner.boxWeapon;\r\n\r\n        for (let i = 0, len = this.weaponList.length; i < len; i++) {\r\n            //暂时\r\n            // if()\r\n            let weaponBar = this.weaponBar.create.call(this.weaponBar);\r\n            let weaponBarComp = weaponBar.getComponent(_prefab_WeaponBar__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\r\n            weaponBarComp.params = this.weaponList[i];\r\n            weaponBarComp.isSelf = true;\r\n            weaponBarComp.index = i;\r\n            this.weaponsBarArr.push(weaponBarComp);\r\n            boxWeapon.addChild(weaponBar)\r\n        }\r\n        //初始化机器人的兵器\r\n        //console.log(this.weaponsBarArr);\r\n        this.weaponManager = new _WeaponManager__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.robotWeaponList);\r\n    }\r\n    initPlayer(isSelf) {\r\n        let name = isSelf ? 'self' : 'other';\r\n        let role = isSelf ? 'role' : 'robotRole';\r\n        let player = Laya.Pool.getItemByCreateFun('player', this.player.create, this.player);\r\n        let spCollide = this.owner[name + 'Collide'];\r\n        let spX = spCollide.x,\r\n            spY = spCollide.y,\r\n            spW = spCollide.width,\r\n            spH = spCollide.height;\r\n\r\n        //let playerScr=player.getComponent(Player)\r\n        let component = player.getComponent(_prefab_Player__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\r\n        component.isSelf = isSelf;\r\n        component.attr = this.params[role];\r\n        if (isSelf) {\r\n            this.selfSkills = this.params[role].skills\r\n        }\r\n        component.activeSkills = [];\r\n        //把人物主动技能挑选出来\r\n        for (let i = 0, len = this.params[role].skills.length; i < len; i++) {\r\n            if (this.params[role].skills[i].skillType == 1) {\r\n                component.activeSkills.push(this.params[role].skills[i]);\r\n            }\r\n        }\r\n        console.error('人物技能');\r\n        console.error(component.activeSkills)\r\n\r\n        //component.attr.skillWeapon.params={};\r\n        if (component.attr.skillWeapon) {\r\n            component.attr.skillWeapon.activeSkill = component.attr.skillWeapon.skills[0];\r\n        }\r\n       // console.error(component.attr.skillWeapon)\r\n        component.MPComp = this[name + 'MP'].getComponent(_prefab_MPBar__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\r\n        component.HPComp = this[name + 'HP'].getComponent(_prefab_HPBar__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\r\n        component.MPComp.initBar(this.params[role].roleMp);\r\n        component.HPComp.initBar(this.params[role].roleHp);\r\n        component.isSelf = isSelf;\r\n        if (isSelf) {\r\n            player.pos(220, 560);\r\n        } else {\r\n            player.pos(1120, 560);\r\n            player.scaleX = -1;\r\n        }\r\n        component.collidePoint = [{\r\n            x: spX,\r\n            y: spY\r\n        }, {\r\n            x: spX + spW,\r\n            y: spY\r\n        }, {\r\n            x: spX + spW,\r\n            y: spY + spH\r\n        }, {\r\n            x: spX,\r\n            y: spY + spH\r\n        }]\r\n\r\n        this.owner.addChild(player);\r\n        this[name + 'Player'] = {\r\n            node: player,\r\n            comp: component\r\n        }\r\n    }\r\n    initSkill() {\r\n        let owner = this.owner;\r\n        let activeSkills = this.selfPlayer.comp.activeSkills;\r\n        for (let i = 1; i < 3; i++) {\r\n            this['skillScr' + i] = owner['skill' + i].getComponent(_prefab_Skill__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\r\n            this['skillScr' + i].init(activeSkills[i - 1]);\r\n            this['skillOwner' + i] = this['skillScr' + i].owner;\r\n        }\r\n    }\r\n    skillClickHandler(name) {\r\n        if (name == \"skill1\") {\r\n            /*    this.allPause();\r\n               return; */\r\n            this.skillWithWeapon(true);\r\n        } else if (name == \"skill2\") {\r\n            /*  this.allResume();\r\n             return; */\r\n            this.skillWithoutWeapon(true);\r\n        }\r\n\r\n    }\r\n    skillWithWeapon(isSelf) {\r\n        let name = isSelf ? 'self' : 'other';\r\n        let roleComp = this[name + 'Player'].comp,\r\n            skillWeapon = JSON.parse(JSON.stringify(roleComp.attr.skillWeapon));\r\n        let skillInfo = this[name + 'Player'].comp.activeSkills[0];\r\n        let originMP = roleComp.MPComp.originMP;\r\n        let consumeMP = skillInfo.skillConsume * originMP;\r\n        if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {\r\n            console.warn(name + 'Player' + \"__体力不足\");\r\n            if (isSelf) {\r\n                this.showTips(\"内力不足\")\r\n            }\r\n            return;\r\n        }\r\n        if (isSelf) {\r\n            this.skillScr1.startT()\r\n        }\r\n        this.showSkillText(isSelf, skillInfo.skillName);\r\n        skillWeapon.isSelf = isSelf;\r\n        this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);\r\n        //this[name + 'Player'].comp.showSkill1();\r\n        skillWeapon.skillEffect = true;\r\n        switch (skillWeapon.activeSkill.skillId) {\r\n            case 88:\r\n                let addCritProb = skillWeapon.activeSkill.skillConfig.critProb;\r\n                this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb + addCritProb;\r\n                break;\r\n            case 89:\r\n                break;\r\n            case 90:\r\n                break;\r\n        }\r\n        //先展示技能，再展示攻击，再发射兵器\r\n        this[name + 'Player'].comp.showSkill1();\r\n        this[name + 'Player'].comp.skillCallback = () => {\r\n            this.weaponLaunch(skillWeapon);\r\n        }\r\n    }\r\n    skillWithoutWeapon(isSelf) {\r\n        let name = isSelf ? 'self' : 'other';\r\n        let skillInfo = this[name + 'Player'].comp.activeSkills[1];\r\n        let originMP = this[name + 'Player'].comp.MPComp.originMP;\r\n        let consumeMP = skillInfo.skillConsume * originMP;\r\n        if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {\r\n            console.warn(name + 'Player' + \"__体力不足\");\r\n            if (isSelf) {\r\n                this.showTips(\"内力不足\")\r\n            }\r\n            return;\r\n        }\r\n        if (isSelf) {\r\n            this.skillScr2.startT()\r\n        }\r\n        this[name + 'Player'].comp.MPComp.changeMP(-consumeMP);\r\n        this[name + 'Player'].comp.showSkill2(); //人物技能2展示\r\n        this.showSkillText(isSelf, skillInfo.skillName);\r\n        switch (skillInfo.skillId) {\r\n            case 33:\r\n                this.allWeaponsUnfreeze(name, skillInfo);\r\n                break;\r\n            case 36:\r\n                let t = skillInfo.skillConfig.time,\r\n                    perMP = skillInfo.skillConfig.recoverMp,\r\n                    originHP = this[name + 'Player'].comp.HPComp.originHP,\r\n                    resumeHP = skillInfo.skillConfig.recoverHp;\r\n                this[name + 'Player'].comp.changePerMp(t * 1000, perMP);\r\n                this[name + 'Player'].comp.HPComp.changeHP(originHP * resumeHP);\r\n                Laya.timer.once(t * 1000, this, () => {\r\n                    this[name + 'Player'].comp.removeSkill2();\r\n                })\r\n                break;\r\n            case 39:\r\n                /* this[name+'Player'].comp.changePerMp(); */\r\n                this[name + 'MultiMP'] = skillInfo.skillConfig.consumeMp;\r\n                console.error('内力消耗倍数:', skillInfo.skillConfig.consumeMp)\r\n                Laya.timer.once(skillInfo.skillConfig.time * 1000, this, () => {\r\n                    console.error('内力消耗倍数恢复:')\r\n                    this[name + 'MultiMP'] = 1;\r\n                    this[name + 'Player'].comp.removeSkill2();\r\n                })\r\n                break;\r\n            case 45:\r\n                break;\r\n        }\r\n\r\n    }\r\n    allWeaponsUnfreeze(name, skillInfo) {\r\n        let time = skillInfo.skillConfig.time * 1000;\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            weaponBarComp.endCD(); //探讨要不要\r\n            weaponBarComp.setCdTime(0)\r\n        })\r\n\r\n        Laya.timer.once(time, this, () => {\r\n            this.weaponsBarArr.forEach((weaponBarComp) => {\r\n                weaponBarComp.setCdTime(weaponBarComp.originCdTime)\r\n            })\r\n            this[name + 'Player'].comp.removeSkill2();\r\n        })\r\n    }\r\n    //所有兵器选择框和技能框置灰\r\n    allBtnsLock() {\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            weaponBarComp.owner.gray = true;\r\n        })\r\n        this.dodgeOwner.gray = true;\r\n        this.skillOwner1.gray = true;\r\n        this.skillOwner2.gray = true;\r\n    }\r\n    //所有兵器选择框和技能框置灰\r\n    allBtnsUnlock() {\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            weaponBarComp.owner.gray = false;\r\n        })\r\n        this.dodgeOwner.gray = false;\r\n        this.skillOwner1.gray = false;\r\n        this.skillOwner2.gray = false;\r\n    }\r\n    //所有暂停，除了出技能的人\r\n    allPause(isSelf) {\r\n        this.selfWeapons.forEach((weapon) => {\r\n            weapon.pause();\r\n        })\r\n        this.otherWeapons.forEach((weapon) => {\r\n            weapon.pause();\r\n        })\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            weaponBarComp.pause();\r\n        })\r\n        if (isSelf) {\r\n            this.otherPlayer.comp.skeleton.paused()\r\n            this.otherPlayer.node.zOrder = 100;\r\n            this.selfPlayer.node.zOrder = 101;\r\n            this.selfSkillText.zOrder = 103;\r\n        } else {\r\n            this.selfPlayer.comp.skeleton.paused();\r\n            this.otherPlayer.node.zOrder = 101;\r\n            this.selfPlayer.node.zOrder = 100;\r\n        }\r\n\r\n        Laya.timer.clear(this, this.startSelect);\r\n        this.selfPlayer.comp.MPComp.pause();\r\n        this.otherPlayer.comp.MPComp.pause();\r\n        this.skillScr1.pause();\r\n        this.skillScr2.pause();\r\n        this.dodgeComp.pause();\r\n    }\r\n    allResume(isSelf) {\r\n        this.selfWeapons.forEach((weapon) => {\r\n            weapon.resume();\r\n        })\r\n        this.otherWeapons.forEach((weapon) => {\r\n            weapon.resume();\r\n        })\r\n        this.weaponsBarArr.forEach((weaponBarComp) => {\r\n            weaponBarComp.resume();\r\n        })\r\n        if (isSelf) {\r\n            this.otherPlayer.comp.skeleton.resume()\r\n            this.selfSkillText.zOrder = 1;\r\n        } else {\r\n            this.selfPlayer.comp.skeleton.resume()\r\n        }\r\n        Laya.timer.once(1000, this, this.startSelect);\r\n        this.selfPlayer.comp.MPComp.resume();\r\n        this.otherPlayer.comp.MPComp.resume();\r\n        this.skillScr1.resume();\r\n        this.skillScr2.resume();\r\n        this.dodgeComp.resume();\r\n    }\r\n    startSelect() {\r\n        let sWeapon = this.weaponManager.seletedWeapon();\r\n        let curMp = this.otherPlayer.comp.MPComp.curMP;\r\n        if (curMp >= sWeapon.params.weaponConsume) {\r\n            if (this.otherPlayer.comp.canAction) {\r\n                sWeapon.isSelf = false;\r\n                sWeapon.selectedHandler();\r\n                this.weaponBarClickHandler(sWeapon);\r\n            }else{\r\n                console.error(\"无法动弹\")\r\n            }\r\n            Laya.timer.once(5000, this, this.startSelect);\r\n        } else {\r\n            Laya.timer.once(500, this, this.startSelect);\r\n        }\r\n    }\r\n    showTips(value) {\r\n        this.playerStateComp.setStateText(value);\r\n    }\r\n    showSkillText(isSelf, value) {\r\n        let name = isSelf ? 'self' : 'other';\r\n        this[name + 'SkillTextComp'].setSkillText(value);\r\n    }\r\n    //兵器点击后我方表现\r\n    weaponBarClickHandler(targetComp) {\r\n        //体力不够\r\n        let name = targetComp.isSelf ? 'self' : 'other';\r\n        let consumeMP = targetComp.weaponConsume;\r\n        if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {\r\n\r\n            if (targetComp.isSelf) {\r\n                console.warn(name + 'Player' + \"__体力不足\");\r\n                this.playerStateComp.setStateText(\"内力不足\")\r\n            }\r\n            return;\r\n        }\r\n        this[name + 'Player'].comp.MPComp.changeMP(-consumeMP * this[name + 'MultiMP']);\r\n        //人物表现\r\n        if (this.isSelf) {\r\n            console.error('用户发射武器........')\r\n        }\r\n\r\n        this[name + 'Player'].comp.attr.calcCritProb = this[name + 'Player'].comp.attr.roleCritProb;\r\n        //判断是否触发兵器技能\r\n        let skill = targetComp.params.activeSkill;\r\n        let skillType = skill.skillType,\r\n            status = skill.status,\r\n            skillId = skill.skillId,\r\n            prob = skill.skillProb;\r\n        /*<---------- 测试用例start  */\r\n        /*   if (targetComp.isSelf && targetComp.params.weaponType == 1) {\r\n             let testId = 43;\r\n\r\n             let tempArr = [{\r\n                 skillId: 43,\r\n                 weaponId: ['d001_1', \"d005_2\", \"d007_2\", \"d008_2\", \"d009_2\", \"d011_2\", \"d012_2\"].randomItem\r\n             }, {\r\n                 skillId: 44,\r\n                 weaponId: \"d013_3\"\r\n             }, {\r\n                 skillId: 45,\r\n                 weaponId: \"d009_2\"\r\n             }, {\r\n                 skillId: 46,\r\n                 weaponId: \"d014_3\"\r\n             }, {\r\n                 skillId: 47,\r\n                 weaponId: \"d006_2\"\r\n             }, {\r\n                 skillId: 48,\r\n                 weaponId: \"d006_2\"\r\n             }, {\r\n                 skillId: 49,\r\n                 weaponId: \"z009_2\"\r\n             }, {\r\n                 skillId: 53,\r\n                 weaponId: [\"z001_1\", \"z006_2\", \"z011_2\"].randomItem\r\n             }, {\r\n                 skillId: 54,\r\n                 weaponId: [\"z004_2\", \"z008_2\"].randomItem\r\n             }, {\r\n                 skillId: 55,\r\n                 weaponId: \"z015_3\"\r\n             }, {\r\n                 skillId: 60,\r\n                 weaponId: 'g014_3'\r\n             }, {\r\n                 skillId: 56,\r\n                 weaponId: [\"g001_1\", \"g007_2\", \"g008_2\", \"g011_2\"].randomItem\r\n             }, {\r\n                 skillId: 57,\r\n                 weaponId: \"g010_2\"\r\n             }, {\r\n                 skillId: 59,\r\n                 weaponId: [\"z007_2\", \"g009_2\"].randomItem\r\n             }, {\r\n                 skillId: 61,\r\n                 weaponId: \"g013_3\"\r\n             }, {\r\n                 skillId: 62,\r\n                 weaponId: [\"d002_1\", \"d010_2\", \"z003_1\", \"g005_2\", \"g012_2\"].randomItem\r\n             }];\r\n             let tempWeaponInfo = {};\r\n             for (let i = 0; i < tempArr.length; i++) {\r\n                 if (testId == tempArr[i].skillId) {\r\n                     tempWeaponInfo = tempArr[i];\r\n                     break;\r\n                 }\r\n             };\r\n\r\n             let {\r\n                 skillId,\r\n                 weaponId\r\n             } = tempWeaponInfo;\r\n             skill.skillId = skillId;\r\n             targetComp.params.weaponId = weaponId;\r\n             console.error('释放特技:', skill.skillId)\r\n             switch (skill.skillId) {\r\n                 case 43:\r\n                     skill.skillConfig = {\r\n                         weaponNum: 2\r\n                     }\r\n                     break;\r\n                 case 44:\r\n                     skill.skillConfig = {\r\n                         weaponNum: 3\r\n                     }\r\n                     break;\r\n                 case 45:\r\n                     skill.skillConfig = {\r\n                         poison: \"6-60\"\r\n                     };\r\n                     break;\r\n                 case 46:\r\n                     skill.skillConfig = {\r\n                         poison: \"6-210\"\r\n                     };\r\n                     break;\r\n                 case 47:\r\n                     skill.skillConfig = {\r\n                         hurt: 3\r\n                     };\r\n                     break;\r\n                 case 48:\r\n                     skill.skillConfig = {\r\n                         poison: 5\r\n                     };\r\n                     break;\r\n                 case 53:\r\n                     skill.skillConfig = {\r\n                         stealHp: 1\r\n                     }\r\n                     break;\r\n                 case 54:\r\n                     skill.skillConfig = {\r\n                         stealMp: 0.4\r\n                     }\r\n                     break;\r\n                 case 55:\r\n                     skill.skillConfig = {\r\n                         recoverDown: \"5-0.4\"\r\n                     }\r\n                     break;\r\n                 case 56:\r\n                     skill.skillConfig = {\r\n                         hurt: 1.5\r\n                     }\r\n                     break;\r\n                 case 57:\r\n                     skill.skillConfig = {\r\n                         hurt: 2.5\r\n                     }\r\n                     break;\r\n                 case 60:\r\n                     skill.skillConfig = {\r\n                         way: 4\r\n                     }\r\n                     break;\r\n                 case 61:\r\n                     skill.skillConfig = {\r\n                         hurt: 3.5\r\n                     }\r\n                     break;\r\n                 case 62:\r\n                     skill.skillConfig = {\r\n                         durable: 2\r\n                     }\r\n                     break;\r\n             }\r\n         }  */\r\n        /*<---------- 测试用例end----------> */\r\n        let params = JSON.parse(JSON.stringify(targetComp.params)); //深拷贝,便于修改\r\n        params.skillEffect = false;\r\n        params.isSelf = targetComp.isSelf;\r\n        if (skillType == 1 && status == 1) {\r\n            let random = Math.floor(Math.random() * 100 + 1);\r\n            if (random <= 100) {\r\n                /* 区分哪些是影响自身表现的，哪些是影响对手伤害的 */\r\n                if (skillId == 58) {\r\n                    targetComp.startT(200); //快速冷却     \r\n                } else {\r\n                    //正常开始技能冷却\r\n                    targetComp.startT();\r\n                }\r\n                params.skillEffect = true;\r\n                this[name + 'Player'].comp.attackEffect(params.skillEffect); //兵器技能是否触发\r\n                this[name + 'Player'].comp.attackCallback = () => {\r\n                    this.weaponWithSkills(params, skillId);\r\n                }\r\n                return;\r\n            } else {\r\n                console.warn('不好意思,没有触发技能')\r\n            }\r\n        }\r\n\r\n        this[name + 'Player'].comp.attackEffect(false);\r\n        this[name + 'Player'].comp.attackCallback = () => {\r\n            this.weaponLaunch(params);\r\n        }\r\n        //正常开始技能冷却\r\n        targetComp.startT();\r\n\r\n    }\r\n    weaponLaunch(params, deltaT) {\r\n        let name = params.isSelf ? 'self' : 'other';\r\n        let weapon = Laya.Pool.getItemByCreateFun(\"weapon\", this.weapon.create, this.weapon);\r\n        let weaponComp = weapon.getComponent(_prefab_Weapon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n        weaponComp.weaponType=params.weaponType;\r\n        weapon.params = params;\r\n     /*    console.log(weapon);\r\n        console.log(weaponComp)\r\n        */\r\n        weaponComp.isSelf = params.isSelf;\r\n        if (params.isSelf) {\r\n            weapon.pos(280, 450)\r\n        } else {\r\n            weapon.pos(1050, 450);\r\n        }\r\n\r\n        //暂定\r\n        if (deltaT) {\r\n            Laya.timer.once(deltaT, this, () => {\r\n                this.owner.addChild(weapon);\r\n                this[name + 'Weapons'].push(weaponComp);\r\n            });\r\n        } else {\r\n            this.owner.addChild(weapon);\r\n            this[name + 'Weapons'].push(weaponComp);\r\n        }\r\n    }\r\n  \r\n    //带着技能发射\r\n\r\n    weaponWithSkills(params, skillId) {\r\n        let skillConfig = params.activeSkill.skillConfig;\r\n        let skillName = params.activeSkill.skillName;\r\n        let hurt = skillConfig.hurt;\r\n        let durable = skillConfig.durable;\r\n        params.skillEffect = true; //代表技能是触发的\r\n        let weaponSkillBox = Laya.Pool.getItemByCreateFun('weaponSkillBox', this.weaponSkill.create, this.weaponSkill);\r\n        weaponSkillBox.params = {\r\n            skillName: skillName,\r\n            isSelf: params.isSelf\r\n        }\r\n        if (params.isSelf) {\r\n            weaponSkillBox.pos(-164, 189)\r\n        } else {\r\n            weaponSkillBox.pos(1498, 189)\r\n        }\r\n        this.owner.addChild(weaponSkillBox);\r\n        switch (skillId) {\r\n            case 43:\r\n            case 44:\r\n                let weaponNum = skillConfig.weaponNum;\r\n\r\n                console.error(\"修改后的值:\", params.weaponAttack)\r\n                this.weaponLaunch(params);\r\n                for (var i = 0; i < weaponNum - 1; i++) {\r\n                    this.weaponLaunch(params, 350);\r\n                }\r\n                break;\r\n                //造成几倍伤害 兵器前方加气流\r\n            case 47:\r\n            case 48:\r\n                // params.weaponAttack = params.weaponAttack * hurt;\r\n                this.weaponLaunch(params);\r\n                break;\r\n                //向上中路各发出1件兵器 几率12%\r\n            case 51:\r\n                params.weaponType = 2;\r\n                this.weaponLaunch(params);\r\n                params.weaponType = 3;\r\n                this.weaponLaunch(params);\r\n                break;\r\n                // 向上中下路各发出1件兵器 几率8%\r\n            case 52:\r\n                params.weaponType = 1;\r\n                this.weaponLaunch(params);\r\n                params.weaponType = 2;\r\n                this.weaponLaunch(params);\r\n                params.weaponType = 3;\r\n                this.weaponLaunch(params);\r\n                break;\r\n                //100%伤害转化为生命 几率18%\r\n            case 45:\r\n            case 46:\r\n            case 49:\r\n            case 50:\r\n            case 53:\r\n            case 54:\r\n            case 55:\r\n            case 59:\r\n                this.weaponLaunch(params);\r\n                break;\r\n            case 60:\r\n                params.weaponType = 4;\r\n                this.weaponLaunch(params);\r\n                break;\r\n                //造成几倍伤害 兵器上加刀刃特效\r\n            case 56:\r\n            case 57:\r\n            case 61:\r\n                // params.weaponAttack = params.weaponAttack * hurt;\r\n                this.weaponLaunch(params);\r\n                break;\r\n                //兵器耐久提升100%\r\n            case 62:\r\n                params.weaponDurable = params.weaponDurable * durable;\r\n                this.weaponLaunch(params);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    removeWeapon(target) {\r\n        let targetWeapons = target.isSelf ? this.selfWeapons : this.otherWeapons;\r\n        for (let i = 0, len = targetWeapons.length; i < len; i++) {\r\n            if (targetWeapons[i] == target) {\r\n                targetWeapons.splice(i, 1);\r\n                //console.log(\"删除自己\")\r\n                break;\r\n            }\r\n        }\r\n        console.log('删除后数组' + target.isSelf, targetWeapons)\r\n    }\r\n    //闪避技能 可能双方都要用\r\n    dodgeSkillShow(isSelf) {\r\n        let name = isSelf ? 'self' : 'other';\r\n        let originMP = this[name + 'Player'].comp.MPComp.originMP;\r\n        let consumeMP = 0.2 * originMP;\r\n        if (this[name + 'Player'].comp.MPComp.curMP < consumeMP) {\r\n            if (isSelf) {\r\n                this.playerStateComp.setStateText(\"内力不足\")\r\n            }\r\n            return;\r\n        }\r\n        if (isSelf) {\r\n            this.dodgeComp.startT()\r\n        }\r\n        this.showSkillText(isSelf, \"闪避\")\r\n        this[name + \"Player\"].comp.MPComp.changeMP(-consumeMP)\r\n        console.error('闪避技能使用')\r\n        this[name + 'Player'].comp.dodgeEffect();\r\n    }\r\n    // 全局碰撞检测\r\n    collisionDetection() {\r\n\r\n\r\n    }\r\n    //关卡结束\r\n    passOver() {\r\n\r\n    }\r\n    gameOver(loserIsSelf) {\r\n        this.gameState='over';\r\n        Laya.MouseManager.enabled = false;\r\n        if (!loserIsSelf) {\r\n            this.selfPlayer.comp.skeleton.play('win', true);\r\n        }else{\r\n            this.otherPlayer.comp.skeleton.play('win',true);\r\n        }\r\n        Laya.timer.clearAll(this);\r\n        console.error('游戏结束');\r\n\r\n        this.selfPlayer.comp.MPComp.stopIncrease();\r\n        this.otherPlayer.comp.MPComp.stopIncrease();\r\n       \r\n        //删除界面上兵器\r\n        this.selfWeapons.forEach((weapon) => {\r\n            weapon.endMove();\r\n        })\r\n        this.otherWeapons.forEach((weapon) => {\r\n            weapon.endMove();\r\n        })\r\n        Laya.timer.once(3000,this,()=>{\r\n            this.navigator.pop();\r\n        })\r\n          \r\n    }\r\n    onDestroy() {\r\n        console.error('destroy111');\r\n        this.selfWeapons = null;\r\n        this.otherWeapons = null;\r\n        Laya.timer.clearAll(this);\r\n        Laya.MouseManager.enabled = true;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/gamescripts/GameControl.js?");

/***/ })

})